/*
Copyright The Kmodules Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	rest "k8s.io/client-go/rest"
	v1alpha1 "kmodules.xyz/resource-metadata/apis/meta/v1alpha1"
)

// PathFindersGetter has a method to return a PathFinderInterface.
// A group's client should implement this interface.
type PathFindersGetter interface {
	PathFinders() PathFinderInterface
}

// PathFinderInterface has methods to work with PathFinder resources.
type PathFinderInterface interface {
	Create(*v1alpha1.PathFinder) (*v1alpha1.PathFinder, error)
	PathFinderExpansion
}

// pathFinders implements PathFinderInterface
type pathFinders struct {
	client rest.Interface
}

// newPathFinders returns a PathFinders
func newPathFinders(c *MetaV1alpha1Client) *pathFinders {
	return &pathFinders{
		client: c.RESTClient(),
	}
}

// Create takes the representation of a pathFinder and creates it.  Returns the server's representation of the pathFinder, and an error, if there is any.
func (c *pathFinders) Create(pathFinder *v1alpha1.PathFinder) (result *v1alpha1.PathFinder, err error) {
	result = &v1alpha1.PathFinder{}
	err = c.client.Post().
		Resource("pathfinders").
		Body(pathFinder).
		Do().
		Into(result)
	return
}
