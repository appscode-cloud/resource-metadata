
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: resourcedescriptors.meta.k8s.appscode.com
spec:
  group: meta.k8s.appscode.com
  names:
    kind: ResourceDescriptor
    listKind: ResourceDescriptorList
    plural: resourcedescriptors
    shortNames:
    - rd
    singular: resourcedescriptor
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              additionalPrinterColumns:
                description: additionalPrinterColumns specifies additional columns
                  returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                  for details. If no columns are specified, a single column displaying
                  the age of the custom resource is used.
                items:
                  description: CustomResourceColumnDefinition specifies a column for
                    server side printing.
                  properties:
                    description:
                      description: description is a human readable description of
                        this column.
                      type: string
                    format:
                      description: format is an optional OpenAPI type definition for
                        this column. The 'name' format is applied to the primary identifier
                        column to assist in clients identifying column is the resource
                        name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                        for details.
                      type: string
                    jsonPath:
                      description: jsonPath is a simple JSON path (i.e. with array
                        notation) which is evaluated against each custom resource
                        to produce the value for this column.
                      type: string
                    name:
                      description: name is a human readable name for the column.
                      type: string
                    priority:
                      description: priority is an integer defining the relative importance
                        of this column compared to others. Lower numbers are considered
                        higher priority. Columns that may be omitted in limited space
                        scenarios should be given a priority greater than 0.
                      format: int32
                      type: integer
                    type:
                      description: type is an OpenAPI type definition for this column.
                        See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                        for details.
                      type: string
                  required:
                  - jsonPath
                  - name
                  - type
                  type: object
                type: array
              connections:
                items:
                  properties:
                    labels:
                      items:
                        enum:
                        - id
                        - config
                        - backup_via
                        - catalog
                        - connect_via
                        - exposed_by
                        - monitored_by
                        - offshoot
                        - restore_into
                        - scaled_by
                        - view
                        - cert_issuer
                        - policy
                        - recommended_for
                        - ops
                        type: string
                      type: array
                    level:
                      type: string
                    nameTemplate:
                      type: string
                    namespacePath:
                      type: string
                    references:
                      description: "References are a jsonpath that returns a CSV formatted
                        references to target resources \n If each row has a single
                        column, it is target name. Target resource is non-namespaced
                        or uses the same namespace as the source resource. Example:
                        n1 n2 \n If each row has two columns, it is target [name,namespace].
                        Example: n1,ns1 n2,ns2 \n If each row has three columns, it
                        is target [name,namespace,kind]. Example: n1,ns1,k1 n2,ns2,k2
                        \n If each row has four columns, it is target [name,namespace,kind,apiGroup].
                        Example: n1,ns1,k1,apiGroup1 n2,ns2,k2,apiGroup2"
                      items:
                        type: string
                      type: array
                    selector:
                      description: A label selector is a label query over a set of
                        resources. The result of matchLabels and matchExpressions
                        are ANDed. An empty label selector matches all objects. A
                        null label selector matches no objects.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    selectorPath:
                      type: string
                    target:
                      description: TypeMeta describes an individual object in an API
                        response or request with strings representing the type of
                        the object and its API schema version. Structures that are
                        versioned or persisted should inline TypeMeta.
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      type: object
                    targetLabelPath:
                      description: 'default: metadata.labels'
                      type: string
                    type:
                      enum:
                      - MatchSelector
                      - MatchName
                      - MatchRef
                      - OwnedBy
                      type: string
                  required:
                  - labels
                  - target
                  - type
                  type: object
                type: array
              exec:
                items:
                  properties:
                    alias:
                      type: string
                    command:
                      items:
                        type: string
                      type: array
                    container:
                      type: string
                    help:
                      type: string
                    if:
                      properties:
                        condition:
                          type: string
                        connected:
                          properties:
                            query:
                              properties:
                                byLabel:
                                  enum:
                                  - id
                                  - config
                                  - backup_via
                                  - catalog
                                  - connect_via
                                  - exposed_by
                                  - monitored_by
                                  - offshoot
                                  - restore_into
                                  - scaled_by
                                  - view
                                  - cert_issuer
                                  - policy
                                  - recommended_for
                                  - ops
                                  type: string
                                raw:
                                  type: string
                                type:
                                  enum:
                                  - REST
                                  - GraphQL
                                  type: string
                              required:
                              - type
                              type: object
                            ref:
                              description: GroupKind specifies a Group and a Kind,
                                but does not force a version.  This is useful for
                                identifying concepts during lookup stages without
                                having partially valid types
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                              required:
                              - group
                              - kind
                              type: object
                          required:
                          - query
                          - ref
                          type: object
                      type: object
                    serviceNameTemplate:
                      type: string
                  required:
                  - alias
                  type: object
                type: array
              links:
                description: Links are a list of descriptive URLs intended to be used
                  to surface additional documentation, dashboards, etc.
                items:
                  description: Link contains information about an URL to surface documentation,
                    dashboards, etc.
                  properties:
                    description:
                      description: Description is human readable content explaining
                        the purpose of the link.
                      type: string
                    url:
                      description: Url typically points at a website address.
                      type: string
                  type: object
                type: array
              maintainers:
                description: Maintainers is an optional list of maintainers of the
                  application. The maintainers in this list maintain the source code,
                  images, and package for the application.
                items:
                  description: ContactData contains information about an individual
                    or organization.
                  properties:
                    email:
                      description: Email is the email address.
                      type: string
                    name:
                      description: Name is the descriptive name.
                      type: string
                    url:
                      description: Url could typically be a website address.
                      type: string
                  type: object
                type: array
              resource:
                description: ResourceID identifies a resource
                properties:
                  group:
                    type: string
                  kind:
                    description: Kind is the serialized kind of the resource.  It
                      is normally CamelCase and singular.
                    type: string
                  name:
                    description: 'Name is the plural name of the resource to serve.  It
                      must match the name of the CustomResourceDefinition-registration
                      too: plural.group and it must be all lowercase.'
                    type: string
                  scope:
                    description: ResourceScope is an enum defining the different scopes
                      available to a custom resource
                    type: string
                  version:
                    type: string
                required:
                - group
                type: object
              subresources:
                description: subresources specify what subresources this version of
                  the defined custom resource have.
                properties:
                  scale:
                    description: scale indicates the custom resource should serve
                      a `/scale` subresource that returns an `autoscaling/v1` Scale
                      object.
                    properties:
                      labelSelectorPath:
                        description: 'labelSelectorPath defines the JSON path inside
                          of a custom resource that corresponds to Scale `status.selector`.
                          Only JSON paths without the array notation are allowed.
                          Must be a JSON Path under `.status` or `.spec`. Must be
                          set to work with HorizontalPodAutoscaler. The field pointed
                          by this JSON path must be a string field (not a complex
                          selector struct) which contains a serialized label selector
                          in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                          If there is no value under the given path in the custom
                          resource, the `status.selector` value in the `/scale` subresource
                          will default to the empty string.'
                        type: string
                      specReplicasPath:
                        description: specReplicasPath defines the JSON path inside
                          of a custom resource that corresponds to Scale `spec.replicas`.
                          Only JSON paths without the array notation are allowed.
                          Must be a JSON Path under `.spec`. If there is no value
                          under the given path in the custom resource, the `/scale`
                          subresource will return an error on GET.
                        type: string
                      statusReplicasPath:
                        description: statusReplicasPath defines the JSON path inside
                          of a custom resource that corresponds to Scale `status.replicas`.
                          Only JSON paths without the array notation are allowed.
                          Must be a JSON Path under `.status`. If there is no value
                          under the given path in the custom resource, the `status.replicas`
                          value in the `/scale` subresource will default to 0.
                        type: string
                    required:
                    - specReplicasPath
                    - statusReplicasPath
                    type: object
                  status:
                    description: 'status indicates the custom resource should serve
                      a `/status` subresource. When enabled: 1. requests to the custom
                      resource primary endpoint ignore changes to the `status` stanza
                      of the object. 2. requests to the custom resource `/status`
                      subresource ignore changes to anything other than the `status`
                      stanza of the object.'
                    type: object
                type: object
              validation:
                description: validation describes the schema used for validation and
                  pruning of the custom resource. If present, this validation schema
                  is used to validate all versions. Top-level and per-version schemas
                  are mutually exclusive.
                properties:
                  openAPIV3Schema:
                    description: openAPIV3Schema is the OpenAPI v3 schema to use for
                      validation and pruning.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
            required:
            - resource
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
