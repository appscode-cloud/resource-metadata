// Package resourceclasses Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// admin.yaml
// config.yaml
// extra/admissionregistration.yaml
// extra/apiextension.yaml
// extra/apiregistration.yaml
// extra/authentication.yaml
// extra/authorization.yaml
// extra/autoscaling.yaml
// extra/certificate.yaml
// extra/coordination.yaml
// extra/core.yaml
// extra/event.yaml
// extra/example.yaml
// extra/extension.yaml
// extra/node.yaml
// extra/scheduling.yaml
// networking.yaml
// security.yaml
// storage.yaml
// workloads.yaml
package resourceclasses

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _adminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x4f\x8b\xdb\x40\x0c\xc5\xef\xfe\x14\x22\xd7\x52\x9b\x1c\x0a\x61\x6e\x25\xbd\x14\x4a\xa1\x29\xf4\xae\x8c\x55\x5b\x64\xfe\x75\x24\xbb\xbb\xfb\xe9\x97\xf1\xda\x9b\x84\x60\x96\xb0\xec\x4d\x96\xe5\xf7\x7b\x7a\x58\x98\xf8\x0f\x65\xe1\x18\x0c\x78\x52\xac\x31\x25\xb1\xb1\xa5\xda\x46\xdf\x8c\x5b\x74\xa9\xc7\x6d\x75\xe2\xd0\x1a\x38\x90\xc4\x21\x5b\xda\x3b\x14\xa9\xca\x78\x8b\x8a\xa6\x02\x08\xe8\xc9\xc0\xd7\xd6\x73\xa8\x24\x91\x2d\x3d\x0a\x9a\x99\xa4\x94\x9f\xe7\x81\x9f\xe8\x49\x12\x5a\x92\x0a\x00\x20\x26\xe5\x18\xd0\x19\xf8\x8b\x4e\x68\xea\xe9\x63\x22\x33\x55\x00\x5d\x8e\x43\x32\xb0\xd9\xcc\xcf\x79\xe6\x9b\x49\xee\x42\x08\x60\x5c\x96\x18\xb7\x17\xbc\x1f\xec\x59\xe1\x80\xa1\xbb\x21\x6a\x1e\xee\x01\xba\xa2\x94\xcf\x42\x6b\xc4\x25\x22\xf8\x35\x44\xc5\x77\x42\x97\xea\xdf\x59\x6b\x8d\xbb\x77\x83\x28\x65\x38\x44\x77\x5f\xb8\xf9\x88\xb6\xc6\x41\xfb\x98\xf9\x09\xcb\x27\xf5\x69\x27\x35\xc7\x1b\x37\xf6\x05\x91\x5f\x09\xab\x19\x7c\x9c\x87\xb7\xe1\xfb\xdf\xdf\xe1\x5b\xe6\xf2\xf2\x8e\xf0\x45\x63\xc6\x8e\x56\x57\x17\x6e\x2f\x34\xaf\xd8\x47\x52\x2c\x06\xd8\xc6\x30\xff\xec\x92\xad\x81\x5e\x35\x89\x69\x1a\xdb\x86\xeb\xa3\x3a\xed\xa4\x99\x86\x9b\x05\x60\xcb\x3d\x91\x34\x58\xee\xa7\x96\xb1\x3b\xdb\x04\xf6\xd8\x51\x23\x63\xf7\xe9\xc1\xbb\x0a\xe0\x3f\x71\xd7\xab\x81\x2f\xd5\x73\x00\x00\x00\xff\xff\xb1\x09\xee\x26\xbb\x03\x00\x00")

func adminYamlBytes() ([]byte, error) {
	return bindataRead(
		_adminYaml,
		"admin.yaml",
	)
}

func adminYaml() (*asset, error) {
	bytes, err := adminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin.yaml", size: 955, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x3d\x4f\xc3\x30\x10\x86\x77\xff\x8a\x57\x5d\x11\xb5\xb2\x21\xaf\x1d\x98\x58\x40\x62\x3f\x39\x57\xd7\x8a\x3f\x4e\x3e\x37\x85\x7f\x8f\x12\x35\x22\x65\xc5\x93\x75\x3e\x3f\xef\x07\x49\xfc\xe4\xa6\xb1\x16\x87\xcc\x9d\x8e\x24\xa2\xbe\x8e\x7c\xf4\x35\xdb\x79\xa0\x24\x17\x1a\xcc\x14\xcb\xe8\xf0\xce\x5a\xaf\xcd\xf3\x29\x91\xaa\x59\xd6\x47\xea\xe4\x0c\x50\x28\xb3\xc3\xa9\x96\x73\x0c\x46\x85\xfd\x32\x24\x89\xaf\xad\x5e\xc5\xe1\x70\x30\x00\x97\xde\x22\xeb\xf2\xf2\xfc\xf0\x01\x6f\x24\x6a\x00\xa0\x4a\x8f\xb5\x50\x72\x38\x53\x52\x5e\x67\xfd\x5b\xd8\xad\x37\x20\xec\x70\xcb\x69\x77\x43\x0e\x7e\x25\xe5\x0d\x04\xcc\x5b\xaa\x79\xd8\x09\x7e\xb0\x6f\xdc\xff\x2b\xa6\x3b\xca\x5f\xa5\xe8\x6b\xb9\x67\xd4\xe6\x1d\x2e\xbd\x8b\x3a\x6b\xfd\x58\x1e\xbb\x9d\x5e\xd4\xae\xcb\x76\x03\xfb\xa5\x56\x56\x7b\xab\x6d\x4a\x95\x46\x3d\xea\x1c\x7e\x6d\x21\x66\x0a\x6c\x75\x0e\x4f\x5f\x39\x19\xe0\xc6\x31\x5c\xba\xc3\x60\x7e\x02\x00\x00\xff\xff\xca\xab\x46\x7d\xc6\x01\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 454, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraAdmissionregistrationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x31\x4e\x04\x31\x0c\x45\xfb\x9c\xe2\x5f\x80\x41\xdb\xa1\x74\x88\x82\x1e\x21\x7a\x93\x31\xb3\xd6\x24\x71\x14\x3b\x83\xb8\x3d\xca\xb2\x74\x14\x50\x90\x2a\x92\xdf\xb3\xbf\x4d\x4d\x5e\xb8\x9b\x68\x8d\x28\xec\xb4\x50\x6b\x96\x74\xe5\x25\x69\xb9\x3d\x4e\x94\xdb\x99\x4e\x61\x97\xba\x46\x3c\xb1\xe9\xe8\x89\x1f\x32\x99\x85\x89\xaf\xe4\x14\x03\x90\x3a\x93\x8b\xd6\x67\x29\x6c\x4e\xa5\x45\xd4\x91\x73\x00\x2a\x15\x8e\xb8\x5f\x8b\xd8\x9c\xd2\x79\x13\xf3\x7e\x81\x83\x35\x4e\xd3\xa6\x26\x8f\x5d\x47\x8b\xa0\x9f\xb8\x65\xbf\xb3\x45\x34\x00\x5c\xbd\x0b\xdb\x74\x6e\xa0\x6d\x16\x29\x47\x78\x1f\x1c\x00\xc0\x3f\x1a\xc7\xcb\x0f\xd8\x7e\xd5\x71\xbe\x7e\x5d\x2b\xa2\x0c\x27\x97\xba\xbd\xf3\xeb\x59\x75\x4f\x5a\xdf\x64\x1b\x5f\x8e\x5d\xe9\xe3\xfb\x5c\xc7\xe9\xbf\x62\x1c\x94\x65\xfd\x53\x90\xcf\x00\x00\x00\xff\xff\x8f\x8c\x20\xdd\xc7\x01\x00\x00")

func extraAdmissionregistrationYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraAdmissionregistrationYaml,
		"extra/admissionregistration.yaml",
	)
}

func extraAdmissionregistrationYaml() (*asset, error) {
	bytes, err := extraAdmissionregistrationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/admissionregistration.yaml", size: 455, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraApiextensionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x31\x4e\x05\x31\x0c\x44\xfb\x9c\x62\x2e\xc0\xa2\xed\x50\x3a\x44\x41\x8f\x10\xbd\x95\x35\x60\xfd\x24\xb6\x62\x67\x05\xb7\x47\x41\xff\x53\xe2\x6a\x2c\x3f\xcf\x58\x26\x93\x37\x1e\x2e\xda\x33\x1a\x07\x6d\x64\xe6\x45\x0f\xde\x8a\xb6\xfb\x73\xa7\x6a\x9f\xb4\xa7\x8b\xf4\x23\xe3\x85\x5d\xe7\x28\xfc\x54\xc9\x3d\x2d\xfc\xa0\xa0\x9c\x80\x32\x98\x42\xb4\xbf\x4a\x63\x0f\x6a\x96\xd1\x67\xad\x09\xe8\xd4\x38\xe3\xd1\x84\xbf\x82\xfb\x0a\x4a\x6e\x5c\xd6\x12\x99\x3c\x0f\x9d\x96\x97\xfa\x1b\xfb\x76\x79\xf0\x4d\x34\x01\xdc\x63\x08\xfb\x62\xef\xa0\xb6\x02\xa8\x66\xc4\x98\x9c\x00\x20\xbe\x8d\xf3\xaf\x02\x3e\xfe\x75\x5a\x35\xae\xd7\x67\x94\xe9\xa1\xed\xd6\x1f\xfc\x2e\x5d\x96\xb9\x5f\xc9\xf3\xf6\x91\x73\x4f\x3f\x01\x00\x00\xff\xff\xe0\x59\xf7\x8d\x21\x01\x00\x00")

func extraApiextensionYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraApiextensionYaml,
		"extra/apiextension.yaml",
	)
}

func extraApiextensionYaml() (*asset, error) {
	bytes, err := extraApiextensionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/apiextension.yaml", size: 289, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraApiregistrationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd0\xbd\x4a\x05\x41\x0c\x05\xe0\x7e\x9e\xe2\xbc\x80\x2b\xdb\xc9\x74\x62\x61\x2f\x62\x1f\x66\xc3\x35\xdc\xf9\x09\x49\x76\xc1\xb7\x97\x59\x56\xb0\xbb\x53\x1d\x38\xdf\x04\x12\x52\xf9\x62\x73\x19\x3d\xa3\x71\xd0\x42\xaa\x5e\xc6\xc6\x4b\x19\xed\xf9\x58\xa9\xea\x37\xad\xe9\x2e\x7d\xcb\xf8\x60\x1f\xbb\x15\x7e\xab\xe4\x9e\x26\xdf\x28\x28\x27\xa0\x18\x53\xc8\xe8\x9f\xd2\xd8\x83\x9a\x66\xf4\xbd\xd6\x04\x74\x6a\x9c\xf1\xaa\x62\x7c\x13\x0f\x3b\x59\x72\xe5\x32\xff\x91\xca\xbb\x8d\x5d\xf3\x4c\xff\xc5\x72\x7f\xf1\x45\x46\x02\xb8\x87\x09\xfb\xd4\x4f\x18\x3a\x4b\xaa\x19\x61\x3b\x27\x00\x88\x1f\xe5\x7c\x26\xe0\xf6\x60\xd6\x7c\x76\x2d\x71\x32\x67\x3b\xa4\xb0\x5f\xdd\xf1\x77\x8a\x63\x4d\xbf\x01\x00\x00\xff\xff\x70\xf4\x31\x53\x1a\x01\x00\x00")

func extraApiregistrationYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraApiregistrationYaml,
		"extra/apiregistration.yaml",
	)
}

func extraApiregistrationYaml() (*asset, error) {
	bytes, err := extraApiregistrationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/apiregistration.yaml", size: 282, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraAuthenticationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd0\xb1\x4a\x45\x31\x0c\x06\xe0\xbd\x4f\xf1\xbf\x80\x47\xee\x26\xdd\xc4\xc1\x5d\xc4\x3d\xf4\x04\x6f\x38\x6d\x13\x9a\xf4\x88\x6f\x2f\xbd\x5c\x07\x17\x33\x05\xfe\x2f\x81\x84\x4c\x3e\x78\xb8\x68\xcf\x68\x1c\xb4\x91\x99\x17\xdd\x79\x2b\xda\x1e\xcf\x0b\x55\xbb\xd2\x25\x1d\xd2\xf7\x8c\x37\x76\x9d\xa3\xf0\x4b\x25\xf7\xb4\xf8\x4e\x41\x39\x01\x65\x30\x85\x68\x7f\x97\xc6\x1e\xd4\x2c\xa3\xcf\x5a\x13\xd0\xa9\x71\xc6\xf3\x8c\x2b\xf7\x90\x72\x53\xc9\x8d\xcb\x1a\x23\x93\xd7\xa1\xd3\x32\xe8\x0f\xd8\x8e\x27\xdf\x44\x13\xc0\x3d\x86\xb0\x2f\xfc\x00\xb5\x15\x52\xcd\x88\x31\x39\x01\x40\x7c\x1b\xe7\x5b\x07\x7c\xfe\xbf\x6a\xd5\xb8\x5f\x90\x11\x7a\x70\x1f\x7c\x0a\x7f\xf9\x3d\x3c\x7f\x1f\x71\x5e\xd2\x4f\x00\x00\x00\xff\xff\xc6\x48\xc2\xd3\x18\x01\x00\x00")

func extraAuthenticationYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraAuthenticationYaml,
		"extra/authentication.yaml",
	)
}

func extraAuthenticationYaml() (*asset, error) {
	bytes, err := extraAuthenticationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/authentication.yaml", size: 280, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraAuthorizationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x90\x31\x4e\x04\x31\x0c\x45\xfb\x9c\xe2\x5f\x80\x41\xd3\xa1\x74\x88\x82\x1e\x21\x7a\x93\x31\xac\xd9\x4c\x6c\xd9\xc9\x20\x38\x3d\x9a\xd5\x22\x51\x21\x0a\x04\xa9\x22\xfd\x67\x3f\xdb\x64\xf2\xc0\x1e\xa2\x2d\x63\xe5\x4e\x13\x99\x45\xd1\x85\xa7\xa2\xeb\xe5\x36\x53\xb5\x03\xcd\xe9\x28\x6d\xc9\xb8\xe3\xd0\xe1\x85\x6f\x2a\x45\xa4\x1d\x5f\xa8\x53\x4e\x40\x71\xa6\x2e\xda\xee\x65\xe5\xe8\xb4\x5a\x46\x1b\xb5\x26\xa0\xd1\xca\x19\xd7\xa3\x1f\xd4\xe5\xfd\x04\xa5\x30\x2e\x7b\x15\x99\xdc\xba\x0e\xcb\xa0\xaf\xf9\x74\xbc\x8a\x49\x34\x01\xdc\xba\x0b\xc7\xce\x5e\x40\x6d\x0f\xa9\x66\x74\x1f\x9c\x00\xa0\xbf\x19\xe7\xd3\x0f\x78\xfe\xb6\xd3\xfe\xfc\x3c\x7e\x46\xd5\x42\x35\xc6\xe3\x0b\x97\x4e\xa5\x70\x84\xf3\x26\xfc\x1a\x67\x72\xfb\x3c\xc9\x36\xff\xb6\x3a\xb8\x3e\xfd\xbb\xd9\x47\xe5\x3f\x14\xff\x6c\xdd\x8f\x00\x00\x00\xff\xff\xdc\x36\x6b\x60\x8b\x02\x00\x00")

func extraAuthorizationYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraAuthorizationYaml,
		"extra/authorization.yaml",
	)
}

func extraAuthorizationYaml() (*asset, error) {
	bytes, err := extraAuthorizationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/authorization.yaml", size: 651, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraAutoscalingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcf\xc1\x4a\x04\x31\x0c\x06\xe0\x7b\x9f\xe2\x7f\x01\x57\xe6\xda\x9b\x78\xf0\x2e\xe2\x3d\x74\xc2\x6e\xb1\x6d\x42\x92\x0e\xe8\xd3\x4b\x65\x07\x3c\x6c\x4e\x81\x7c\xf9\x49\x48\xeb\x27\x9b\x57\x19\x19\x9d\x83\x2e\xa4\xea\x45\x76\xbe\x14\xe9\xcf\xc7\x46\x4d\x6f\xb4\xa5\xaf\x3a\xf6\x8c\x77\x76\x99\x56\xf8\xb5\x91\x7b\x5a\x7c\xa7\xa0\x9c\x80\x62\x4c\x51\x65\x7c\xd4\xce\x1e\xd4\x35\x63\xcc\xd6\x12\x30\xa8\x73\xc6\xcb\x0c\xf1\x42\xad\x8e\x6b\x72\xe5\xb2\x76\x48\xeb\x9b\xc9\xd4\x0c\xfa\x37\x05\x78\x84\x55\xf6\x45\x9e\x20\xba\x62\xa9\x65\x84\x4d\x4e\x00\x10\xdf\xca\xf9\xaf\x03\xae\x8f\x02\x56\xd9\xfd\xd4\x8c\x9b\x58\xfd\x91\x11\xd4\x54\xf6\x13\xb2\xf9\x1d\x1e\xe7\xf7\xc7\x96\x7e\x03\x00\x00\xff\xff\x96\xf2\xf2\x77\x0d\x01\x00\x00")

func extraAutoscalingYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraAutoscalingYaml,
		"extra/autoscaling.yaml",
	)
}

func extraAutoscalingYaml() (*asset, error) {
	bytes, err := extraAutoscalingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/autoscaling.yaml", size: 269, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraCertificateYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd0\x31\x4a\x05\x41\x0c\x06\xe0\x7e\x4e\xf1\x5f\xc0\x95\xed\x64\xda\x57\xd8\x8b\xd8\xc7\xd9\xb8\x86\xb7\x33\x13\x93\xcc\x82\xb7\x97\x91\x27\x62\x63\xaa\x40\xbe\xfc\x84\x90\xca\x0b\x9b\x4b\x6f\x19\x95\x83\x16\x52\xf5\xd2\x37\x5e\x4a\xaf\xf7\xe7\x4a\x87\xbe\xd3\x9a\xae\xd2\xb6\x8c\x27\xf6\x3e\xac\xf0\xe5\x20\xf7\x34\xf9\x46\x41\x39\x01\xc5\x98\x42\x7a\x7b\x96\xca\x1e\x54\x35\xa3\x8d\xe3\x48\x40\xa3\xca\x19\x17\xb6\x90\x37\x29\x14\x9c\x5c\xb9\xcc\x1d\x52\x79\xb4\x3e\x34\xa3\xfc\x4e\x7d\xb9\x3e\xf8\x22\x3d\x01\xdc\xc2\x84\x7d\xd2\x3b\x74\x9d\xf1\x74\x64\x84\x0d\x4e\x00\x10\x9f\xca\xf9\xbb\x03\xf6\xff\x82\x66\xd9\xed\xf4\xbf\x46\xf6\x26\x6d\x37\xfe\x18\xec\xe1\x37\x7a\xfe\xfc\xe3\x5c\x5f\x39\x68\x4d\x5f\x01\x00\x00\xff\xff\xa5\xd6\xbd\xf1\x24\x01\x00\x00")

func extraCertificateYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraCertificateYaml,
		"extra/certificate.yaml",
	)
}

func extraCertificateYaml() (*asset, error) {
	bytes, err := extraCertificateYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/certificate.yaml", size: 292, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraCoordinationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\x05\x31\x0c\x45\xf7\xfd\x8a\xfb\x03\x8e\xcc\x4e\xb2\x7d\x0b\xf7\x22\xee\x43\x27\x68\x78\x6d\x13\x9a\x76\xc0\xbf\x97\x3e\x46\x70\x65\x56\x21\xe7\x24\xe4\xb2\xeb\x87\xf4\x50\x6b\x84\x2a\x83\x37\x76\x8f\x6c\x87\x6c\xd9\xea\xf3\xb9\x73\xf1\x2f\xde\xd3\x5d\xdb\x41\x78\x93\xb0\xd9\xb3\xdc\x0a\x47\xa4\xa5\x1f\x3c\x98\x12\x90\xbb\xf0\x50\x6b\xef\x5a\x25\x06\x57\x27\xb4\x59\x4a\x02\x1a\x57\x21\xdc\xcc\xfa\xa1\xed\xe1\xa4\x70\xc9\x6b\x89\x5d\x5f\xbb\x4d\x27\xe4\x3f\x78\xbb\xbf\xc4\xa6\x96\x00\x69\xa3\xab\xc4\x52\x9f\x60\xbe\x20\x17\xc2\xe8\x53\x12\x00\x8c\x6f\x17\x7a\x74\xc0\xe7\x7f\x87\x56\xf5\xeb\x77\x42\x11\x0e\x89\x6b\x7c\xfe\x86\x3f\xf7\xf4\x13\x00\x00\xff\xff\x44\x56\x7c\x57\x0c\x01\x00\x00")

func extraCoordinationYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraCoordinationYaml,
		"extra/coordination.yaml",
	)
}

func extraCoordinationYaml() (*asset, error) {
	bytes, err := extraCoordinationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/coordination.yaml", size: 268, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraCoreYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd4\xb1\x6e\xe3\x30\x0c\x00\xd0\xdd\x5f\x41\x64\xbf\x1c\xb2\x6a\xcd\x70\xfb\xa1\xe8\xce\x48\x8c\x4b\x54\x22\x59\x91\x36\xd0\xbf\x2f\x94\xa6\x40\x87\x6c\xb1\x3d\x09\x26\xf1\x48\x13\xb4\xd0\xf8\x95\xba\xb3\x4a\x82\x46\x81\x47\x34\xf3\xac\x85\x8e\x59\xdb\xdf\xf5\x84\xd5\xde\xf0\x34\xbd\xb3\x94\x04\xff\xc9\x75\xe9\x99\xce\x15\xdd\xa7\x91\x5e\x30\x30\x4d\x00\xb9\x13\x06\xab\xbc\x70\x23\x0f\x6c\x96\x40\x96\x5a\x27\x00\xc1\x46\x09\xce\xda\x69\x72\xa3\x3c\x92\xd1\xf8\x5f\xd7\xc5\x12\x1c\x0e\x13\x00\x15\x0e\xbc\x54\x4a\x70\xc5\xea\x34\xde\x48\x74\x26\x1f\xb9\x7f\x40\x6d\xc0\x58\x13\x44\x5f\x46\x14\x20\x3e\x8d\xd2\xed\x04\x30\xff\x92\xc6\xd3\xef\x3d\x26\xb8\xb0\x14\x96\xd9\xef\x81\xf5\xe7\x33\xd7\xd3\x73\x6e\xd6\x66\x2a\x24\xe1\x81\xb1\x38\xed\x50\x40\xae\x3c\x37\xb4\xcd\x65\x92\x62\xca\x12\xdb\xc3\x2b\xed\xa0\x56\x6e\x1c\x1d\x65\xde\x7e\xc6\x63\x2d\xdd\x30\xef\x20\x6b\x79\x88\x3e\xa7\x9a\x96\xcd\x3b\x35\x2d\x41\xcd\x2a\xc6\xf6\x53\xe8\x64\x95\xf3\xed\x4e\xc8\x2a\xd1\xb5\x56\xea\x3b\x54\xf9\x3e\x7d\x2c\x1a\xb8\xb9\xee\x94\x3b\x6d\xbf\xd5\x4e\x7d\xe5\x4c\x98\xb3\x2e\x3b\xfc\x34\x77\xfe\x91\xfb\x15\x00\x00\xff\xff\x4c\x47\x78\xb5\xed\x05\x00\x00")

func extraCoreYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraCoreYaml,
		"extra/core.yaml",
	)
}

func extraCoreYaml() (*asset, error) {
	bytes, err := extraCoreYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/core.yaml", size: 1517, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraEventYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcd\x4a\x05\x31\x0c\x85\xf7\x7d\x8a\xf3\x02\x8e\xcc\x4e\xba\x15\x71\x2f\xe2\x3e\x76\x0e\x5a\x6e\x7f\x42\x93\x29\xf8\xf6\x52\xb9\xb3\x33\xab\x70\xf2\xf1\x91\x23\x9a\x3f\x38\x2c\xf7\x16\x51\xe9\xb2\x89\xaa\xa5\x7e\x70\x4b\xbd\x3e\xce\x5d\x8a\x7e\xcb\x1e\x6e\xb9\x1d\x11\x6f\xb4\x7e\x8e\xc4\xe7\x22\x66\x61\xe1\x87\xb8\xc4\x00\xa4\x41\xf1\xdc\xdb\x7b\xae\x34\x97\xaa\x11\xed\x2c\x25\x00\x4d\x2a\x23\x5e\x26\x9b\x07\x53\xa6\x45\x8b\xe6\xd7\xd1\x4f\x8d\xe0\xca\x6d\xbb\x3d\xd9\x96\x7b\x00\xd8\x7c\x64\xda\x82\x1e\xd0\x75\x29\xa5\x44\xf8\x38\x19\x00\xc0\x7f\x94\xf1\x6f\x03\xbe\xfe\x57\xac\x19\xf7\x47\xaf\xeb\x3d\x9e\x57\xd3\xb9\x7f\xd2\x65\x0f\xbf\x01\x00\x00\xff\xff\xdf\x3b\xd9\x4d\xfe\x00\x00\x00")

func extraEventYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraEventYaml,
		"extra/event.yaml",
	)
}

func extraEventYaml() (*asset, error) {
	bytes, err := extraEventYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/event.yaml", size: 254, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x4a\x05\x41\x0c\x45\xfb\xf9\x8a\xfb\x03\x3e\xd9\x36\xad\x88\xbd\x88\x7d\x9c\x0d\x3a\x38\x33\x09\x49\x76\xd1\xbf\x97\xd1\x67\xf7\x52\x05\xee\xe1\x24\x97\xad\xbd\x8a\x47\xd3\x49\x18\x92\x7c\x61\xb3\xa8\xba\xcb\xa5\xea\xb8\x3f\x37\xee\xf6\xc1\x5b\xf9\x6c\x73\x27\x3c\x4b\xe8\xe1\x55\x1e\x3a\x47\x94\x85\xef\x9c\x4c\x05\xa8\x2e\x9c\x4d\xe7\x4b\x1b\x12\xc9\xc3\x08\xf3\xe8\xbd\x00\x93\x87\x10\x1e\xbf\x78\x58\x97\x12\x26\x75\xf1\x6c\xed\xc9\xf5\x30\x82\xfc\x25\xeb\x5c\x01\x64\xa6\x37\x89\x85\xdc\x41\x6d\x29\xb9\x13\xd2\x0f\x29\x00\x90\xdf\x26\xf4\xbb\x01\xef\xb7\x04\x6b\xfc\xfa\x26\xa1\xba\xce\xe4\xb7\xb8\x06\xe7\x7f\xd3\x73\x2b\x3f\x01\x00\x00\xff\xff\xa0\x22\x1a\x60\xf9\x00\x00\x00")

func extraExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraExampleYaml,
		"extra/example.yaml",
	)
}

func extraExampleYaml() (*asset, error) {
	bytes, err := extraExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/example.yaml", size: 249, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraExtensionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x4e\xc4\x40\x0c\x84\xfb\x7d\x8a\x79\x01\x0e\xa5\x75\x8b\x10\x3d\x42\xf4\xbe\x64\x38\x56\xec\x8f\xb5\x76\x22\x78\x7b\xb4\x88\x74\xe7\xca\xf2\xe7\xf1\x78\xd4\xf2\x3b\x87\xe7\xde\x04\x95\xa1\x17\x35\xf3\xb5\x6f\xbc\xac\xbd\x3e\x1e\x8b\x16\xfb\xd4\x25\x7d\xe5\xb6\x09\x5e\xe9\x7d\x1f\x2b\x9f\x8a\xba\xa7\xb9\xbe\x69\xa8\x24\x60\x1d\xd4\xc8\xbd\xbd\xe5\x4a\x0f\xad\x26\x68\x7b\x29\x09\x68\x5a\x29\x78\xfe\x0e\xb6\xe9\x92\xdc\xb8\x4e\x85\x5a\x7e\x19\x7d\x37\x01\x4f\xe6\x09\xe0\x96\x43\xaf\x85\x82\x0f\x2d\xce\x39\x69\x31\x32\x7d\x6a\x1e\xd0\x6d\xba\x68\x11\xc4\xd8\x27\x05\xe2\xc7\x28\x7f\x1d\x70\xbb\x73\x71\xd6\xf8\x7f\x5c\x90\xdb\x6d\xd0\x9d\x27\x39\xce\xf0\xc7\x72\x65\xe8\x92\x7e\x03\x00\x00\xff\xff\xe7\x4f\xd1\x22\x11\x01\x00\x00")

func extraExtensionYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraExtensionYaml,
		"extra/extension.yaml",
	)
}

func extraExtensionYaml() (*asset, error) {
	bytes, err := extraExtensionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/extension.yaml", size: 273, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraNodeYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x4e\x04\x31\x0c\x84\xfb\x3c\x85\x5f\x80\x45\xdb\xa1\xb4\x14\x74\x14\x08\xd1\xfb\xb2\x03\x58\x97\x1f\x2b\x76\x56\xe2\xed\x91\xd1\xd1\x9d\x2b\xcb\xf3\xd9\x33\x66\x95\x0f\x4c\x93\xd1\x33\x35\x38\x6f\xac\x6a\x65\x1c\xd8\xca\x68\x8f\xe7\xce\x55\xbf\x79\x4f\x57\xe9\x47\xa6\x37\xd8\x58\xb3\xe0\xb9\xb2\x59\x0a\xfc\x60\xe7\x9c\x88\xca\x04\xbb\x8c\xfe\x2e\x0d\xe6\xdc\x34\x53\x5f\xb5\x26\xa2\xce\x0d\x99\x5e\xc7\x81\x64\x8a\x12\x30\xab\xbc\xcc\xb1\x82\x09\xa3\xeb\x93\x6d\x32\x12\x11\x0e\x71\xbe\x54\x64\xfa\xe4\x6a\x88\x49\xf7\x29\xb0\x58\x7a\xa0\xa1\xe1\xc0\x35\x93\xcf\x15\x2a\x91\xff\x28\xf2\x5f\x47\xf4\x75\xef\x64\xd4\xbc\xa5\xce\x34\x57\x77\x69\x28\x11\x1f\x76\x93\xcf\xff\xf7\xcf\xfd\x02\xe7\x3d\xfd\x06\x00\x00\xff\xff\xfe\x1f\x02\x01\x13\x01\x00\x00")

func extraNodeYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraNodeYaml,
		"extra/node.yaml",
	)
}

func extraNodeYaml() (*asset, error) {
	bytes, err := extraNodeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/node.yaml", size: 275, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extraSchedulingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xbd\x4e\x04\x31\x0c\x84\xfb\x3c\xc5\xbc\x00\x8b\xb6\x43\x6e\x29\xe8\x01\xd1\x9b\xc4\xdc\x59\x97\x1f\x2b\x4e\x56\xba\xb7\x47\x41\x0b\x1d\xae\x2c\x7f\x1e\x5b\x33\x6c\xfa\x21\xdd\xb5\x55\x42\x91\xc1\x1b\x9b\x79\x6c\x49\xb6\xd8\xca\xe3\xb1\x73\xb6\x2b\xef\xe1\xa6\x35\x11\x5e\xc5\xdb\xec\x51\x9e\x33\xbb\x87\xb5\x9e\x78\x30\x05\x20\x76\xe1\xa1\xad\xbe\x6b\x11\x1f\x5c\x8c\x50\x67\xce\x01\xa8\x5c\x84\xf0\x16\xaf\x92\x66\xd6\x7a\x09\x6e\x12\x97\x84\x4d\x5f\x7a\x9b\x46\xf0\x3f\xb8\xdd\x9e\x7c\xd3\x16\x00\x49\x3a\xf8\x33\x0b\xe1\x8b\xb3\xcb\x9a\xd4\xd1\x55\x7c\x49\x1f\xd0\x6c\x7d\xe3\x4c\x18\x7d\x2e\x0a\x8c\xbb\x09\xfd\x74\xc0\xe5\xff\xc3\xab\xfa\xe9\x83\x60\x5d\x5b\xd7\x71\x8f\xcb\x91\xf8\xc9\x8f\xdf\x44\x8e\x3d\x7c\x07\x00\x00\xff\xff\x32\x03\xdc\xd3\x21\x01\x00\x00")

func extraSchedulingYamlBytes() ([]byte, error) {
	return bindataRead(
		_extraSchedulingYaml,
		"extra/scheduling.yaml",
	)
}

func extraSchedulingYaml() (*asset, error) {
	bytes, err := extraSchedulingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extra/scheduling.yaml", size: 289, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _networkingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xbf\x6a\xf4\x30\x10\xc4\x7b\x3d\xc5\xe0\xe2\xeb\x3e\x87\xeb\x82\xda\x04\x42\x9a\x10\x12\xb8\x7e\xa3\xdb\x38\x8b\x6d\xad\xd0\xea\x14\xfc\xf6\xc1\x67\x07\x6c\x48\x93\x3f\x9d\x24\x46\xbf\x99\xd9\xa5\x24\x47\xce\x26\x1a\x3d\x46\x2e\xd4\x52\x4a\x16\xf4\xc4\x6d\xd0\xf1\xaa\x1e\x68\x48\x6f\x74\x70\xbd\xc4\x93\xc7\x13\x9b\x9e\x73\xe0\x9b\x81\xcc\xdc\x2c\x3f\x51\x21\xef\x80\x48\x23\x7b\x34\xcf\x9c\xab\x04\xc6\x3f\xdc\x8a\x05\xad\x9c\xa7\xc6\x59\xe2\x30\x6b\x28\xc9\x5d\xd6\x73\xf2\x88\x5c\xde\x35\xf7\x12\xbb\xb6\xbf\xb6\x56\xd4\x01\x1c\x4b\x16\xb6\x59\xf8\x7f\xc5\xad\x34\x73\x00\xa0\xa9\x88\x46\x1a\x3c\x5e\x69\x30\xbe\xbc\x95\x29\xb1\xbf\x9c\x80\x6e\x41\x37\xcd\x7a\xcf\x6b\x56\x0f\xdb\x62\x80\xfa\x59\xb7\x1e\x36\x5e\xf7\xb1\xcb\x6c\xf6\x3d\xb3\xaf\x7a\xec\xbd\x65\x87\xdd\x99\xbf\x70\xa1\x6d\x82\xa3\x4e\xd4\x71\xfe\x59\x92\xba\x7c\xde\x6d\xef\x37\x61\x1e\x96\x66\x78\xd4\x41\x82\xfc\xf5\x54\x56\x45\xda\xc2\xf7\x8b\xf9\x08\x00\x00\xff\xff\xa5\xcc\x3f\xe5\x97\x02\x00\x00")

func networkingYamlBytes() ([]byte, error) {
	return bindataRead(
		_networkingYaml,
		"networking.yaml",
	)
}

func networkingYaml() (*asset, error) {
	bytes, err := networkingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "networking.yaml", size: 663, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securityYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\xd1\xeb\x58\x4d\x6e\xc3\xb7\xd1\x17\x18\x2b\xec\xae\x29\x5a\x2a\x9a\xd8\xc6\x52\xdc\xe5\xed\x47\xb2\x94\xb6\x2b\x8c\xed\x26\xc4\x17\xfd\x5f\xfc\x63\x96\x37\x2e\x2a\x29\x06\x18\xd8\x70\x8b\x39\x2b\xa5\x96\xb7\x94\x06\x5f\x1b\xec\xf3\x01\x1b\x77\x94\xd8\x06\x78\x65\x4d\x63\x21\xde\xf5\xa8\xea\x66\xbc\x45\xc3\xe0\x00\x22\x0e\x1c\x60\xcf\x34\x16\xb1\xc9\x69\x66\x9a\xd7\x1c\xad\x08\xeb\x3c\x3e\xae\xcc\x4b\xea\x85\x26\x07\x00\x90\xb2\x49\x8a\xd8\x07\xb0\x32\xf2\xb2\xb2\x29\x73\x58\x26\x80\xae\xa4\x31\x07\xc8\x97\x0f\x00\xca\x6a\x30\xaf\x5b\x5d\xe3\x16\x42\x58\x57\xa6\x9e\xff\xa7\x36\xef\x6c\xd8\x5c\x85\xef\xb8\x98\x7c\x08\xa1\xad\xf4\xdf\x14\x6a\x9a\xb0\xe3\x72\xf3\x36\x77\x42\xf4\xf3\xf6\xaf\x26\x7b\x2e\x55\x88\xe1\x99\x28\x8d\xd1\xfe\x63\xb3\xd9\xdc\x65\xeb\xf7\x35\xbc\x3e\x76\x13\xef\x00\x84\x52\x5c\x9b\xd0\x42\x01\x0e\x66\x59\x83\xf7\xd4\xc6\xdb\xd2\x8f\x4f\xea\x17\xd8\x9f\x03\x68\xee\x9b\xd5\x9f\x52\x39\xf6\x09\x5b\xdd\x6a\xed\x2e\x7a\x20\x03\x76\xec\xb5\x76\x0f\x9f\x43\xef\x00\x4e\x2c\xdd\xc1\x02\x34\xee\x2b\x00\x00\xff\xff\xde\xcb\xdd\x74\x5f\x02\x00\x00")

func securityYamlBytes() ([]byte, error) {
	return bindataRead(
		_securityYaml,
		"security.yaml",
	)
}

func securityYaml() (*asset, error) {
	bytes, err := securityYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "security.yaml", size: 607, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xcd\x6a\x73\x21\x10\x86\xf7\x5e\xc5\x4b\xb6\x1f\xdf\x91\x2c\x0a\xc1\x6d\x6e\xa0\xb4\x90\xfd\xe0\x99\x1a\x89\x7f\x38\xc6\xb6\x77\x5f\xce\xa9\x69\xfa\x43\x0b\x85\xee\xc6\x71\x7c\xe6\x71\x94\x8a\x3f\x70\x15\x9f\x93\x41\xe4\x46\x13\x95\x22\x36\xcf\x3c\xd9\x1c\x75\xdf\x52\x28\x47\xda\xaa\x93\x4f\xb3\xc1\x1d\x4b\x3e\x57\xcb\xfb\x40\x22\x6a\x29\x9f\xa9\x91\x51\x40\xa2\xc8\x06\xf7\x2d\x57\x72\xac\xa4\xb0\x5d\xb2\x9c\x5a\xf5\x2c\x4b\xf8\x7f\x94\xdc\x2e\xcd\xa4\x71\x6a\x38\xe4\x70\x8e\x8c\x7d\x20\x1f\x45\x01\x40\x2e\xcd\xe7\x44\xc1\xe0\x81\x82\xf0\x9a\x6b\xcf\x85\xcd\x1a\x01\xae\xe6\x73\x31\xd8\x6c\xc6\xba\x0e\x1f\x83\xf2\x86\xed\x2b\xd5\x5e\xa1\x40\xbf\x5c\xb0\x6f\xbf\x37\x09\x91\xff\x5a\xe2\xe7\xfe\x63\x58\x58\x87\xf9\xbb\xde\xf2\x7a\x74\x3a\xed\x64\xf2\xf9\x8b\xc7\xd8\xb6\xef\xc0\x9f\x25\xbc\xcd\x69\xbc\x8b\x54\x6b\x70\x6c\xad\x88\xd1\xda\xce\xe9\xe3\x0f\x38\xed\x44\xaf\xc5\xfa\xc2\x1f\x58\x7d\x91\x90\xee\xae\x9e\xf0\x91\x1c\x6b\xe9\xee\xdf\x53\x0c\x0a\x78\x64\xef\x8e\xcd\xe0\x46\xbd\x04\x00\x00\xff\xff\xe2\xca\xd1\x42\x6a\x02\x00\x00")

func storageYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageYaml,
		"storage.yaml",
	)
}

func storageYaml() (*asset, error) {
	bytes, err := storageYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "storage.yaml", size: 618, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _workloadsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\xb1\x8e\xe2\x30\x10\x86\xfb\x3c\xc5\x88\xf6\x74\x44\xe9\x4e\x6e\xa1\xba\xea\x04\xd2\x5d\x3d\xd8\x43\xe2\xc3\xf1\x58\x9e\x49\x58\xde\x7e\x95\x6c\xa2\x65\x59\x10\x8b\x96\xce\x1a\x4d\xbe\xef\xff\xa5\xd8\x98\xfc\x5f\xca\xe2\x39\x1a\x68\x49\x71\x89\x29\x89\x65\x47\x4b\xcb\x6d\xd9\x57\x18\x52\x83\x55\x71\xf0\xd1\x19\xd8\x90\x70\x97\x2d\xad\x02\x8a\x14\xc3\xba\x43\x45\x53\x00\x44\x6c\xc9\xc0\x3f\xce\x87\xc0\xe8\xa4\x90\x44\x76\x98\x53\xd4\xec\x49\x86\xe3\xcf\x69\x69\x4d\x29\xf0\xa9\xa5\xa8\x52\x00\x00\x70\x52\xcf\x11\x83\x81\x3d\x06\xa1\x71\xa6\xa7\x44\x66\x3c\x01\xd4\x99\xbb\x64\x60\xc8\x35\x4d\xf2\x14\xc3\x80\xbb\x60\x01\xf4\x73\x99\xbe\x3a\x73\x6e\x28\x05\x6f\x11\xb6\xf4\x04\x69\x7e\x83\x09\x7d\x4d\x3a\x88\x60\xc5\x51\x33\x87\x40\xf9\x21\xff\x62\x71\xcb\x3e\x7c\x6e\x2f\xa0\xb7\x82\x6c\x15\x95\xf6\x5d\x78\x4e\x7d\x99\x68\x77\xfb\xaf\x91\x5a\x8e\xcf\x91\xba\x91\x75\x57\xf9\x9b\x77\x0f\xb9\x76\xa8\xb6\xf9\x24\xfb\x3f\x53\x6e\x69\x56\x99\xe3\x35\x97\xe6\xee\x41\x95\xcd\x1c\xaf\xeb\x76\xa4\x78\xee\xfc\xc3\xee\xbb\xbf\x4e\x9a\x11\x97\xbd\xbc\xe5\x38\xdd\x51\xc9\xd6\x40\xa3\x9a\xc4\x94\xa5\x75\xf1\xe3\x7b\x70\xf8\x25\xe5\xb8\x5c\xce\x54\x3b\x3c\x05\x24\xe5\x71\xbe\xfa\x4b\xe9\xeb\xf7\x4c\xe0\x5b\xac\xa9\x94\xbe\xfe\xf1\xd2\x86\x02\xe0\x48\xbe\x6e\xd4\x40\x55\xbc\x06\x00\x00\xff\xff\xb5\xaa\x5c\x8f\x7a\x04\x00\x00")

func workloadsYamlBytes() ([]byte, error) {
	return bindataRead(
		_workloadsYaml,
		"workloads.yaml",
	)
}

func workloadsYaml() (*asset, error) {
	bytes, err := workloadsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "workloads.yaml", size: 1146, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"admin.yaml":                       adminYaml,
	"config.yaml":                      configYaml,
	"extra/admissionregistration.yaml": extraAdmissionregistrationYaml,
	"extra/apiextension.yaml":          extraApiextensionYaml,
	"extra/apiregistration.yaml":       extraApiregistrationYaml,
	"extra/authentication.yaml":        extraAuthenticationYaml,
	"extra/authorization.yaml":         extraAuthorizationYaml,
	"extra/autoscaling.yaml":           extraAutoscalingYaml,
	"extra/certificate.yaml":           extraCertificateYaml,
	"extra/coordination.yaml":          extraCoordinationYaml,
	"extra/core.yaml":                  extraCoreYaml,
	"extra/event.yaml":                 extraEventYaml,
	"extra/example.yaml":               extraExampleYaml,
	"extra/extension.yaml":             extraExtensionYaml,
	"extra/node.yaml":                  extraNodeYaml,
	"extra/scheduling.yaml":            extraSchedulingYaml,
	"networking.yaml":                  networkingYaml,
	"security.yaml":                    securityYaml,
	"storage.yaml":                     storageYaml,
	"workloads.yaml":                   workloadsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"admin.yaml":  {adminYaml, map[string]*bintree{}},
	"config.yaml": {configYaml, map[string]*bintree{}},
	"extra": {nil, map[string]*bintree{
		"admissionregistration.yaml": {extraAdmissionregistrationYaml, map[string]*bintree{}},
		"apiextension.yaml":          {extraApiextensionYaml, map[string]*bintree{}},
		"apiregistration.yaml":       {extraApiregistrationYaml, map[string]*bintree{}},
		"authentication.yaml":        {extraAuthenticationYaml, map[string]*bintree{}},
		"authorization.yaml":         {extraAuthorizationYaml, map[string]*bintree{}},
		"autoscaling.yaml":           {extraAutoscalingYaml, map[string]*bintree{}},
		"certificate.yaml":           {extraCertificateYaml, map[string]*bintree{}},
		"coordination.yaml":          {extraCoordinationYaml, map[string]*bintree{}},
		"core.yaml":                  {extraCoreYaml, map[string]*bintree{}},
		"event.yaml":                 {extraEventYaml, map[string]*bintree{}},
		"example.yaml":               {extraExampleYaml, map[string]*bintree{}},
		"extension.yaml":             {extraExtensionYaml, map[string]*bintree{}},
		"node.yaml":                  {extraNodeYaml, map[string]*bintree{}},
		"scheduling.yaml":            {extraSchedulingYaml, map[string]*bintree{}},
	}},
	"networking.yaml": {networkingYaml, map[string]*bintree{}},
	"security.yaml":   {securityYaml, map[string]*bintree{}},
	"storage.yaml":    {storageYaml, map[string]*bintree{}},
	"workloads.yaml":  {workloadsYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
