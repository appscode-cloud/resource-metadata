apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: policy.kubevault.com
    k8s.io/kind: VaultPolicy
    k8s.io/resource: vaultpolicies
    k8s.io/version: v1alpha1
  name: policy.kubevault.com-v1alpha1-vaultpolicies
spec:
  icons:
  - src: https://cdn.appscode.com/k8s/icons/policy.kubevault.com/vaultpolicies.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/policy.kubevault.com/vaultpolicies.png
    type: image/png
  resource:
    group: policy.kubevault.com
    kind: VaultPolicy
    name: vaultpolicies
    scope: Namespaced
    version: v1alpha1
  ui:
    editor:
      name: policykubevaultcom-vaultpolicy-editor
      url: https://bundles.byte.builders/ui/
      version: v0.1.0
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
          type: object
        spec:
          description: 'More info: https://www.vaultproject.io/docs/concepts/policies.html'
          properties:
            policy:
              description: Policy specifies a vault policy in json format.
              type: object
              x-kubernetes-embedded-resource: true
              x-kubernetes-preserve-unknown-fields: true
            policyDocument:
              description: 'PolicyDocument specifies a vault policy in hcl format.
                For example: path "secret/*" {   capabilities = ["create", "read",
                "update", "delete", "list"] }'
              type: string
            vaultPolicyName:
              description: 'VaultPolicyName is the policy name set inside Vault. This
                defaults to following format: k8s.${cluster}.${metadata.namespace}.${metadata.name}'
              type: string
            vaultRef:
              description: VaultRef is the name of a AppBinding referencing to a Vault
                Server
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
          required:
          - vaultRef
          type: object
        status:
          properties:
            conditions:
              description: Represents the latest available observations of a VaultPolicy.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another. This should be when the underlying condition changed.  If
                      that is not known, then using the time when the API field changed
                      is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition. This field may be empty.
                    type: string
                  observedGeneration:
                    description: If set, this represents the .metadata.generation
                      that the condition was set based upon. For instance, if .metadata.generation
                      is currently 12, but the .status.condition[x].observedGeneration
                      is 9, the condition is out of date with respect to the current
                      state of the instance.
                    format: int64
                    type: integer
                  reason:
                    description: The reason for the condition's last transition in
                      CamelCase. The specific API may choose whether or not this field
                      is considered a guaranteed API. This field may not be empty.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important.
                    type: string
                required:
                - lastTransitionTime
                - message
                - reason
                - status
                - type
                type: object
              type: array
            observedGeneration:
              description: ObservedGeneration is the most recent generation observed
                for this resource. It corresponds to the resource's generation, which
                is updated on mutation by the API Server.
              format: int64
              type: integer
            phase:
              description: Phase indicates whether the policy successfully applied
                in vault or not or in progress
              enum:
              - Success
              - Failed
              type: string
          type: object
      type: object
