apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: appcatalog.appscode.com
    k8s.io/kind: AppBinding
    k8s.io/resource: appbindings
    k8s.io/version: v1alpha1
  name: appcatalog.appscode.com-v1alpha1-appbindings
spec:
  connections:
  - namespacePath: metadata.namespace
    references:
    - '{.spec.clientConfig.service.name}'
    target:
      apiVersion: v1
      kind: Service
    type: MatchRef
  - namespacePath: metadata.namespace
    references:
    - '{.spec.clientConfig.secret.name}'
    target:
      apiVersion: v1
      kind: Secret
    type: MatchRef
  icons:
  - src: https://cdn.appscode.com/k8s/icons/appcatalog.appscode.com/appbindings.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/appcatalog.appscode.com/appbindings.png
    type: image/png
  resource:
    group: appcatalog.appscode.com
    kind: AppBinding
    name: appbindings
    scope: Namespaced
    version: v1alpha1
  resourceRequirements:
  - resources: spec.podTemplate.spec.resources
    units: spec.replicas
  ui:
    editor:
      name: appcatalogappscodecom-appbinding-editor
      url: https://bundles.byte.builders/ui/
      version: v0.1.0
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: "CreationTimestamp is a timestamp representing the server
                time when this object was created. It is not guaranteed to be set
                in happens-before order across separate operations. Clients may not
                set this value. It is represented in RFC3339 form and is in UTC. \n
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: "DeletionTimestamp is RFC 3339 date and time at which this
                resource will be deleted. This field is set by the server when a graceful
                deletion is requested by the user, and is not directly settable by
                a client. The resource is expected to be deleted (no longer visible
                from resource lists, and not reachable by name) after the time in
                this field, once the finalizers list is empty. As long as the finalizers
                list contains items, deletion is blocked. Once the deletionTimestamp
                is set, this value may not be unset or be set further into the future,
                although it may be shortened or the resource may be deleted prior
                to this time. For example, a user may request that a pod is deleted
                in 30 seconds. The Kubelet will react by sending a graceful termination
                signal to the containers in the pod. After that 30 seconds, the Kubelet
                will send a hard termination signal (SIGKILL) to the container and
                after cleanup, remove the pod from the API. In the presence of network
                partitions, this object may still exist after this timestamp, until
                an administrator or automated process can determine the resource is
                fully terminated. If not set, graceful deletion of the object has
                not been requested. \n Populated by the system when a graceful deletion
                is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed. Finalizers may
                be processed and removed in any order.  Order is NOT enforced because
                it introduces significant risk of stuck finalizers. finalizers is
                a shared field, any actor with permission can reorder it. If the finalizer
                list is processed in order, then this can lead to a situation in which
                the component responsible for the first finalizer in the list is waiting
                for a signal (field value, external system, or other) produced by
                a component responsible for a finalizer later in the list, resulting
                in a deadlock. Without enforced ordering finalizers are free to order
                amongst themselves and are not vulnerable to ordering changes in the
                list.
              items:
                type: string
              type: array
            generateName:
              description: "GenerateName is an optional prefix, used by the server,
                to generate a unique name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique
                suffix. The provided value has the same validation rules as the Name
                field, and may be truncated by the length of the suffix required to
                make the value unique on the server. \n If this field is specified
                and the generated name exists, the server will NOT return a 409 -
                instead, it will either return 201 Created or 500 with Reason ServerTimeout
                indicating a unique name could not be found in the time allotted,
                and the client should retry (optionally after the time indicated in
                the Retry-After header). \n Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                description: OwnerReference contains enough information to let you
                  identify an owning object. An owning object must be in the same
                  namespace as the dependent, or be cluster-scoped, so there is no
                  namespace field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: "An opaque value that represents the internal version of
                this object that can be used by clients to determine when objects
                have changed. May be used for optimistic concurrency, change detection,
                and the watch operation on a resource or set of resources. Clients
                must treat these values as opaque and passed unmodified back to the
                server. They may only be valid for a particular resource or set of
                resources. \n Populated by the system. Read-only. Value must be treated
                as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: "SelfLink is a URL representing this object. Populated
                by the system. Read-only. \n DEPRECATED Kubernetes will stop propagating
                this field in 1.20 release and the field is planned to be removed
                in 1.21 release."
              type: string
            uid:
              description: "UID is the unique in time and space value for this object.
                It is typically generated by the server on successful creation of
                a resource and is not allowed to change on PUT operations. \n Populated
                by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              type: string
          type: object
        spec:
          description: AppBindingSpec is the spec for app
          properties:
            clientConfig:
              description: ClientConfig defines how to communicate with the app. Required
              properties:
                caBundle:
                  description: CABundle is a PEM encoded CA bundle which will be used
                    to validate the serving certificate of this app.
                  format: byte
                  type: string
                insecureSkipTLSVerify:
                  description: InsecureSkipTLSVerify disables TLS certificate verification
                    when communicating with this app. This is strongly discouraged.  You
                    should use the CABundle instead.
                  type: boolean
                service:
                  description: "`service` is a reference to the service for this app.
                    Either `service` or `url` must be specified. \n If the webhook
                    is running within the cluster, then you should use `service`."
                  properties:
                    name:
                      description: '`name` is the name of the service. Required'
                      type: string
                    path:
                      description: '`path` is an optional URL path which will be sent
                        in any request to this service.'
                      type: string
                    port:
                      description: The port that will be exposed by this app.
                      format: int32
                      type: integer
                    query:
                      description: '`query` is optional encoded query string, without
                        ''?'' which will be sent in any request to this service.'
                      type: string
                    scheme:
                      description: 'Specifies which scheme to use, for example: http,
                        https If specified, then it will applied as prefix in this
                        format: scheme:// If not specified, then nothing will be prefixed'
                      type: string
                  required:
                  - name
                  - port
                  - scheme
                  type: object
                url:
                  description: "`url` gives the location of the app, in standard URL
                    form (`[scheme://]host:port/path`). Exactly one of `url` or `service`
                    must be specified. \n The `host` should not refer to a service
                    running in the cluster; use the `service` field instead. The host
                    might be resolved via external DNS in some apiservers (e.g., `kube-apiserver`
                    cannot resolve in-cluster DNS as that would be a layering violation).
                    `host` may also be an IP address. \n A path is optional, and if
                    present may be any string permissible in a URL. You may use the
                    path to pass an arbitrary string to the app, for example, a cluster
                    identifier. \n Attempting to use a user or basic auth e.g. \"user:password@\"
                    is not allowed. Fragments (\"#...\") and query parameters (\"?...\")
                    are not allowed, either."
                  type: string
              type: object
            parameters:
              description: "Parameters is a set of the parameters to be used to connect
                to the app. The inline YAML/JSON payload to be translated into equivalent
                JSON object. \n The Parameters field is NOT secret or secured in any
                way and should NEVER be used to hold sensitive information. To set
                parameters that contain secret information, you should ALWAYS store
                that information in a Secret."
              type: object
              x-kubernetes-embedded-resource: true
              x-kubernetes-preserve-unknown-fields: true
            secret:
              description: Secret is the name of the secret to create in the AppBinding's
                namespace that will hold the credentials associated with the AppBinding.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            secretTransforms:
              description: List of transformations that should be applied to the credentials
                associated with the ServiceBinding before they are inserted into the
                Secret.
              items:
                description: 'SecretTransform is a single transformation that is applied
                  to the credentials returned from the broker before they are inserted
                  into the Secret associated with the ServiceBinding. Because different
                  brokers providing the same type of service may each return a different
                  credentials structure, users can specify the transformations that
                  should be applied to the Secret to adapt its entries to whatever
                  the service consumer expects. For example, the credentials returned
                  by the broker may include the key "USERNAME", but the consumer requires
                  the username to be exposed under the key "DB_USER" instead. To have
                  the Service Catalog transform the Secret, the following SecretTransform
                  must be specified in ServiceBinding.spec.secretTransform: - {"renameKey":
                  {"from": "USERNAME", "to": "DB_USER"}} Only one of the SecretTransform''s
                  members may be specified.'
                properties:
                  addKey:
                    description: AddKey represents a transform that adds an additional
                      key to the credentials Secret
                    properties:
                      key:
                        description: The name of the key to add
                        type: string
                      stringValue:
                        description: The string (non-binary) value to add to the Secret
                          under the specified key.
                        type: string
                      value:
                        description: The binary value (possibly non-string) to add
                          to the Secret under the specified key. If both value and
                          stringValue are specified, then value is ignored and stringValue
                          is stored.
                        format: byte
                        type: string
                    required:
                    - key
                    type: object
                  addKeysFrom:
                    description: AddKeysFrom represents a transform that merges all
                      the entries of an existing Secret into the credentials Secret
                    properties:
                      secretRef:
                        description: The reference to the Secret that should be merged
                          into the credentials Secret.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                          namespace:
                            description: Namespace of the referent.
                            type: string
                        type: object
                    type: object
                  removeKey:
                    description: RemoveKey represents a transform that removes a credentials
                      Secret entry
                    properties:
                      key:
                        description: The key to remove from the Secret
                        type: string
                    required:
                    - key
                    type: object
                  renameKey:
                    description: RenameKey represents a transform that renames a credentials
                      Secret entry's key
                    properties:
                      from:
                        description: The name of the key to rename
                        type: string
                      to:
                        description: The new name for the key
                        type: string
                    required:
                    - from
                    - to
                    type: object
                type: object
              type: array
            type:
              description: Type used to facilitate programmatic handling of application.
              type: string
            version:
              description: Version used to facilitate programmatic handling of application.
              type: string
          required:
          - clientConfig
          type: object
      type: object
