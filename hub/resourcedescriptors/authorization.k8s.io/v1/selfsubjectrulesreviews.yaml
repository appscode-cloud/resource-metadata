apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: authorization.k8s.io
    k8s.io/kind: SelfSubjectRulesReview
    k8s.io/resource: selfsubjectrulesreviews
    k8s.io/version: v1
  name: authorization.k8s.io-v1-selfsubjectrulesreviews
spec:
  resource:
    group: authorization.k8s.io
    kind: SelfSubjectRulesReview
    name: selfsubjectrulesreviews
    scope: Cluster
    version: v1
  ui:
    editor:
      name: authorizationk8sio-selfsubjectrulesreview-editor
      url: https://bundles.byte.builders/ui/
      version: v0.1.0
  validation:
    openAPIV3Schema:
      description: SelfSubjectRulesReview enumerates the set of actions the current
        user can perform within a namespace. The returned list of actions may be incomplete
        depending on the server's authorization mode, and any errors experienced during
        the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide
        actions, or to quickly let an end user reason about their permissions. It
        should NOT Be used by external systems to drive authorization decisions as
        this raises confused deputy, cache lifetime/revocation, and correctness concerns.
        SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization
        decisions to the API server.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
          type: object
        spec:
          description: Spec holds information about the request being evaluated.
          properties:
            namespace:
              description: Namespace to evaluate rules for. Required.
              type: string
          type: object
        status:
          description: Status is filled in by the server and indicates the set of
            actions a user can perform.
          properties:
            evaluationError:
              description: EvaluationError can appear in combination with Rules. It
                indicates an error occurred during rule evaluation, such as an authorizer
                that doesn't support rule evaluation, and that ResourceRules and/or
                NonResourceRules may be incomplete.
              type: string
            incomplete:
              description: Incomplete is true when the rules returned by this call
                are incomplete. This is most commonly encountered when an authorizer,
                such as an external authorizer, doesn't support rules evaluation.
              type: boolean
            nonResourceRules:
              description: NonResourceRules is the list of actions the subject is
                allowed to perform on non-resources. The list ordering isn't significant,
                may contain duplicates, and possibly be incomplete.
              items:
                description: NonResourceRule holds information that describes a rule
                  for the non-resource
                properties:
                  nonResourceURLs:
                    description: NonResourceURLs is a set of partial urls that a user
                      should have access to.  *s are allowed, but only as the full,
                      final step in the path.  "*" means all.
                    items:
                      type: string
                    type: array
                  verbs:
                    description: 'Verb is a list of kubernetes non-resource API verbs,
                      like: get, post, put, delete, patch, head, options.  "*" means
                      all.'
                    items:
                      type: string
                    type: array
                required:
                - verbs
                type: object
              type: array
            resourceRules:
              description: ResourceRules is the list of actions the subject is allowed
                to perform on resources. The list ordering isn't significant, may
                contain duplicates, and possibly be incomplete.
              items:
                description: ResourceRule is the list of actions the subject is allowed
                  to perform on resources. The list ordering isn't significant, may
                  contain duplicates, and possibly be incomplete.
                properties:
                  apiGroups:
                    description: APIGroups is the name of the APIGroup that contains
                      the resources.  If multiple API groups are specified, any action
                      requested against one of the enumerated resources in any API
                      group will be allowed.  "*" means all.
                    items:
                      type: string
                    type: array
                  resourceNames:
                    description: ResourceNames is an optional white list of names
                      that the rule applies to.  An empty set means that everything
                      is allowed.  "*" means all.
                    items:
                      type: string
                    type: array
                  resources:
                    description: Resources is a list of resources this rule applies
                      to.  "*" means all in the specified apiGroups.  "*/foo" represents
                      the subresource 'foo' for all resources in the specified apiGroups.
                    items:
                      type: string
                    type: array
                  verbs:
                    description: 'Verb is a list of kubernetes resource API verbs,
                      like: get, list, watch, create, update, delete, proxy.  "*"
                      means all.'
                    items:
                      type: string
                    type: array
                required:
                - verbs
                type: object
              type: array
          required:
          - incomplete
          - nonResourceRules
          - resourceRules
          type: object
      required:
      - spec
      type: object
