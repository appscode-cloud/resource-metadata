// Package resourcedescriptors Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// acme.cert-manager.io/v1alpha2/challenges.yaml
// acme.cert-manager.io/v1alpha2/orders.yaml
// admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations.yaml
// admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations.yaml
// apiextensions.k8s.io/v1beta1/customresourcedefinitions.yaml
// apiregistration.k8s.io/v1/apiservices.yaml
// appcatalog.appscode.com/v1alpha1/appbindings.yaml
// apps/v1/controllerrevisions.yaml
// apps/v1/daemonsets.yaml
// apps/v1/deployments.yaml
// apps/v1/replicasets.yaml
// apps/v1/statefulsets.yaml
// authentication.k8s.io/v1/tokenreviews.yaml
// authorization.k8s.io/v1/localsubjectaccessreviews.yaml
// authorization.k8s.io/v1/selfsubjectaccessreviews.yaml
// authorization.k8s.io/v1/selfsubjectrulesreviews.yaml
// authorization.k8s.io/v1/subjectaccessreviews.yaml
// autoscaling/v1/horizontalpodautoscalers.yaml
// autoscaling/v2beta2/horizontalpodautoscalers.yaml
// batch/v1/jobs.yaml
// batch/v1beta1/cronjobs.yaml
// catalog.kubedb.com/v1alpha1/elasticsearchversions.yaml
// catalog.kubedb.com/v1alpha1/etcdversions.yaml
// catalog.kubedb.com/v1alpha1/memcachedversions.yaml
// catalog.kubedb.com/v1alpha1/mongodbversions.yaml
// catalog.kubedb.com/v1alpha1/mysqlversions.yaml
// catalog.kubedb.com/v1alpha1/perconaxtradbversions.yaml
// catalog.kubedb.com/v1alpha1/pgbouncerversions.yaml
// catalog.kubedb.com/v1alpha1/postgresversions.yaml
// catalog.kubedb.com/v1alpha1/proxysqlversions.yaml
// catalog.kubedb.com/v1alpha1/redisversions.yaml
// catalog.kubevault.com/v1alpha1/vaultserverversions.yaml
// cert-manager.io/v1alpha2/certificaterequests.yaml
// cert-manager.io/v1alpha2/certificates.yaml
// cert-manager.io/v1alpha2/clusterissuers.yaml
// cert-manager.io/v1alpha2/issuers.yaml
// certificates.k8s.io/v1beta1/certificatesigningrequests.yaml
// cluster.k8s.io/v1alpha1/machines.yaml
// cluster.k8s.io/v1alpha1/machinesets.yaml
// coordination.k8s.io/v1/leases.yaml
// core/v1/bindings.yaml
// core/v1/componentstatuses.yaml
// core/v1/configmaps.yaml
// core/v1/endpoints.yaml
// core/v1/events.yaml
// core/v1/limitranges.yaml
// core/v1/namespaces.yaml
// core/v1/nodes.yaml
// core/v1/persistentvolumeclaims.yaml
// core/v1/persistentvolumes.yaml
// core/v1/pods.yaml
// core/v1/replicationcontrollers.yaml
// core/v1/resourcequotas.yaml
// core/v1/secrets.yaml
// core/v1/serviceaccounts.yaml
// core/v1/services.yaml
// engine.kubevault.com/v1alpha1/awsaccesskeyrequests.yaml
// engine.kubevault.com/v1alpha1/awsroles.yaml
// engine.kubevault.com/v1alpha1/azureaccesskeyrequests.yaml
// engine.kubevault.com/v1alpha1/azureroles.yaml
// engine.kubevault.com/v1alpha1/databaseaccessrequests.yaml
// engine.kubevault.com/v1alpha1/gcpaccesskeyrequests.yaml
// engine.kubevault.com/v1alpha1/gcproles.yaml
// engine.kubevault.com/v1alpha1/mongodbroles.yaml
// engine.kubevault.com/v1alpha1/mysqlroles.yaml
// engine.kubevault.com/v1alpha1/postgresroles.yaml
// engine.kubevault.com/v1alpha1/secretengines.yaml
// events.k8s.io/v1beta1/events.yaml
// extensions/v1beta1/ingresses.yaml
// extensions/v1beta1/networkpolicies.yaml
// extensions/v1beta1/podsecuritypolicies.yaml
// kubedb.com/v1alpha1/dormantdatabases.yaml
// kubedb.com/v1alpha1/elasticsearches.yaml
// kubedb.com/v1alpha1/etcds.yaml
// kubedb.com/v1alpha1/mariadbs.yaml
// kubedb.com/v1alpha1/memcacheds.yaml
// kubedb.com/v1alpha1/mongodbs.yaml
// kubedb.com/v1alpha1/mysqls.yaml
// kubedb.com/v1alpha1/perconaxtradbs.yaml
// kubedb.com/v1alpha1/pgbouncers.yaml
// kubedb.com/v1alpha1/postgreses.yaml
// kubedb.com/v1alpha1/proxysqls.yaml
// kubedb.com/v1alpha1/redises.yaml
// kubedb.com/v1alpha1/snapshots.yaml
// kubevault.com/v1alpha1/vaultservers.yaml
// meta.appscode.com/v1alpha1/resourcedescriptors.yaml
// monitoring.coreos.com/v1/alertmanagers.yaml
// monitoring.coreos.com/v1/podmonitors.yaml
// monitoring.coreos.com/v1/prometheuses.yaml
// monitoring.coreos.com/v1/prometheusrules.yaml
// monitoring.coreos.com/v1/servicemonitors.yaml
// networking.k8s.io/v1/networkpolicies.yaml
// networking.k8s.io/v1beta1/ingresses.yaml
// node.k8s.io/v1beta1/runtimeclasses.yaml
// policy/v1beta1/poddisruptionbudgets.yaml
// policy/v1beta1/podsecuritypolicies.yaml
// policy.kubevault.com/v1alpha1/vaultpolicies.yaml
// policy.kubevault.com/v1alpha1/vaultpolicybindings.yaml
// rbac.authorization.k8s.io/v1/clusterrolebindings.yaml
// rbac.authorization.k8s.io/v1/clusterroles.yaml
// rbac.authorization.k8s.io/v1/rolebindings.yaml
// rbac.authorization.k8s.io/v1/roles.yaml
// scheduling.k8s.io/v1/priorityclasses.yaml
// stash.appscode.com/v1alpha1/recoveries.yaml
// stash.appscode.com/v1alpha1/repositories.yaml
// stash.appscode.com/v1alpha1/restics.yaml
// stash.appscode.com/v1beta1/backupbatches.yaml
// stash.appscode.com/v1beta1/backupblueprints.yaml
// stash.appscode.com/v1beta1/backupconfigurations.yaml
// stash.appscode.com/v1beta1/backupsessions.yaml
// stash.appscode.com/v1beta1/functions.yaml
// stash.appscode.com/v1beta1/restoresessions.yaml
// stash.appscode.com/v1beta1/tasks.yaml
// storage.k8s.io/v1/storageclasses.yaml
// storage.k8s.io/v1/volumeattachments.yaml
// storage.k8s.io/v1beta1/csidrivers.yaml
// storage.k8s.io/v1beta1/csinodes.yaml
// voyager.appscode.com/v1beta1/certificates.yaml
// voyager.appscode.com/v1beta1/ingresses.yaml
package resourcedescriptors

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _acmeCertManagerIoV1alpha2ChallengesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbd\x4e\xf5\x30\x0c\x86\xf7\x5e\x85\xf7\x4f\x4d\x74\xbe\xe9\x28\x2b\xcc\x0c\x08\xb1\x1b\xd7\x4a\xa3\xe6\xc7\x8a\xd3\x0a\xee\x1e\xb5\xe7\x14\x0a\xaa\xc4\x9a\xf7\x8d\x9f\xc7\x09\x4a\x78\xe5\xaa\xa1\x64\x07\x89\x1b\x1a\x14\x51\x2a\x03\x1b\x2a\xc9\x2e\x17\x8c\x32\xe2\xa5\x9b\x42\x1e\x1c\x3c\xb3\x96\xb9\x12\x3f\xb2\x52\x0d\xd2\x4a\xed\xd6\x3b\x03\x36\x74\x1d\x00\x55\xc6\x16\x4a\x7e\x09\x89\xb5\x61\x12\x07\x79\x8e\xb1\x03\x88\xf8\xc6\x51\xd7\x0e\xc0\x74\x55\x13\x8a\xf5\xb5\xcc\xe2\x00\x29\xb1\x21\xae\xad\x4f\x98\xd1\x73\x35\xa1\x1c\x6b\x37\xf0\xc3\x88\x31\x72\xf6\x7c\x8c\xea\xdd\xc6\x01\xed\xb1\x1e\xf3\x65\xdf\xeb\xbe\xc5\xff\x0e\x20\x63\xe2\x73\x68\xbf\xb7\xfa\xc3\x34\x15\xa6\xd5\xfa\x0b\xb5\xcd\xff\x53\xfd\xc4\xf9\x06\xfe\x25\xaa\x54\x84\x1d\x3c\x61\x62\x15\x24\x1e\xb6\xd3\x33\xef\x40\x25\x6f\xef\xd7\x83\x56\x72\x30\xb6\x26\xea\xac\xa5\x21\xff\xfc\xb1\xe9\xaa\x76\x2b\xdb\x33\x3d\xfb\x2d\x60\x74\xf1\x1b\xae\x7d\xac\x0e\x21\xa1\x67\xab\x8b\xff\xf7\x9e\xe2\x67\x00\x00\x00\xff\xff\x7d\xf7\x3e\x7c\x15\x02\x00\x00")

func acmeCertManagerIoV1alpha2ChallengesYamlBytes() ([]byte, error) {
	return bindataRead(
		_acmeCertManagerIoV1alpha2ChallengesYaml,
		"acme.cert-manager.io/v1alpha2/challenges.yaml",
	)
}

func acmeCertManagerIoV1alpha2ChallengesYaml() (*asset, error) {
	bytes, err := acmeCertManagerIoV1alpha2ChallengesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "acme.cert-manager.io/v1alpha2/challenges.yaml", size: 533, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _acmeCertManagerIoV1alpha2OrdersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\x03\x31\x0c\x45\xf7\x39\x85\x2f\x30\xa9\xca\x0a\x65\xcd\x1a\x24\x84\xd8\x1b\xc7\x2a\x51\x93\xd8\xb2\x33\x3d\x3f\x9a\x76\x8a\x22\x40\x62\xeb\xff\xf3\xdf\x0b\x6a\x79\x67\xf3\x22\x3d\x41\xe3\x81\x11\x55\x9d\x24\x73\x24\x69\x87\xcb\x11\xab\x7e\xe2\x31\x9c\x4b\xcf\x09\x5e\xd9\x65\x35\xe2\x27\x76\xb2\xa2\x43\x2c\x6c\x6f\x32\x0e\x4c\x01\x80\x8c\x71\x14\xe9\x6f\xa5\xb1\x0f\x6c\x9a\xa0\xaf\xb5\x06\x80\x8a\x1f\x5c\x7d\xeb\x00\x9c\x1f\x3d\x16\x39\x9c\x4c\x56\x4d\x80\xd4\x38\x12\xdb\x58\x1a\x76\x3c\xb1\xc5\x22\x73\xed\x06\x7e\xb1\xcc\x36\x9f\x6d\x37\x49\x20\x5b\xe4\x73\x76\xb9\xff\x67\xb7\x7f\x08\x00\x1d\x1b\xff\x0d\x5b\xee\xad\x65\x5f\x72\x65\xda\x4c\xbf\x11\xd7\xed\x7f\x75\x7f\x78\xde\x80\x93\x9c\x93\x28\x27\x78\xc6\xc6\xae\x48\x9c\xaf\xd7\xdf\xae\x5f\x01\x00\x00\xff\xff\xaf\x57\x14\x4a\x91\x01\x00\x00")

func acmeCertManagerIoV1alpha2OrdersYamlBytes() ([]byte, error) {
	return bindataRead(
		_acmeCertManagerIoV1alpha2OrdersYaml,
		"acme.cert-manager.io/v1alpha2/orders.yaml",
	)
}

func acmeCertManagerIoV1alpha2OrdersYaml() (*asset, error) {
	bytes, err := acmeCertManagerIoV1alpha2OrdersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "acme.cert-manager.io/v1alpha2/orders.yaml", size: 401, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\x2f\x30\x1d\x75\x87\xb2\x1d\xb6\x6c\x10\x82\xb5\x27\x35\x1d\xab\x49\x1c\xc5\x4e\xb9\x3e\x6a\x53\x50\x25\xa4\x61\xb6\xd1\x7f\xf9\xef\x1b\x33\xbf\x53\x51\x96\xe4\x20\x92\x61\x8f\x39\xab\x97\x91\x7a\x2f\xf1\xbc\x0c\x18\xf2\x0d\x87\x6e\xe6\x34\x3a\x78\x25\x95\x5a\x3c\x3d\x93\xfa\xc2\xd9\xa4\x74\x2b\x33\xa2\xa1\xeb\x00\x7c\x21\x34\x96\xf4\xc6\x91\xd4\x30\x66\x07\xa9\x86\xd0\x01\x04\xbc\x52\xd0\x35\x03\x30\x3f\x69\xcf\x72\x9e\x8a\xd4\xec\x00\xc7\xc8\xba\xd6\x17\x9a\x58\xad\x6c\x1f\xf4\x2d\x73\x8c\x37\x81\x97\x6a\x68\x9c\xa6\x0f\xba\xde\x44\xe6\x8b\xa4\x4f\x9e\x6a\x83\x8e\xe9\xb2\x8b\x3a\x88\x3b\xf1\xd5\x08\x7f\x24\xf4\x88\x2c\x3f\x57\x58\x86\x2b\x19\x0e\x1d\x40\xc2\x48\xf7\x0d\x4f\x7b\xf8\x74\xbf\x46\x33\xf9\x75\xfc\xaf\xd6\x56\xfc\xf0\x05\x1e\x9b\xde\x6c\xff\xdf\xab\x5e\x32\x39\xb8\x84\xaa\x46\x65\x7b\xfa\xb3\xfd\x3b\x00\x00\xff\xff\x12\xd7\x08\x70\x16\x02\x00\x00")

func admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYamlBytes() ([]byte, error) {
	return bindataRead(
		_admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml,
		"admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations.yaml",
	)
}

func admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml() (*asset, error) {
	bytes, err := admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations.yaml", size: 534, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x6a\xc3\x30\x10\x45\xf7\x3e\xc5\x5c\x20\x0e\xde\x15\x6d\xd3\x13\x94\x92\xae\x27\xf2\xd4\x19\x2c\x69\xc4\x8c\xe4\x5e\xbf\xd8\x4a\x83\xa1\xd0\x7a\x2b\xfe\xd3\xff\xf3\x30\xf3\x95\xd4\x58\x92\x83\x48\x05\x7b\xcc\xd9\xbc\x8c\xd4\x7b\x89\xe7\x65\xc0\x90\xef\x38\x74\x33\xa7\xd1\xc1\x1b\x99\x54\xf5\xf4\x4a\xe6\x95\x73\x11\xed\x56\x66\xc4\x82\xae\x03\xf0\x4a\x58\x58\xd2\x3b\x47\xb2\x82\x31\x3b\x48\x35\x84\x0e\x20\xe0\x8d\x82\xad\x19\x80\xf9\xc5\x7a\x96\xf3\xa4\x52\xb3\x03\x1c\x23\xdb\x5a\xaf\x34\xb1\x15\xdd\x3e\xe8\x5b\x66\x1f\x6f\x03\xae\x18\x78\xc4\xc2\x69\xfa\xa0\xdb\x5d\x64\xbe\x48\xfa\xe4\xa9\x36\x6c\x9f\xd7\xc7\x54\x07\xcb\x93\xf9\x6a\x8c\xdf\x33\xb6\x87\x96\x1f\x13\xcb\x70\xa3\x82\x43\x07\x90\x30\xd2\xdf\x2b\x4f\x8f\xf0\xe9\xbf\x22\xcb\xe4\x57\x05\xcf\x69\x5b\xf5\x61\x0f\x47\x05\xb4\xc5\x47\xae\x36\x2f\x99\x1c\x5c\x42\xb5\x42\xba\x3d\xfd\x32\xf0\x1d\x00\x00\xff\xff\x8c\x1a\x6e\x9b\x20\x02\x00\x00")

func admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYamlBytes() ([]byte, error) {
	return bindataRead(
		_admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml,
		"admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations.yaml",
	)
}

func admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml() (*asset, error) {
	bytes, err := admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations.yaml", size: 544, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbb\x6e\xc3\x30\x0c\x45\x77\x7f\x05\xf7\x22\x16\xbc\x05\x5a\xd3\x2f\x28\x8a\xee\x0c\xcd\x3a\x44\xf4\x82\x48\x1b\xe9\xdf\x17\x56\x1e\x4d\x81\xb4\x19\x25\x1e\xe9\xde\x03\x62\x91\x0f\xae\x2a\x39\x79\x88\x6c\xd8\x63\x29\x4a\x79\xe4\x9e\x72\x74\xcb\x80\xa1\x1c\x70\xe8\x8e\x92\x46\x0f\x6f\xac\x79\xae\xc4\xaf\xac\x54\xa5\x58\xae\xdd\xfa\x66\x44\x43\xdf\x01\x50\x65\x34\xc9\xe9\x5d\x22\xab\x61\x2c\x1e\xd2\x1c\x42\x07\x10\x70\xcf\x41\x57\x06\xe0\xb8\xd5\x5e\xb2\x9b\x6a\x9e\x8b\x07\x2c\xc2\x27\xe3\xb4\x36\xd0\xfe\x3c\xbb\xc7\xce\xc1\xbb\x59\x2d\xc7\x9f\xf8\x4f\x49\xb2\x26\xdd\x93\xf5\x32\xf5\x40\x8d\xbe\x9e\xc7\x1b\xad\xf7\xf8\x72\xb5\x5e\x86\x3d\x1b\x0e\x1d\x40\xc2\xc8\x8f\x1b\x6d\x2e\xd0\xe6\xef\xaf\xb5\x30\xad\x82\xb7\x1a\x2d\xec\xa9\xe5\x73\xbd\x73\xab\xff\x9d\x94\x72\x61\x0f\xbb\x30\xab\x71\x6d\x57\x0f\xfc\x84\x72\x6a\x4b\xd8\x80\x56\xf2\x70\x30\x2b\xea\x9d\xa3\x31\xfd\x5e\xfb\x71\xab\xae\xc1\xee\x51\x71\x47\x75\xec\x75\x99\x5a\x8c\x7d\xad\xc1\x12\x71\x62\xa7\xcb\xf4\x72\x8a\xa1\xfb\x0e\x00\x00\xff\xff\xea\xb7\xe8\x40\x54\x02\x00\x00")

func apiextensionsK8sIoV1beta1CustomresourcedefinitionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml,
		"apiextensions.k8s.io/v1beta1/customresourcedefinitions.yaml",
	)
}

func apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml() (*asset, error) {
	bytes, err := apiextensionsK8sIoV1beta1CustomresourcedefinitionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apiextensions.k8s.io/v1beta1/customresourcedefinitions.yaml", size: 596, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiregistrationK8sIoV1ApiservicesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\x2c\x31\x0c\x45\xfb\x7c\x85\x7f\x60\x67\x35\xdd\x53\xba\x27\x68\xe8\x10\x20\x7a\x93\xb1\x16\x6b\x93\xd8\xb2\x33\xf9\x7e\x34\x33\xb0\x0a\x12\x48\xb4\xb9\xd7\xf7\x9c\xa0\xf2\x2b\x99\xb3\xd4\x08\x85\x1a\x4e\xa8\xea\x49\x16\x9a\x92\x94\x73\x9f\x31\xeb\x3b\xce\xe1\xca\x75\x89\xf0\x44\x2e\xab\x25\xba\x27\x4f\xc6\xda\xc4\xc2\x76\xb3\x60\xc3\x18\x00\x92\x11\x36\x96\xfa\xc2\x85\xbc\x61\xd1\x08\x75\xcd\x39\x00\x64\x7c\xa3\xec\x5b\x07\xe0\xfa\xcf\x27\x96\xf3\xc5\x64\xd5\x08\xa8\x6c\x74\x61\x6f\xb6\x9f\x4e\x47\x3a\x16\x0f\xf4\xff\xc7\x87\x67\xb2\xce\x89\xc6\xcc\x3e\x85\xf6\x1d\x3f\x72\x1f\x0b\xfd\xeb\x6f\x7d\x0e\x00\x15\x0b\xfd\x86\x3c\xf5\xf9\x34\x8e\xb8\x52\xda\x84\x6f\x88\x7d\xf6\x0f\xd6\x3f\xe9\xde\xc0\xdf\x1c\x3d\x89\x52\x84\xbb\xbc\x7a\x23\xdb\x9f\x46\xdf\x8f\x00\x00\x00\xff\xff\x37\x1a\x6d\xdd\x9b\x01\x00\x00")

func apiregistrationK8sIoV1ApiservicesYamlBytes() ([]byte, error) {
	return bindataRead(
		_apiregistrationK8sIoV1ApiservicesYaml,
		"apiregistration.k8s.io/v1/apiservices.yaml",
	)
}

func apiregistrationK8sIoV1ApiservicesYaml() (*asset, error) {
	bytes, err := apiregistrationK8sIoV1ApiservicesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apiregistration.k8s.io/v1/apiservices.yaml", size: 411, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appcatalogAppscodeComV1alpha1AppbindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x6e\xc3\x30\x0c\x45\x77\x9f\x82\x17\x88\x83\x6c\x85\xb6\x16\x9d\x3b\x14\x45\x77\x86\x22\x5c\x22\x92\x48\x88\x72\xce\x5f\xd8\x69\x0c\x19\x6d\x81\xac\xe2\xd7\x7f\xef\xa3\xc9\x27\x57\x17\x2d\x01\x32\x37\x1c\xd1\xcc\x49\x23\x8f\xa4\xf9\x78\x3d\x61\xb2\x2f\x3c\x0d\x17\x29\x31\xc0\x3b\xbb\xce\x95\xf8\x95\x9d\xaa\x58\xd3\x3a\x2c\x7f\x22\x36\x0c\x03\x00\x55\xc6\x26\x5a\x3e\x24\xb3\x37\xcc\x16\xa0\xcc\x29\x0d\x00\x09\xcf\x9c\x7c\xc9\x00\x5c\x9e\x7c\x14\x3d\x4e\x55\x67\x0b\x80\x66\x84\x0d\x93\x4e\x3b\x72\x9f\xbc\xb1\x9f\xcd\x5e\xa4\x44\x29\x53\x7f\xab\x3f\x46\x6b\xd1\xf9\x76\xf7\x3e\x70\xbd\x8f\xdb\xa6\x00\x14\xcc\xfc\x2f\xf9\x70\x0f\x1e\xfa\x46\x37\xa6\x45\x7f\xe3\xad\x8c\x47\x36\xfc\x25\xbf\x09\xec\x8c\x9d\xd4\x38\xc0\x1b\x66\x76\x43\xe2\xb8\xbe\xfe\x1e\xf0\x1d\x00\x00\xff\xff\xa5\x0b\x1a\x4c\xb3\x01\x00\x00")

func appcatalogAppscodeComV1alpha1AppbindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appcatalogAppscodeComV1alpha1AppbindingsYaml,
		"appcatalog.appscode.com/v1alpha1/appbindings.yaml",
	)
}

func appcatalogAppscodeComV1alpha1AppbindingsYaml() (*asset, error) {
	bytes, err := appcatalogAppscodeComV1alpha1AppbindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "appcatalog.appscode.com/v1alpha1/appbindings.yaml", size: 435, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1ControllerrevisionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xbd\x4e\xc4\x30\x0c\x80\xf7\x3c\x85\x5f\xe0\x7a\xea\x86\xb2\xc2\xcc\x70\x42\xec\xc6\xb5\x20\xba\x24\xb6\xec\x34\xcf\x8f\x72\x3d\xaa\x22\x7e\x56\xeb\xb3\xbf\xcf\xa8\xe9\x95\xcd\x93\xd4\x08\x85\x1b\x4e\xa8\xea\x24\x0b\x4f\x24\xe5\xdc\x67\xcc\xfa\x81\x73\xb8\xa6\xba\x44\xb8\xb0\xcb\x6a\xc4\x4f\xec\x64\x49\x9b\x58\x18\x3b\x0b\x36\x8c\x01\x80\x8c\xb1\x25\xa9\x2f\xa9\xb0\x37\x2c\x1a\xa1\xae\x39\x07\x80\x8c\x6f\x9c\x7d\x30\x00\xd7\x07\x9f\x92\x9c\xdf\x4d\x56\x8d\x30\x74\xc7\xf1\x26\x7a\x94\xda\x4c\x72\x66\xbb\x70\x4f\xa3\xee\xc8\xd8\x3d\x23\x02\xed\x9c\xdd\xb9\x6f\xc7\xfa\xd7\x67\x7d\x0e\x00\x15\x0b\x6f\xc2\x53\x9f\x4f\xbf\xad\xba\x32\x8d\xc8\x5d\x70\x3b\xf6\xa3\xf4\xbf\xc4\x4d\xf2\x57\x97\x93\x28\x47\x78\xc6\xc2\xae\x48\xbc\xdc\xa6\xc7\xcc\xcf\x00\x00\x00\xff\xff\x74\x7d\xa3\xc6\x90\x01\x00\x00")

func appsV1ControllerrevisionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1ControllerrevisionsYaml,
		"apps/v1/controllerrevisions.yaml",
	)
}

func appsV1ControllerrevisionsYaml() (*asset, error) {
	bytes, err := appsV1ControllerrevisionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/controllerrevisions.yaml", size: 400, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1DaemonsetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4f\x6b\xdb\x4c\x10\xc6\xef\xfa\x14\x43\x2e\x81\xf7\xc5\x2b\x7c\x0b\x7b\x2b\xe4\x52\x28\xc6\xc4\xa1\x97\xb6\x87\xf1\xee\x54\xde\x58\xfb\x87\x9d\x91\xa8\x31\xfe\xee\x45\xab\xd8\x91\xe2\xb6\xf1\x51\xcf\xec\xfe\x9e\x99\xd1\x23\x61\x72\x5f\x29\xb3\x8b\x41\x83\x27\x41\x85\x29\xb1\x89\x96\x94\x89\xbe\xee\x97\xd8\xa6\x1d\x2e\xab\xbd\x0b\x56\xc3\x13\x71\xec\xb2\xa1\x47\x62\x93\x5d\x92\x98\xab\xe1\x8e\x45\x41\x5d\x01\x98\x4c\x28\x2e\x86\x67\xe7\x89\x05\x7d\xd2\x10\xba\xb6\xad\x00\x5a\xdc\x52\xcb\xc3\x19\x80\xfd\x03\x2b\x17\xeb\x26\xc7\x2e\x69\x18\xec\xa6\xf2\x68\xf4\x88\xe4\x63\xd8\x90\x4c\x4b\xf9\xd5\x5d\x83\x2d\x65\x26\x99\x5d\xed\xcf\x73\xf4\xcb\x0a\x20\xa0\xa7\x11\xbf\xe8\x97\x8b\xc9\x0d\x4e\x64\x86\x4e\x2e\xb8\xc2\xb8\x6a\xe7\x0f\x7d\x8c\xc8\x77\xe6\x6c\x62\x22\x0d\x2b\xf4\xc4\x09\x0d\xd9\xa2\xce\x7b\x71\x26\x86\x32\xfd\x02\x38\x1b\x0d\x3b\x91\xc4\xba\xae\x8d\x0d\xf3\x7d\xef\x1f\xb8\x2e\x87\xeb\x41\xae\x2d\x2b\xee\x9b\x02\x94\xc3\xe0\xe2\x3c\x36\x54\x73\xdf\xfc\xff\xcb\x0f\x7b\x35\xb1\xed\x7c\x78\x5d\xec\x02\x5e\x38\x86\x35\xca\x4e\x83\x3a\xbf\x17\x35\x34\x5d\xca\xe7\xfe\x57\x6f\xc2\x08\x65\xc9\x2e\x34\x1f\x20\xca\x6c\x57\x9c\xa9\x7a\x23\x6c\x8c\xc2\x8c\xf4\x65\x2a\x8d\x98\xb8\x7d\x21\x23\xff\xc0\x60\x08\x51\x4a\xda\xe6\xac\x4f\x57\xfa\x8d\xc0\xab\xf0\xce\xb1\xcd\x7c\x4c\x8b\x42\x57\xb0\xfb\xa3\x62\x41\xe9\x58\x85\xce\x6f\x29\x3f\x11\xda\xc3\xa9\xbe\xa8\x96\xd8\x65\xb2\xab\x52\xdc\x98\x1d\xd9\xae\x25\x7b\xba\x9f\x39\xad\xa3\xe5\x5b\x36\x7a\x7f\xcc\x18\x1a\x02\x35\xe4\x59\x09\xf9\xd4\xa2\xd0\xf8\x64\x62\x10\x74\x81\x32\x7f\xfb\xef\xc7\xe9\xa8\x4a\x6c\x4e\xc7\xbb\xef\xe1\xee\x74\xa4\xf0\xde\xf2\xf3\x50\xfe\xab\x29\xc0\xcf\x98\x3d\x8a\x06\xc3\x7d\x05\xb0\xa7\xc3\x33\xe6\x86\xe4\x12\xbb\xe9\x3f\xa4\xe4\xfd\xed\x03\x5a\x47\xfb\xf1\xa1\x0d\xe5\xde\x19\xaa\xaa\xdf\x01\x00\x00\xff\xff\xc3\x6d\x79\x15\x8d\x04\x00\x00")

func appsV1DaemonsetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1DaemonsetsYaml,
		"apps/v1/daemonsets.yaml",
	)
}

func appsV1DaemonsetsYaml() (*asset, error) {
	bytes, err := appsV1DaemonsetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/daemonsets.yaml", size: 1165, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1DeploymentsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x4d\x8f\xdb\x36\x10\xbd\xfb\x57\x10\xbe\x04\x68\xbb\x12\xbc\xbd\x04\xba\x05\xdd\x43\x0a\x6c\x82\x85\xed\xf6\xd2\xf6\x30\x26\x27\x5a\x66\x29\x52\x20\x47\x42\x5d\xc3\xff\xbd\x20\xf5\x61\x52\x92\x37\xde\xe4\xa8\xf9\x78\x6f\x66\xf8\x34\x24\xd4\xf2\x4f\xb4\x4e\x1a\x5d\xb0\x0a\x09\x32\xa8\x6b\xc7\x8d\xc0\x8c\x9b\x2a\x6f\x37\xa0\xea\x67\xd8\xac\x5e\xa4\x16\x05\xdb\xa2\x33\x8d\xe5\xf8\x80\x8e\x5b\x59\x93\xb1\x2b\x9f\x23\x80\xa0\x58\x31\xc6\x2d\x02\x49\xa3\xf7\xb2\x42\x47\x50\xd5\x05\xd3\x8d\x52\x2b\xc6\x14\x1c\x50\x39\x1f\xc3\xd8\xcb\x7b\x97\x49\x93\x97\xd6\x34\x75\xc1\x3c\x5d\x6c\xee\x88\x1e\xb0\x56\xe6\x58\xa1\xa6\xd8\x67\x7b\xfa\x82\x89\xd1\x9f\x24\xb7\x43\x27\xed\x66\xc5\x98\x86\x0a\x3b\x82\xbb\x76\x73\x17\xa7\xb8\x1a\xb9\x2f\x66\x04\x0c\x20\xb3\x8a\x96\x4a\xe9\x40\xa7\xfc\x8e\x9b\x1a\x0b\xf6\x19\x2a\x74\x35\x70\x14\xc1\x9a\x96\x23\xb9\xd1\x61\x04\x77\xcc\x59\x5e\xb0\x67\xa2\xda\x15\x79\xce\x85\x4e\x87\xfe\xf2\xde\xe5\x21\x38\xf7\xe6\xbc\xe3\xca\x5c\x5b\x06\x50\x3a\x7a\x26\x59\x41\x89\xb9\x6b\xcb\x9f\xff\xad\xfc\x80\xb9\x51\x4d\xa5\xfb\x09\xdf\xb1\xaf\xce\xe8\x27\xa0\xe7\x82\x65\xc3\x01\x65\xbe\xf2\xe0\x1e\x9a\xf8\x7c\x31\x74\xa0\x8e\xac\xd4\x65\x6f\xaa\xad\x34\x56\xd2\xb1\x60\xbf\x7e\x03\x34\x74\x3c\x43\x8e\xad\xdf\x0d\xdf\xe9\x26\xc1\x7e\x8c\x4d\x1d\xb0\x39\x7c\x45\x4e\x6f\x02\x06\xad\x0d\x05\xb1\xa6\xe8\x1f\x66\xf6\xb7\x52\x78\x6d\x65\x0e\x15\x72\xff\x7b\xc4\xd8\xbb\xd4\xb8\x00\xfc\xc5\xd8\x0a\xa8\x60\x93\xf4\x0b\xdf\xe6\x1a\x1f\x59\x20\x2c\x8f\x99\x07\x4d\x49\x7b\xcf\x2d\x27\x71\x0d\xbd\x92\x7a\x8b\x20\x8e\x3b\xe4\x46\x8b\x74\x60\x9f\xa4\x66\xc1\xc9\x52\x6f\x2f\x53\x4d\x58\xe2\xed\x7d\x58\x6c\xa5\xff\x65\x3e\x4a\x47\xc6\x1e\x1f\x65\x25\x29\xa1\xdb\xf6\x01\xac\x8f\x60\x71\xc8\xf7\x71\x8e\xb3\xb3\x46\x29\xa9\xcb\x3f\x6a\x01\x94\x0e\x71\xdb\x79\x58\xe7\x5a\x9e\xe9\x15\x85\xcc\x59\xd7\xa7\xcc\x11\x50\xe3\xb2\x26\xc0\x89\x2d\xd6\x4a\x72\x70\x67\xd6\x1b\x7e\x61\x63\x88\x1d\x7d\x64\x08\x54\xe4\x81\x16\xa4\x82\x83\xc2\x4b\xfa\x68\x8a\xc2\x1a\xbd\x10\x18\x19\xd7\x13\xb5\xf8\xa4\x1f\xd1\xca\x50\x70\x02\xfb\x80\x4e\x5a\x14\x6c\x9b\x3a\xdf\x7c\x5e\xe3\xef\x3b\xbb\x69\xd2\x9f\xb8\x4c\x17\x4f\x74\x9e\x17\xf8\xfb\x19\xfc\xbb\x68\xea\x20\x8e\xe3\xb8\xf2\x53\xda\xda\xf9\x5d\xc2\xf6\x64\xc4\x4d\x13\x5b\x22\xb4\xa0\x4b\xec\x27\x47\x58\xd5\x0a\x08\xbb\x2f\x6e\x34\x81\xd4\x68\xdd\x5f\x3f\xfd\x73\x3e\x65\x61\xe1\x9f\x4f\xeb\xbf\xf5\xfa\x7c\x42\x2d\x26\x45\xfc\xee\xdd\xaf\x94\x31\x6c\x16\xee\xda\xc5\xc2\x5c\x73\xd8\x7b\x39\x8c\x37\x48\x07\xfb\x9b\xd1\x42\xc6\xdb\xf0\x8b\x44\x25\x86\xf3\xee\x86\xc5\xa7\x31\xc9\x5d\x34\x3b\xc3\x68\x43\x5d\xca\xdf\xa7\xc6\x85\x06\xa6\x5a\x8b\x85\x7a\x45\xbf\xb7\x21\x29\x70\xb4\xb7\xa0\x9d\x1c\x04\x35\x43\x5d\x3f\x82\x23\x76\x09\x62\x3e\x6a\x3d\x63\x89\x64\x36\xe1\xb0\x08\xce\xe8\x19\xee\x76\x6a\xbe\xad\xda\x6e\x0b\xbd\x52\x69\xbf\xa6\x5e\xad\xf2\x05\x8f\x7b\xb0\x25\xd2\x78\xe2\xf1\x4b\x30\x3c\x3c\xda\x4d\x9f\x3c\x3c\xfe\x82\xfc\x77\x48\x0b\x09\x93\xd8\x27\x23\xbe\x1d\xb4\x43\xdb\xca\xfe\x8d\x30\xa1\x6f\xc8\x38\x0e\x7e\xe7\xe6\xed\xfd\x01\x09\xee\x93\xcc\x8f\xc6\xca\xff\xfc\x0f\xa2\x9e\x8c\xf8\xd0\x07\x87\x15\xc2\x8d\xd6\xc8\x83\x1a\x87\xbe\x28\xb4\x79\x51\xe3\xf5\x3e\xaf\x74\x3a\x4c\xee\x13\x10\x7f\xde\xcd\x6f\xf6\xf0\xd2\xe9\x77\xfb\xfc\x61\x34\x9c\xc0\x70\xa7\xf7\x81\xc9\x33\x61\x88\x51\xd8\xa2\x0a\x7f\x1d\xf9\xcb\x08\xed\xea\xff\x00\x00\x00\xff\xff\xd0\x44\xe6\xc9\x9f\x0b\x00\x00")

func appsV1DeploymentsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1DeploymentsYaml,
		"apps/v1/deployments.yaml",
	)
}

func appsV1DeploymentsYaml() (*asset, error) {
	bytes, err := appsV1DeploymentsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/deployments.yaml", size: 2975, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1ReplicasetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x0c\xbc\x87\x00\xbb\xb0\x04\xe7\x14\xf0\x96\xdd\x1c\xb6\x40\x9b\x1a\x4d\xd0\x4b\xdb\xc3\x84\x9a\xca\x8c\xf9\x05\xce\x48\xad\x6b\xf8\xbf\x17\xa2\xa4\xc4\x8a\x92\x26\x47\x3d\xce\xbc\xf7\x66\xf8\x28\x8c\xe6\x33\x25\x36\xc1\x2b\x70\x24\x58\x60\x8c\xac\x43\x45\x85\x0e\xae\x6c\xd7\x68\xe3\x16\xd7\x8b\x9d\xf1\x95\x82\x4f\xc4\xa1\x49\x9a\xae\x88\x75\x32\x51\x42\x5a\x74\x3d\x15\x0a\xaa\x05\x80\x4e\x84\x62\x82\xbf\x35\x8e\x58\xd0\x45\x05\xbe\xb1\x76\x01\x60\xf1\x8e\x2c\x77\x35\x00\xbb\x0b\x2e\x4c\x28\xeb\x14\x9a\xa8\xa0\x93\x3b\x85\x47\xa1\x68\x8d\xc6\x1b\x92\xd3\xb3\x34\xc8\x2b\x48\xfd\x39\x93\x4c\x9a\xdb\x71\x92\x76\xbd\x00\xf0\xe8\xa8\x17\x58\xb5\xeb\xd5\x69\x0b\x47\xd2\x9d\x99\x07\xc2\x4c\x32\x73\xf4\x9c\x95\x9e\xf4\xa9\x3e\xeb\x10\x49\xc1\x35\x3a\xe2\x88\x9a\xaa\x8c\x4e\xed\x18\x1d\x7c\x5e\xc1\x0a\x38\x69\x05\x5b\x91\xc8\xaa\x2c\x75\xe5\xa7\x4b\xdf\x5d\x70\x99\x8b\xcb\x0e\x2e\x13\x17\xdc\xd6\x99\x50\xf6\x9d\x8a\x71\x58\x53\xc9\x6d\xfd\xcf\x4f\xd7\x2d\x57\x07\xdb\x38\x3f\x6c\x77\x05\xf7\x1c\xfc\x06\x65\xab\xa0\x18\x2f\xa7\xe8\x5c\xe7\xe3\x71\x80\xeb\x47\xa0\x27\x65\x49\xc6\xd7\xaf\x50\xe4\xd9\x66\x3c\xa7\xe8\x1b\xc9\xfa\x3c\x4c\x98\xde\x9f\x42\x3d\x4d\xb8\xbb\x27\x2d\x7f\xa0\x41\xef\x83\xe4\xc8\x4d\xb9\x2e\x67\xf8\x1b\x09\x67\x09\x9e\xd2\xd6\xd3\x31\x2b\x94\x1e\xf8\x0b\x74\xc3\x12\xdc\x78\x15\x33\x85\xb3\x43\xc1\x82\xd2\x70\x91\x08\xab\xfd\x90\x29\x3e\x96\x87\xa2\xcb\x62\x31\xe6\xe9\x78\x36\x11\xdc\x84\x8a\xdf\xb2\xd8\xb3\x43\x42\x5f\x13\xf4\x64\x42\x2e\x5a\x14\xea\xbf\x74\xf0\x82\xc6\x53\xe2\x2f\x7f\x7f\x3b\x1e\x8a\x9c\x9e\xe3\x61\xf9\xd5\x2f\x8f\x07\xf2\xd5\x13\xc9\x77\xdd\xf1\x8b\xa2\x00\xdf\x43\x72\x28\x0a\x34\xb7\x0b\x80\x1d\xed\x6f\x31\xd5\x24\x0f\xe9\x3b\xfd\x9f\xe4\xd8\x3f\xbe\xa4\x4d\xa8\x5e\x2f\xba\xa1\xd4\x9a\x21\x4e\xd3\x42\x6c\x24\xb0\x46\x6b\x7c\x5d\xb6\xe7\x77\x24\x78\x3e\xe9\xfc\x3f\x24\xf3\xab\x1b\xd6\x6e\x42\x75\x39\x14\x53\xca\x0f\xc4\x7b\xd2\x39\x0e\xa3\x4d\xc9\xae\xd5\x40\x00\xcf\x3b\x7a\x6a\x7c\x5c\xc8\x07\x14\xbd\xbd\x21\x4b\xba\xfb\x03\x3e\x6e\x2f\x3f\x84\xfe\x46\x96\xf3\x77\xb3\x1c\x2a\x79\x68\x1c\x0a\xf3\x25\x8d\xd8\x58\x63\xa9\x25\xab\xe0\xbf\xe0\x25\x05\xdb\x4f\xf1\x9a\xed\xfc\xb3\x98\x79\xbf\xa2\x68\xc3\xde\x91\x97\xc9\x08\x1f\x7f\x78\xaa\xfe\xdd\xbf\x28\xf7\x3b\x00\x00\xff\xff\x9b\xb6\x69\xf2\x17\x06\x00\x00")

func appsV1ReplicasetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1ReplicasetsYaml,
		"apps/v1/replicasets.yaml",
	)
}

func appsV1ReplicasetsYaml() (*asset, error) {
	bytes, err := appsV1ReplicasetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/replicasets.yaml", size: 1559, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1StatefulsetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x41\x6f\xdb\x30\x0c\x85\xef\xfe\x15\x44\x2e\x05\x36\xc4\x46\x6e\x85\x6e\xc3\x76\x19\xb0\x15\x45\x53\xec\xb2\xed\xc0\xca\xac\xa3\x46\x96\x04\x91\x36\x56\x18\xf9\xef\x83\x64\xbb\x8d\xeb\x6e\xed\x31\xcf\xe4\xf7\x48\xfa\xc5\x18\xcc\x0f\x8a\x6c\xbc\x53\xd0\x92\x60\x89\x21\xb0\xf6\x35\x95\xda\xb7\x55\xbf\x43\x1b\x0e\xb8\x2b\x8e\xc6\xd5\x0a\x6e\x88\x7d\x17\x35\x7d\x21\xd6\xd1\x04\xf1\xb1\x48\x3d\x35\x0a\xaa\x02\x40\x47\x42\x31\xde\xdd\x9a\x96\x58\xb0\x0d\x0a\x5c\x67\x6d\x01\x60\xf1\x8e\x2c\xa7\x1a\x80\xe3\x25\x97\xc6\x57\x4d\xf4\x5d\x50\x90\xec\xce\xe5\xd1\x68\x2f\x28\x74\xdf\xd9\x3d\xc9\xf9\xc3\x38\xf9\x2b\xe0\xa9\x80\x49\x16\xed\xfd\xbc\x4b\xbf\x2b\x00\x1c\xb6\x34\x5a\x6c\xfb\xdd\x76\xd1\xc3\x81\x74\x9a\xe7\x09\x99\x29\xab\xa1\x5e\x9d\x66\xc4\xae\x46\x60\xed\x03\x29\xb8\xc2\x96\x38\xa0\xa6\x3a\xab\xcb\x89\x8c\xf6\x2e\xdf\x61\x0b\x1c\xb5\x82\x83\x48\x60\x55\x55\xba\x76\xcb\xcb\x1f\x2f\xb9\xca\xc5\x55\x92\x2b\x16\x2e\xb9\x6f\x32\x51\x1e\x93\x8d\x69\xb1\xa1\x8a\xfb\xe6\xe3\x9f\x36\x9d\x58\x7b\xdb\xb5\x6e\xba\xf1\x16\x1e\xd8\xbb\x6b\x94\x83\x82\x72\x7e\x45\x65\x9a\x3b\x3f\x9e\x57\xb8\x7a\x16\x46\x28\x4b\x34\xae\x79\x03\x91\x97\x5b\x71\xce\xd5\x77\xc2\xc6\x54\x2c\x48\xdf\xce\xa5\x11\xe3\xef\x1e\x48\xcb\x7f\x30\xe8\x9c\x97\x1c\xbc\x25\xeb\xd3\x4a\x7f\x27\x70\x95\xe3\x25\xb6\x59\xae\x59\xa3\xd0\x0a\x76\x31\x94\x29\x1f\x1d\x97\x91\xb0\x7e\xbc\xa1\x60\x8d\x46\x3e\x55\x43\x99\x92\x57\xc6\x59\xb8\x58\xb0\xaf\x7d\xcd\xef\xb9\xe1\xc5\x10\xd1\x35\x04\x23\x4c\xa8\x0d\x16\x85\xc6\x5f\xda\x3b\x41\xe3\x28\xf2\xcf\x0f\xbf\x4f\x43\x99\x83\x72\x1a\x36\xbf\xdc\xe6\x34\x90\xab\x5f\x58\x7e\x4d\x8f\xff\x69\x0a\x70\xef\x63\x8b\xa2\x40\x73\x5f\x00\x1c\xe9\xf1\x16\x63\x43\xf2\x14\xb4\xf3\x0f\x48\x8e\xf8\xf3\xff\xe6\xda\xd7\x6f\x17\xed\x29\xf6\x26\x27\x47\x7b\xe7\x48\xe7\xf7\x35\xc3\x25\x7b\xa9\xa9\x01\x5e\xe7\xbc\xb4\x9b\xd7\xf8\x8e\xa2\x0f\x7b\xb2\xa4\xd3\x87\xea\x79\xe7\x9c\xd4\xf1\x8e\x9b\x75\xb0\x37\x53\x25\x4f\x8d\x53\x61\x3e\xed\xac\xcd\x35\x96\x7a\xb2\x0a\x3e\x7b\x27\xd1\x5b\x4b\xb1\xf8\x1b\x00\x00\xff\xff\x51\x10\xdc\xd3\x4f\x05\x00\x00")

func appsV1StatefulsetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1StatefulsetsYaml,
		"apps/v1/statefulsets.yaml",
	)
}

func appsV1StatefulsetsYaml() (*asset, error) {
	bytes, err := appsV1StatefulsetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/statefulsets.yaml", size: 1359, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authenticationK8sIoV1TokenreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\xc4\x30\x0c\x00\xef\x79\x85\x3f\xb0\x5d\xf5\x86\x72\x85\x17\xac\x56\xdc\x4d\xd6\x62\xa3\x26\xb1\x65\x3b\xe1\xfb\xa8\x2d\xa0\x22\x40\x5c\xe3\xb1\x67\x82\x92\x9f\x49\x2d\x73\x8b\x50\xc9\x71\x42\x11\x4b\x7c\xa3\x29\x71\x3d\x8f\x19\x8b\xdc\x71\x0e\x4b\x6e\xb7\x08\x17\x32\xee\x9a\xe8\x89\x2c\x69\x16\x67\x0d\xeb\xce\x0d\x1d\x63\x00\x48\x4a\xe8\x99\xdb\x35\x57\x32\xc7\x2a\x11\x5a\x2f\x25\x00\x14\x7c\xa1\x62\x2b\x03\xb0\x3c\xd8\x94\xf9\xfc\xaa\xdc\x25\x02\x76\xbf\x53\xf3\x9c\xb6\xcd\x69\x1f\x1e\xb9\xdd\x7c\xe5\x85\xda\x85\x46\xa6\xb7\xe3\x50\x3f\x82\x22\xf8\x0a\xe8\x06\xd8\x91\x18\x9f\x9f\x1b\x73\x00\x68\x58\xe9\x0f\xe7\x69\xcc\xa7\x6f\x47\x4c\x28\xad\xc5\x5f\x8e\xed\xec\xff\xd9\xbf\xf6\xee\xe2\x1f\x91\x96\x58\x28\xc2\x63\xe9\xe6\xa4\xdb\xd3\x31\xf8\x3d\x00\x00\xff\xff\xca\xd3\xd1\x68\x9d\x01\x00\x00")

func authenticationK8sIoV1TokenreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authenticationK8sIoV1TokenreviewsYaml,
		"authentication.k8s.io/v1/tokenreviews.yaml",
	)
}

func authenticationK8sIoV1TokenreviewsYaml() (*asset, error) {
	bytes, err := authenticationK8sIoV1TokenreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authentication.k8s.io/v1/tokenreviews.yaml", size: 413, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authorizationK8sIoV1LocalsubjectaccessreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\x2c\x31\x0c\x45\xfb\x7c\x85\x7f\x60\x67\x35\xdd\x53\xba\x27\x51\x22\x8a\x05\xd1\x7b\x3d\x16\x1b\x36\x89\xad\x38\x09\x12\x5f\x8f\x26\x03\x68\x0a\x60\xdb\xe4\x5c\xdf\x7b\x50\xc3\x33\x17\x0b\x92\x3d\x24\xae\x38\xa1\xaa\x91\x2c\x3c\x91\xa4\x63\x9f\x31\xea\x05\x67\x77\x0d\x79\xf1\x70\x62\x93\x56\x88\xef\xd8\xa8\x04\xad\x52\xdc\x9a\x59\xb0\xa2\x77\x00\x54\x18\x6b\x90\xfc\x14\x12\x5b\xc5\xa4\x1e\x72\x8b\xd1\x01\x44\x3c\x73\xb4\x95\x01\xb8\xfe\xb3\x29\xc8\xf1\xa5\x48\x53\x0f\xd8\xea\x45\x4a\x78\x1f\xc1\x69\xfb\xdb\x63\x5b\xf1\xbd\x10\xc6\xc7\x76\x7e\x65\xaa\xff\x89\xd8\xec\xc4\x3d\xf0\xdb\x9e\x2c\x9f\xe3\x3c\xc4\x95\xb6\x8d\xc6\x41\x97\x41\xdb\x1e\xef\x5f\xd6\x7d\x76\x00\x19\x13\xff\x3c\xe6\xd0\xe7\xc3\xef\x07\x4d\x99\x56\xad\xef\xf2\x51\x71\xd3\xed\xb6\xd4\x36\xe8\x6f\x13\x23\x51\xf6\xf0\x80\x89\x4d\x91\x78\x19\xaf\x7b\xb1\x8f\x00\x00\x00\xff\xff\x0e\xe4\xf0\xae\xde\x01\x00\x00")

func authorizationK8sIoV1LocalsubjectaccessreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authorizationK8sIoV1LocalsubjectaccessreviewsYaml,
		"authorization.k8s.io/v1/localsubjectaccessreviews.yaml",
	)
}

func authorizationK8sIoV1LocalsubjectaccessreviewsYaml() (*asset, error) {
	bytes, err := authorizationK8sIoV1LocalsubjectaccessreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authorization.k8s.io/v1/localsubjectaccessreviews.yaml", size: 478, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authorizationK8sIoV1SelfsubjectaccessreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\x03\x31\x0c\x45\xf7\x73\x0a\x5f\xa0\x53\xcd\x0e\x65\x87\xe0\x04\x2d\x62\xef\x7a\x5c\x1a\x9a\xc4\x91\x9d\x04\x89\xd3\xa3\xc9\x00\x9a\x05\xb4\xdb\xe4\x7d\xff\xff\x30\xfb\x57\x56\xf3\x92\x1c\x44\x2e\x38\x62\xce\x46\x32\xf3\x48\x12\xf7\x6d\xc2\x90\x2f\x38\x0d\x57\x9f\x66\x07\x07\x36\xa9\x4a\xfc\xcc\x46\xea\x73\x11\x1d\x96\xcc\x8c\x05\xdd\x00\x40\xca\x58\xbc\xa4\x17\x1f\xd9\x0a\xc6\xec\x20\xd5\x10\x06\x80\x80\x27\x0e\xb6\x30\x00\xd7\x07\x1b\xbd\xec\xdf\x54\x6a\x76\x80\xb5\x5c\x44\xfd\x67\x0f\x8e\xeb\xdf\x16\x5b\x8b\x8f\x1c\xce\xc7\x7a\x7a\x67\x2a\x8f\x44\x6c\x76\xe0\xe6\xf9\x63\x0b\xea\xf7\x36\x07\xc6\xe1\x6c\x2b\x8c\x1d\xd6\x0e\xdb\x96\x6e\x3f\xce\x6d\x1a\x00\x12\x46\xfe\x7b\xca\xae\x4d\xbb\x7f\xef\x59\x66\x5a\x9c\x7e\xab\x7b\xc3\x5d\xb1\xbb\x46\xeb\x9c\x9b\x1a\x46\x92\xd9\xc1\x53\xa8\x56\x58\xfb\xd3\x56\xe9\x2b\x00\x00\xff\xff\x77\xcf\x90\x04\xd6\x01\x00\x00")

func authorizationK8sIoV1SelfsubjectaccessreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authorizationK8sIoV1SelfsubjectaccessreviewsYaml,
		"authorization.k8s.io/v1/selfsubjectaccessreviews.yaml",
	)
}

func authorizationK8sIoV1SelfsubjectaccessreviewsYaml() (*asset, error) {
	bytes, err := authorizationK8sIoV1SelfsubjectaccessreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authorization.k8s.io/v1/selfsubjectaccessreviews.yaml", size: 470, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authorizationK8sIoV1SelfsubjectrulesreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\x5c\xa0\xa9\xb2\x43\xde\xc2\x09\x52\xc4\x7e\xea\xfc\x52\x53\xc7\x63\xcd\xd8\x46\xe2\xf4\x28\x09\xa0\x2c\x80\x6e\xed\xf7\xe7\xff\xc7\x39\xbc\x40\x2d\x48\x72\x34\xa3\x70\xcf\x39\x9b\x97\x09\xbd\x97\xf9\xd8\x06\x8e\xf9\xca\x43\x77\x0b\x69\x72\x34\xc2\xa4\xaa\xc7\x13\xcc\x6b\xc8\x45\xb4\x5b\x32\x13\x17\x76\x1d\x91\x57\x70\x09\x92\x9e\xc3\x0c\x2b\x3c\x67\x47\xa9\xc6\xd8\x11\x45\x3e\x23\xda\xc2\x10\xdd\x1e\xac\x0f\x72\x7c\x55\xa9\xd9\x11\xd7\x72\x15\x0d\x1f\x6b\xb0\xdf\xfe\xf6\xd8\x56\x7c\x42\xbc\x9c\xea\xf9\x0d\xbe\x8c\x35\xc2\x46\xb4\x80\xf7\x3d\xa7\x5f\xd3\x1c\x19\xe2\xc5\x36\x56\x17\x56\x57\xd6\xf6\x70\xfb\x36\x6e\x43\x47\x94\x78\xc6\xef\x43\x0e\x6d\x38\xfc\x75\xce\x32\xfc\x22\xf4\x53\xbc\x16\xdc\xb5\xba\xa7\xb3\x8d\xf9\xcf\xc1\xbc\x64\x38\x7a\x8c\xd5\x0a\x74\x7d\xda\xfb\x7c\x06\x00\x00\xff\xff\x22\x51\x4e\x2a\xd1\x01\x00\x00")

func authorizationK8sIoV1SelfsubjectrulesreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authorizationK8sIoV1SelfsubjectrulesreviewsYaml,
		"authorization.k8s.io/v1/selfsubjectrulesreviews.yaml",
	)
}

func authorizationK8sIoV1SelfsubjectrulesreviewsYaml() (*asset, error) {
	bytes, err := authorizationK8sIoV1SelfsubjectrulesreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authorization.k8s.io/v1/selfsubjectrulesreviews.yaml", size: 465, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authorizationK8sIoV1SubjectaccessreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\x03\x31\x0c\x00\xef\x79\x85\x3f\xd0\xad\xf6\x86\x72\x43\xf0\x82\x82\xb8\xbb\x5e\x8b\x86\x26\x71\x64\x27\x41\xe2\xf5\x68\xb3\x80\xf6\x50\xe0\x9a\x8c\xed\x19\x2c\xe1\x85\xd5\x82\x64\x0f\x89\x2b\x4e\x58\x8a\x91\x2c\x3c\x91\xa4\x63\x9f\x31\x96\x0b\xce\xee\x1a\xf2\xe2\xe1\xc4\x26\x4d\x89\x1f\xd9\x48\x43\xa9\xa2\x6e\x9d\x59\xb0\xa2\x77\x00\xa4\x8c\x35\x48\x7e\x0e\x89\xad\x62\x2a\x1e\x72\x8b\xd1\x01\x44\x3c\x73\xb4\x95\x01\xb8\xde\xd9\x14\xe4\xf8\xaa\xd2\x8a\x07\x6c\xf5\x22\x1a\x3e\xc6\xe0\xb4\xfd\xed\xb1\xed\xf0\x53\x3b\xbf\x31\xd5\x7b\x22\x36\x3b\x71\x0f\xfc\xbe\x87\xf4\xcb\xcb\x83\x6d\x20\x0e\x50\x07\x68\x7b\xb2\x7f\xb7\xf6\xd9\x01\x64\x4c\x7c\x5b\xe1\xd0\xe7\xc3\xcd\x5d\x56\x98\xd6\x8e\x9f\x93\x63\xfb\xbf\x31\x7f\x56\x6c\x1a\xbf\xaa\x1b\x49\x61\x0f\x0f\xb1\x59\x65\x1d\x4f\xfb\x8c\xcf\x00\x00\x00\xff\xff\x66\x64\x1a\x13\xc2\x01\x00\x00")

func authorizationK8sIoV1SubjectaccessreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authorizationK8sIoV1SubjectaccessreviewsYaml,
		"authorization.k8s.io/v1/subjectaccessreviews.yaml",
	)
}

func authorizationK8sIoV1SubjectaccessreviewsYaml() (*asset, error) {
	bytes, err := authorizationK8sIoV1SubjectaccessreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authorization.k8s.io/v1/subjectaccessreviews.yaml", size: 450, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _autoscalingV1HorizontalpodautoscalersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x6e\xeb\x30\x0c\x45\x77\x7f\x05\xf7\x87\x58\xf0\x16\x68\x7b\x40\x87\x4e\x45\x51\x14\xdd\x59\x8a\xb0\x85\x48\x22\x21\xca\x46\xdb\xaf\x2f\xec\xa4\x81\x33\xa4\x5d\xa5\x23\xde\x73\x45\xd4\xf8\xc6\xd5\xa2\x14\x0f\x99\x1b\xf6\xa8\x6a\x24\x81\x7b\x92\xec\x96\x01\x93\x4e\x38\x74\xa7\x58\x82\x87\x17\x36\x99\x2b\xf1\x03\x1b\xd5\xa8\x4d\x6a\xb7\xbe\x09\xd8\xd0\x77\x00\x54\x19\x5b\x94\xf2\x1a\x33\x5b\xc3\xac\x1e\xca\x9c\x52\x07\x90\xf0\x9d\x93\xad\x0c\xc0\xe9\x68\x7d\x14\x37\x56\x99\xd5\x03\xce\x4d\x8c\x30\xc5\x32\xee\x6f\xcf\x79\x8f\x52\xe3\x97\x94\x86\xe9\x59\xc2\xff\x0b\xc9\x75\x0f\xd6\x8b\x92\x87\xe9\x0a\xab\x04\xbc\xc2\xb6\xa7\x97\x9f\xaa\xcb\xd0\x01\x14\xcc\x7c\x63\x70\x58\x86\xc3\xdd\x31\xa6\x4c\x6b\x83\x6b\xe2\x36\xf8\x5e\x8d\x3f\xfd\xcf\xe1\xbf\x4a\x1b\x89\xb2\x87\x27\xcc\x6c\x8a\xc4\x61\x3b\xbd\xed\x10\x49\xca\xf6\xb1\x07\xb0\x4a\x1e\xa6\xd6\xd4\xbc\x73\x14\xca\xed\x2a\x4f\x47\x73\x1b\xec\x76\xae\x6e\x52\xec\x6d\x39\x3b\xb7\xcf\x35\x2d\x66\x1c\xd9\xd9\x32\xfe\xfb\xc8\xa9\xfb\x0e\x00\x00\xff\xff\xeb\x8a\xc0\x6e\x1f\x02\x00\x00")

func autoscalingV1HorizontalpodautoscalersYamlBytes() ([]byte, error) {
	return bindataRead(
		_autoscalingV1HorizontalpodautoscalersYaml,
		"autoscaling/v1/horizontalpodautoscalers.yaml",
	)
}

func autoscalingV1HorizontalpodautoscalersYaml() (*asset, error) {
	bytes, err := autoscalingV1HorizontalpodautoscalersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "autoscaling/v1/horizontalpodautoscalers.yaml", size: 543, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _autoscalingV2beta2HorizontalpodautoscalersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x31\x6b\xf3\x30\x10\x86\x77\xfd\x8a\xdb\x3f\x62\x91\x4c\x41\xdb\x07\x1d\x3a\x95\x52\x4a\xf7\x8b\x74\xd8\x22\x92\xee\xd0\xc9\xa6\xed\xaf\x2f\x76\x52\xe3\x40\xd3\xae\xba\x47\x7a\x9f\x57\x87\x12\xdf\xa8\x6a\xe4\xe2\x20\x53\xc3\x0e\x45\xd4\x73\xa0\xce\x73\xb6\xd3\x1e\x93\x0c\xb8\x37\xe7\x58\x82\x83\x17\x52\x1e\xab\xa7\x07\x52\x5f\xa3\x34\xae\x66\xbe\x13\xb0\xa1\x33\x00\xbe\x12\xb6\xc8\xe5\x35\x66\xd2\x86\x59\x1c\x94\x31\x25\x03\x90\xf0\x44\x49\x67\x06\xe0\x7c\xd4\x2e\xb2\xed\x2b\x8f\xe2\x00\xc7\xc6\xea\x31\xc5\xd2\x6f\xa7\x97\xbc\x47\xae\xf1\x93\x4b\xc3\xf4\xcc\xe1\xff\x95\xa4\xba\x05\xeb\x55\xc9\xc1\xb0\xc2\xc2\x01\x57\x58\xb7\xf4\xf4\x5d\x75\x3a\x9c\xa8\xe1\xc1\x00\x14\xcc\x74\xa3\xb1\xbb\xce\x76\x77\x1f\x54\x21\x3f\x77\x59\xb3\x97\x88\x7b\x85\xfe\x6c\x72\x31\xf8\x55\x5f\x3d\x0b\x39\x78\xc2\x4c\x2a\xe8\x29\x2c\xa7\x3f\xb4\x89\x9e\xcb\xf2\xcf\x3b\xd0\xea\x1d\x0c\xad\x89\x3a\x6b\x7d\x28\xb7\x9b\x3d\x1f\xd5\x2e\xb0\xdd\x08\xdb\x41\xb0\xd3\xe9\x22\xde\x3e\xe6\xc8\x98\xb1\x27\xab\x53\xff\xef\x3d\x27\xf3\x15\x00\x00\xff\xff\x02\xcf\x12\xa1\x2e\x02\x00\x00")

func autoscalingV2beta2HorizontalpodautoscalersYamlBytes() ([]byte, error) {
	return bindataRead(
		_autoscalingV2beta2HorizontalpodautoscalersYaml,
		"autoscaling/v2beta2/horizontalpodautoscalers.yaml",
	)
}

func autoscalingV2beta2HorizontalpodautoscalersYaml() (*asset, error) {
	bytes, err := autoscalingV2beta2HorizontalpodautoscalersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "autoscaling/v2beta2/horizontalpodautoscalers.yaml", size: 558, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _batchV1JobsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x41\x6b\xdc\x30\x10\x85\xef\xfe\x15\x43\x2e\x81\x96\x95\xd9\x5b\xd0\xad\xd0\x4b\x4b\x09\xa1\x0d\xbd\xb4\x3d\x8c\xe5\xa9\x57\xbb\x96\x46\x68\x66\x4d\xc3\xb2\xff\xbd\x58\xce\x6e\x6c\x4c\x9b\x1c\xfd\x34\xfa\xde\xcc\xe8\x19\x93\xff\x4e\x59\x3c\x47\x0b\x81\x14\x0d\xa6\x24\x8e\x5b\x32\x8e\x43\x3d\x6c\xb1\x4f\x3b\xdc\x56\x07\x1f\x5b\x0b\x5f\x49\xf8\x98\x1d\x7d\x24\x71\xd9\x27\xe5\x5c\x8d\x77\x5a\x54\xb4\x15\x80\xcb\x84\xea\x39\x3e\xfa\x40\xa2\x18\x92\x85\x78\xec\xfb\x0a\xa0\xc7\x86\x7a\x19\x6b\x00\x0e\x77\x62\x3c\xd7\x5d\xe6\x63\xb2\xd0\xa0\xba\xdd\x5c\x9f\x9c\x3e\x73\x33\x17\xf3\xb3\xb1\x85\x3d\x37\x32\x3f\x19\x2e\xcd\x0f\xdb\x0a\x20\x62\xa0\x67\xe6\x66\xd8\x6e\x4a\xb1\x24\x72\xa3\xf3\x95\x51\xae\xaf\xed\x17\xbe\x13\xe8\x6a\x26\x8e\x13\x59\xb8\xc7\x40\x92\xd0\x51\x5b\xd4\xa5\xb7\x77\x1c\xcb\x88\x1b\x90\xec\x2c\xec\x54\x93\xd8\xba\x76\x6d\x5c\x2e\xf5\x70\x27\x75\x29\xae\x8b\x7b\xbd\xe7\xc6\xc8\xd0\x15\xa4\x3e\x8d\x3e\x3e\x60\x47\xb5\x0c\xdd\xfb\x3f\x61\x5c\x9f\xe3\xfe\x18\xe2\xf3\xfe\x36\xb0\x17\x8e\x0f\xa8\x3b\x0b\xe6\xb2\x7e\x33\x36\x5c\x8e\x2f\xbd\xdf\xbf\x08\x13\x54\x34\xfb\xd8\xbd\x82\x28\xd3\xad\x38\x73\xf5\x8d\xb0\xe9\xc5\x17\xa4\x2f\x73\x69\xc2\x70\xb3\x27\xa7\xff\xc1\x60\x8c\xac\x25\x54\x4b\xd6\x87\x95\xfe\x46\xe0\x2a\xa3\x4b\x6c\xb7\x1c\xb3\x45\xa5\x15\xec\xf6\x94\x31\x76\x04\x66\x4c\x96\x51\x0a\xa9\x47\xa5\xe9\xcb\x71\x54\xf4\x91\xb2\xfc\x78\xf7\xeb\x7c\x32\xe5\x25\xcf\xa7\x9b\x9f\xf1\xe6\x7c\xa2\xd8\x9e\x6f\x17\x7e\x9f\xc6\x63\xf9\xd7\x66\x01\x7e\x73\x0e\xa8\x16\x9c\x0c\x15\xc0\x81\x9e\x1e\x31\x77\xa4\xd7\x24\xcc\xff\xde\x12\xc2\x97\x24\x3f\x70\xfb\x7a\xd1\x37\xca\x83\x77\x54\xfd\x0d\x00\x00\xff\xff\x56\x96\x31\x4c\x06\x04\x00\x00")

func batchV1JobsYamlBytes() ([]byte, error) {
	return bindataRead(
		_batchV1JobsYaml,
		"batch/v1/jobs.yaml",
	)
}

func batchV1JobsYaml() (*asset, error) {
	bytes, err := batchV1JobsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "batch/v1/jobs.yaml", size: 1030, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _batchV1beta1CronjobsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4f\x8f\xd3\x40\x0c\xc5\xef\xf9\x14\xd6\x5e\x56\x02\x35\x51\x6f\xab\xb9\x21\xb8\x80\xd0\x6a\xc5\x56\x5c\x80\x83\x33\x31\xe9\xb4\x99\xf1\x68\xec\x44\xac\xaa\x7e\x77\x94\x3f\x2d\x89\xc2\xfe\x39\xe6\x79\xe6\xe7\x67\xe7\x25\x18\xdd\x77\x4a\xe2\x38\x18\xf0\xa4\x98\x63\x8c\x62\xb9\xa2\xdc\xb2\x2f\xba\x2d\x36\x71\x8f\xdb\xec\xe8\x42\x65\xe0\x1b\x09\xb7\xc9\xd2\x27\x12\x9b\x5c\x54\x4e\x59\x7f\xa7\x42\x45\x93\x01\xd8\x44\xa8\x8e\xc3\xce\x79\x12\x45\x1f\x0d\x84\xb6\x69\x32\x80\x06\x4b\x6a\xa4\x3f\x03\x70\xbc\x93\xdc\x71\x51\x27\x6e\xa3\x81\x12\xd5\xee\xe7\xfa\xd8\xe9\x63\xe2\xf0\x85\xcb\x79\x21\x4d\xcd\x0d\xd8\xc4\xe1\xc0\xa5\xcc\xab\xdd\x65\x88\x6e\x5b\x92\xe2\x36\x03\x08\xe8\x69\x6a\xb0\x99\xd4\xcd\xf5\xaa\x44\xb2\xbd\x9f\x2b\x75\x80\xad\x4d\xad\xdc\x8c\xd4\x85\x05\xb1\x1c\xc9\xc0\x3d\x7a\x92\x88\x96\xaa\x41\xfd\x8f\x23\x67\x39\x0c\x5b\xd8\x80\x24\x6b\x60\xaf\x1a\xc5\x14\x85\xad\xc2\x72\xef\xc7\x3b\x29\x86\xc3\xc5\x60\xa5\x98\xda\xe5\xd2\xd5\x03\x5b\x9f\xfa\x86\xce\x63\x4d\x85\x74\xf5\xfb\x3f\xbe\xdf\xb2\xe5\xa6\xf5\x61\x5a\xf3\x06\x0e\xc2\xe1\x01\x75\x6f\x20\xbf\xbc\xa5\xbc\x77\x3f\x94\x2f\x83\xdc\xff\x13\x46\xa8\x68\x72\xa1\x7e\x05\x31\x8c\xb9\xe2\xcc\xd5\x37\xc2\xc6\x60\x2c\x48\x5f\xe7\xd2\x88\xe1\xf2\x40\x56\x5f\xc0\x60\x08\xac\x43\xf6\x96\xac\x0f\x2b\xfd\x8d\xc0\x55\x94\x97\xd8\x7a\x39\x66\x85\x4a\x6b\x58\x1f\xb1\x5c\xec\x9e\xaa\xb6\x59\x2e\xeb\x71\x29\xbe\xb8\xab\xdb\x53\xc2\x50\xd3\x84\x3b\x70\xb9\x23\x1f\x1b\x54\x1a\x05\x5d\x3c\x59\x0e\x8a\x2e\x50\x92\x1f\xef\x7e\x9d\x4f\xf9\x90\x90\xf3\xe9\xe6\x67\xb8\x39\x9f\x28\x54\xe7\xdb\x85\x8f\xcf\x7d\x59\x9e\x73\x01\xf0\x9b\x93\x47\x35\x60\xa5\xcb\x00\x8e\xf4\xb4\xc3\x54\x93\x5e\x13\x36\xff\x79\x74\xdb\xe9\xd2\xf8\xc9\x3c\x70\xf5\xfa\xa1\x47\x4a\x9d\xb3\x94\xfd\x0d\x00\x00\xff\xff\xd2\x23\x90\x01\x85\x04\x00\x00")

func batchV1beta1CronjobsYamlBytes() ([]byte, error) {
	return bindataRead(
		_batchV1beta1CronjobsYaml,
		"batch/v1beta1/cronjobs.yaml",
	)
}

func batchV1beta1CronjobsYaml() (*asset, error) {
	bytes, err := batchV1beta1CronjobsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "batch/v1beta1/cronjobs.yaml", size: 1157, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1ElasticsearchversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6e\xb3\x30\x10\x46\xf7\x9c\x62\xf6\xbf\x82\x95\x5d\xe4\xed\xdf\x5e\xa0\xaa\xba\x9f\x0c\x23\xb0\xb0\x3d\x96\x67\x40\xed\xed\x2b\x20\x89\xa8\x4a\xdb\x2d\x7a\xf8\x7b\xcf\xc6\x12\xde\xb8\x6a\x90\xec\x21\xb1\x61\x8b\xa5\x28\x49\xc7\x2d\x49\x72\xf3\x19\x63\x19\xf0\xdc\x8c\x21\x77\x1e\x5e\x58\x65\xaa\xc4\x4f\xac\x54\x43\x31\xa9\xcd\xf2\x4f\x87\x86\xbe\x01\xa0\xca\x68\x41\xf2\x6b\x48\xac\x86\xa9\x78\xc8\x53\x8c\x0d\x40\xc4\x2b\x47\x5d\x18\x80\xf1\xa2\x6d\x10\xd7\x57\x99\x8a\x07\x42\xc3\x28\x7d\x3b\x4e\x57\xee\xae\xcb\xe8\x1e\xda\x66\x9f\x23\xaa\x05\x52\xc6\x4a\xc3\xcd\x76\x4f\xd5\x9b\x96\x07\xde\x93\xf3\x46\xea\x1e\x9d\xef\xad\x8f\x32\x80\x8c\x89\x8f\x44\x4e\x77\xe6\x74\x7c\xac\x16\xa6\x25\xe9\x31\xbf\x0e\xfd\xd1\xf5\x7b\xd0\xa6\xf2\x73\x85\x92\x14\xf6\xf0\x3f\x4e\x6a\x5c\xd7\x4f\x47\x45\x81\x24\xaf\xb7\x7d\x02\xad\xe4\x61\x30\x2b\xea\x9d\xa3\x2e\x7f\x7d\xdf\xf1\xa2\x6e\x85\xdd\x77\x5f\x77\xa8\xd1\xea\xdc\xaf\xbb\xf6\xb1\x98\x84\x84\x3d\x3b\x9d\xfb\x7f\xef\x29\x7e\x06\x00\x00\xff\xff\x68\xb2\xbd\xde\x4c\x02\x00\x00")

func catalogKubedbComV1alpha1ElasticsearchversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1ElasticsearchversionsYaml,
		"catalog.kubedb.com/v1alpha1/elasticsearchversions.yaml",
	)
}

func catalogKubedbComV1alpha1ElasticsearchversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1ElasticsearchversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/elasticsearchversions.yaml", size: 588, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1EtcdversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcd\x6e\x83\x30\x0c\x80\xef\x3c\x85\xef\x13\x44\xbd\x55\xb9\x6e\x7b\x81\x69\xda\xdd\x38\x16\x8d\xc8\x9f\x62\x83\xb6\xb7\x9f\x80\xb6\xa2\x2a\x52\xaf\xf0\xc5\xdf\xe7\x04\x8b\xff\xe1\x2a\x3e\x27\x0b\x91\x15\x3b\x2c\x45\x28\x3b\xee\x28\x47\x33\x9f\x30\x94\x0b\x9e\x9a\xd1\x27\x67\xe1\x8b\x25\x4f\x95\xf8\x83\x85\xaa\x2f\x9a\x6b\xb3\x9c\x71\xa8\x68\x1b\x00\xaa\x8c\xea\x73\xfa\xf6\x91\x45\x31\x16\x0b\x69\x0a\xa1\x01\x08\xd8\x73\x90\x85\x01\x18\xcf\xd2\xf9\x6c\x86\x9a\xa7\x62\x81\x50\x31\xe4\xa1\x1b\xa7\x9e\x5d\xbf\x48\xf7\xd0\xa6\xfd\x54\x72\xd7\xc8\xfd\xcf\x7a\xad\xb1\xc0\x4a\x6e\xde\x00\xd9\x13\xf3\x6d\xb3\xfb\x1e\x00\x09\x23\x1f\x69\xdb\x1b\xd3\x3e\x4c\x93\xc2\xb4\x74\xdf\x65\xeb\xfc\x17\xf1\x87\xd5\x9b\xf8\x29\x55\x28\x17\xb6\xf0\x1e\x26\x51\xae\xeb\xa7\xa3\x6c\x4f\x39\xad\x17\xd8\x82\x54\xb2\x70\x51\x2d\x62\x8d\x21\x97\x1e\x9f\x6c\x3c\x8b\x59\x61\xf3\x5c\x67\xf6\xf6\x4e\xe6\x61\xd5\xe9\xdf\x12\xe0\x23\x0e\x6c\x64\x1e\xde\x7e\x63\xf8\x0f\x00\x00\xff\xff\x5b\x29\x24\x4e\x16\x02\x00\x00")

func catalogKubedbComV1alpha1EtcdversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1EtcdversionsYaml,
		"catalog.kubedb.com/v1alpha1/etcdversions.yaml",
	)
}

func catalogKubedbComV1alpha1EtcdversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1EtcdversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/etcdversions.yaml", size: 534, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1MemcachedversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbd\x6e\xac\x30\x10\x46\x7b\x9e\x62\xfa\x2b\xb0\xb6\x5b\xb9\xbd\x69\xd3\x44\x51\xfa\x61\x3c\x02\x0b\xff\xc9\x63\x50\xf2\xf6\x91\x81\x5d\x11\x41\x94\x16\x1d\xfc\x9d\x63\x63\xb2\x1f\x9c\xc5\xc6\xa0\xc1\x73\xc1\x0e\x53\x12\x8a\x86\x3b\x8a\x5e\x2d\x37\x74\x69\xc4\x5b\x33\xd9\x60\x34\xbc\xb1\xc4\x39\x13\xbf\xb0\x50\xb6\xa9\xc4\xdc\xd4\x7f\x0c\x16\xd4\x0d\x00\x65\xc6\x62\x63\x78\xb7\x9e\xa5\xa0\x4f\x1a\xc2\xec\x5c\x03\xe0\xb0\x67\x27\x95\x01\x98\xee\xd2\xd9\xa8\x86\x1c\xe7\xa4\x81\xb0\xa0\x8b\x43\x37\xcd\x3d\x9b\xbe\x8e\x1e\xa1\x6d\xf6\x95\x3d\x21\x8d\x6c\x76\xd3\x23\x91\x77\xa5\x6a\xbf\x53\xcb\x46\xc9\x11\x5b\x1e\x8d\xcf\x22\x80\x80\x9e\xaf\x04\xda\x07\xd3\x9e\x8f\x94\xc4\x54\x33\x9e\xb3\xeb\xc8\x1f\x2d\xbf\x47\x6c\x0a\xd7\xe6\x42\x31\xb1\x86\xff\x6e\x96\xc2\x79\xfd\x74\x55\x61\x29\x86\xf5\x66\x5b\x90\x4c\x1a\xc6\x52\x92\x68\xa5\xc8\x84\x9f\x6f\x39\xdd\x45\xad\xb0\x3a\x7b\xaa\x93\x42\x27\xcb\xb0\x6e\x96\xaf\x6a\x61\x3d\x0e\xac\x64\x19\xfe\x7d\x7a\xf7\x1d\x00\x00\xff\xff\x2a\xff\x23\x8e\x34\x02\x00\x00")

func catalogKubedbComV1alpha1MemcachedversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1MemcachedversionsYaml,
		"catalog.kubedb.com/v1alpha1/memcachedversions.yaml",
	)
}

func catalogKubedbComV1alpha1MemcachedversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1MemcachedversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/memcachedversions.yaml", size: 564, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1MongodbversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x31\x6f\xc3\x20\x10\x46\x77\xff\x8a\xdb\xab\x18\x65\x8b\x18\xdb\xac\x5d\xaa\xaa\xfb\x19\x4e\x04\x19\x38\xc4\x61\xab\xfd\xf7\x15\x76\x12\xb9\xa9\xab\xae\xf6\xb3\xdf\xfb\x00\xb3\xff\xa0\x22\x9e\x93\x86\x48\x15\x7b\xcc\x59\x0c\x5b\xea\x0d\x47\x35\x1f\x31\xe4\x0b\x1e\xbb\xd1\x27\xab\xe1\x8d\x84\xa7\x62\xe8\x4c\x62\x8a\xcf\x95\x4b\xd7\xbe\xb1\x58\x51\x77\x00\xa6\x10\x56\xcf\xe9\xdd\x47\x92\x8a\x31\x6b\x48\x53\x08\x1d\x40\xc0\x81\x82\x34\x06\x60\x3c\x49\xef\x59\xb9\xc2\x53\xd6\x60\xb0\x62\x60\xd7\x8f\xd3\x40\x76\x68\xd2\x2d\xb4\x6a\x5f\x39\x39\x3e\x3f\x5f\x3b\xb7\xef\xcb\x35\x48\x43\x6c\x8c\x1d\xe6\x95\x91\x2d\x34\xdf\xf6\xdd\xd7\x00\x24\x8c\xb4\x27\x3f\xdc\x98\xc3\xe3\x0f\x25\x93\x69\x03\xee\xca\x45\xf1\xcf\x8a\xbf\xf2\x57\xfd\x5e\xb3\x18\xce\xa4\xe1\x25\x4c\x52\xa9\x2c\x8f\xf6\xfa\xbd\xe1\xb4\x9c\xe7\x01\xa4\x18\x0d\x97\x5a\xb3\x68\xa5\x8c\x4d\x3f\x6f\x70\x3c\x89\x5a\x60\xf5\xbb\x51\x3d\x04\xf4\x32\xbb\xc5\x58\xbf\x5a\x83\x8f\xe8\x48\xc9\xec\x9e\x3e\x63\xf8\x0e\x00\x00\xff\xff\xb5\xf9\x10\xdf\x28\x02\x00\x00")

func catalogKubedbComV1alpha1MongodbversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1MongodbversionsYaml,
		"catalog.kubedb.com/v1alpha1/mongodbversions.yaml",
	)
}

func catalogKubedbComV1alpha1MongodbversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1MongodbversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/mongodbversions.yaml", size: 552, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1MysqlversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3d\x6f\xc3\x20\x10\x40\x77\xff\x8a\xdb\xab\x18\x65\x8b\x58\xdb\xb1\x1d\xfa\xa1\xee\x97\xf3\xc9\x41\x06\x8e\x72\xd8\xaa\xff\x7d\x65\x3b\x89\x6c\xc5\x52\x57\x78\xf0\xde\x01\x26\xf7\xcd\x59\x9d\x44\x0b\x81\x0b\xd6\x98\x92\x92\x34\x5c\x93\x04\x33\x1c\xd1\xa7\x0b\x1e\xab\xce\xc5\xc6\xc2\x07\xab\xf4\x99\xf8\x85\x95\xb2\x4b\x45\x72\x35\x9d\x69\xb0\xa0\xad\x00\x28\x33\x16\x27\xf1\xcb\x05\xd6\x82\x21\x59\x88\xbd\xf7\x15\x80\xc7\x33\x7b\x9d\x18\x80\xee\xa4\xb5\x13\xd3\x66\xe9\x93\x05\xc2\x82\x5e\xda\xba\xeb\xcf\xdc\x9c\x27\xe9\x1a\x5a\xb4\x6f\xe3\xe7\xfb\xeb\xb5\x72\xbd\x9b\xaf\x39\x16\xc2\xa8\x3f\x7e\x58\x08\x5d\x23\xc3\x6d\xb6\xfb\x24\x00\x11\x03\xef\x89\x0f\x37\xe6\xb0\xbd\x4e\x13\xd3\x94\x7e\xd7\xcd\x82\x7f\xfa\xf7\xc3\x17\xf5\x63\xad\x92\x24\xb6\xf0\xec\x7b\x2d\x9c\xe7\xa5\xbd\x72\x47\x12\xe7\x57\x3c\x80\x66\xb2\x70\x29\x25\xa9\x35\x86\x9a\xb8\xfd\xb7\xee\xa4\x66\x86\xcd\x63\x9f\xd9\xe8\x6b\x1d\xda\xd9\x57\xc6\xa9\xc0\x05\x6c\xd9\xe8\xd0\x3e\xfd\x06\xff\x17\x00\x00\xff\xff\x9f\x99\x16\x45\x1c\x02\x00\x00")

func catalogKubedbComV1alpha1MysqlversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1MysqlversionsYaml,
		"catalog.kubedb.com/v1alpha1/mysqlversions.yaml",
	)
}

func catalogKubedbComV1alpha1MysqlversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1MysqlversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/mysqlversions.yaml", size: 540, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1PerconaxtradbversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcd\x6a\xeb\x30\x10\x46\xf7\x7e\x8a\xd9\x5f\x62\x91\x5d\xd0\xf2\x36\x0f\x50\x4a\x29\xdd\x8e\xa5\xc1\x11\xd6\x1f\x33\x63\x93\xbe\x7d\xb1\x9d\x04\x97\xba\xed\xd6\x1c\xeb\x3b\x47\xc2\x1a\xde\x88\x25\x94\x6c\x21\x91\x62\x8b\xb5\x8a\x2b\x9e\x5a\x57\x92\x99\x8e\x18\xeb\x05\x8f\xcd\x10\xb2\xb7\xf0\x42\x52\x46\x76\x74\x26\x71\x1c\xaa\x16\x6e\xe6\x7f\x3c\x2a\xda\x06\xc0\x31\xa1\x86\x92\x5f\x43\x22\x51\x4c\xd5\x42\x1e\x63\x6c\x00\x22\x76\x14\x65\x66\x00\x86\x93\xb4\xa1\x98\x9e\xcb\x58\x2d\x38\x54\x8c\xa5\x6f\x87\xb1\x23\xdf\xcd\xa3\x5b\x68\x9d\x7d\x26\x76\x25\xe3\xbb\x32\x9e\xff\xdf\x6c\xb7\x14\xdf\xb4\x2c\xd4\x95\xbc\x2a\xa3\xef\xa6\x95\x94\x2d\x3a\xdd\x5b\x1f\x65\x00\x19\x13\xed\x89\x1c\xee\xcc\x61\xff\x58\xa9\xe4\xe6\xa4\xc7\xfc\x32\xf4\x47\xd7\xef\x41\xab\xca\xcf\x15\xe2\x4a\x25\x0b\x4f\x71\x14\x25\x5e\x3e\xed\x15\x05\x57\xf2\x72\xdb\x07\x10\x76\x16\x2e\xaa\x55\xac\x31\xce\xe7\xaf\xef\x3b\x9c\xc4\x2c\xb0\xf9\xee\x6b\x76\x35\x5a\x99\xfa\x65\x57\x3f\x66\x93\x90\xb0\x27\x23\x53\xff\xef\x9a\xe2\x67\x00\x00\x00\xff\xff\x77\xe7\x1c\x57\x4c\x02\x00\x00")

func catalogKubedbComV1alpha1PerconaxtradbversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1PerconaxtradbversionsYaml,
		"catalog.kubedb.com/v1alpha1/perconaxtradbversions.yaml",
	)
}

func catalogKubedbComV1alpha1PerconaxtradbversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1PerconaxtradbversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/perconaxtradbversions.yaml", size: 588, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1PgbouncerversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6a\xc3\x30\x10\x45\xf7\x3e\xc5\xec\x4b\x2c\xb2\x0b\x5a\xb6\x3d\x40\x29\xa5\xfb\xf1\x78\x50\x84\x25\x8d\xd0\x48\xa6\xbd\x7d\xb1\x9d\x84\x94\xb8\x74\x6b\x9e\xf5\xdf\x93\x30\xfb\x4f\x2e\xea\x25\x59\x88\x5c\xb1\xc7\x9c\x95\x64\xe4\x9e\x24\x9a\xf9\x88\x21\x9f\xf1\xd8\x4d\x3e\x8d\x16\xde\x59\xa5\x15\xe2\x57\x56\x2a\x3e\x57\x29\xdd\xf2\xcf\x88\x15\x6d\x07\x40\x85\xb1\x7a\x49\x1f\x3e\xb2\x56\x8c\xd9\x42\x6a\x21\x74\x00\x01\x07\x0e\xba\x30\x00\xd3\x49\x7b\x2f\xc6\x15\x69\xd9\x02\x61\xc5\x20\xae\x9f\xda\xc0\xe3\xb0\x8c\xde\x43\xdb\xec\x9b\x7b\x96\x96\x88\xcb\xc5\xf4\x9e\x28\x17\x25\x0b\xd9\x0d\x1b\x35\x6f\x94\xde\x63\xf3\xb5\xf1\x56\x04\x90\x30\xf2\x9e\xc0\xe1\xca\x1c\x1e\x8f\xd4\xcc\xb4\x64\xdc\x66\xd7\x91\x7f\x5a\xfe\x8e\xd8\x14\xf6\xcd\x95\x24\xb3\x85\x97\xd0\xb4\x72\x59\x3f\xed\x55\x78\x92\xb4\xde\xec\x01\xb4\x90\x85\x73\xad\x59\xad\x31\x34\xa6\xdf\x6f\x39\x9d\xd4\xac\xb0\x79\xf4\x34\x0f\x0a\xbd\xce\x6e\xdd\xac\xdf\x8b\x85\x8f\xe8\xd8\xe8\xec\x9e\xbe\x62\xf8\x09\x00\x00\xff\xff\xc8\x10\xd5\x28\x34\x02\x00\x00")

func catalogKubedbComV1alpha1PgbouncerversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1PgbouncerversionsYaml,
		"catalog.kubedb.com/v1alpha1/pgbouncerversions.yaml",
	)
}

func catalogKubedbComV1alpha1PgbouncerversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1PgbouncerversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/pgbouncerversions.yaml", size: 564, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1PostgresversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4d\x4e\xc3\x30\x10\x46\xf7\x39\xc5\xec\x51\x63\x75\x57\x79\x0b\x07\x40\x08\xb1\x9f\x38\x23\xd7\x8a\xed\xb1\x3c\x93\x08\x6e\x8f\xf2\xd3\x2a\xd0\x20\xb6\xd1\x8b\xbf\xf7\x6c\x2c\xe1\x83\xaa\x04\xce\x16\x12\x29\xb6\x58\x8a\x38\xee\xa9\x75\x9c\xcc\x74\xc6\x58\xae\x78\x6e\x86\x90\x7b\x0b\x6f\x24\x3c\x56\x47\x2f\x24\xae\x86\xa2\x5c\x9b\xf9\x9f\x1e\x15\x6d\x03\xe0\x2a\xa1\x06\xce\xef\x21\x91\x28\xa6\x62\x21\x8f\x31\x36\x00\x11\x3b\x8a\x32\x33\x00\xc3\x45\xda\xc0\xc6\x57\x1e\x8b\x05\x87\x8a\x91\x7d\x3b\x8c\x1d\xf5\xdd\x3c\xba\x87\xd6\xd9\x57\x16\xf5\x95\x64\x13\xdd\x03\x75\x33\xb2\x50\x36\x68\x5a\x21\xd9\x53\xd3\xad\xf0\xde\x03\x90\x31\xd1\xd1\xfc\xe9\xc6\x9c\x1e\x4e\x94\x42\x6e\x6e\xb8\x8f\x2e\x1b\xff\x84\xfc\x59\xb0\x0a\x1c\x6a\x8b\xe3\x42\x16\x9e\xe3\x28\x4a\x75\xf9\x74\x94\x10\x1c\xe7\xe5\x52\x4f\x20\xd5\x59\xb8\xaa\x16\xb1\xc6\xb8\x3e\xff\x7c\xc6\xe1\x22\x66\x81\xcd\xa3\xa5\xf9\x6d\xd0\xca\xe4\x97\x49\xfd\x9a\x25\x42\x42\x4f\x46\x26\xff\xf4\x99\xe2\x77\x00\x00\x00\xff\xff\x7e\x79\xb6\x1a\x2e\x02\x00\x00")

func catalogKubedbComV1alpha1PostgresversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1PostgresversionsYaml,
		"catalog.kubedb.com/v1alpha1/postgresversions.yaml",
	)
}

func catalogKubedbComV1alpha1PostgresversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1PostgresversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/postgresversions.yaml", size: 558, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1ProxysqlversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbd\x6e\xc3\x30\x0c\x06\x77\x3f\x05\xf7\x22\x16\xb2\x05\x5a\xdb\xb1\x43\xff\xd0\x9d\x91\x09\x47\xb0\x24\xb2\xa2\x6c\x24\x6f\x5f\xc8\xf9\x81\xdb\xb8\xe8\x6a\x9c\xf5\xdd\x49\x28\xfe\x93\xb2\x7a\x4e\x16\x22\x15\x6c\x51\x44\x1d\x77\xd4\x3a\x8e\x66\xda\x62\x90\x03\x6e\x9b\xc1\xa7\xce\xc2\x1b\x29\x8f\xd9\xd1\x13\xa9\xcb\x5e\x0a\xe7\xa6\xfe\xd3\x61\x41\xdb\x00\xb8\x4c\x58\x3c\xa7\x0f\x1f\x49\x0b\x46\xb1\x90\xc6\x10\x1a\x80\x80\x7b\x0a\x5a\x19\x80\x61\xa7\xad\x67\xd3\x67\x1e\xc5\x82\xc3\x82\x81\xfb\x76\x18\xf7\xd4\xed\xeb\xe8\x12\x3a\xcf\xbe\x64\x3e\x9e\xde\x5f\x9f\x2f\xa2\x4b\x20\x5f\x8c\x2c\x48\x85\xf4\x2b\x4c\x67\x48\x97\xd4\x74\x2d\xbc\xf5\x00\x24\x8c\xb4\x36\xbf\xb9\x32\x9b\xbb\x13\x55\xc8\xd5\x86\xdb\xe8\xbc\xf1\x4f\xc8\x9f\x05\x67\x81\x55\x6d\x75\x2c\x64\xe1\x31\x8c\x5a\x28\xcf\x9f\xd6\x12\xbc\xe3\x34\x5f\xea\x06\x34\x3b\x0b\x87\x52\x44\xad\x31\xae\x4b\x3f\x9f\x71\xd8\xa9\x99\x61\x73\x6f\x69\x7e\x1b\xb4\x3a\xf5\xf3\x64\x39\x55\x09\x1f\xb1\x27\xa3\x53\xff\x70\x8c\xe1\x3b\x00\x00\xff\xff\x10\xcc\xe6\x83\x2e\x02\x00\x00")

func catalogKubedbComV1alpha1ProxysqlversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1ProxysqlversionsYaml,
		"catalog.kubedb.com/v1alpha1/proxysqlversions.yaml",
	)
}

func catalogKubedbComV1alpha1ProxysqlversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1ProxysqlversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/proxysqlversions.yaml", size: 558, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubedbComV1alpha1RedisversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6e\xc3\x20\x0c\x40\xef\xf9\x0a\xdf\xa7\x06\xf5\x56\x71\xdd\xbe\x60\x9a\x76\x77\x8d\x95\xa2\x00\x46\x98\x44\xdb\xdf\x4f\xa4\x4d\x95\xa8\x91\x76\x85\x07\xef\x19\x30\xfb\x6f\x2e\xea\x25\x59\x88\x5c\xb1\xc7\x9c\x95\xc4\x71\x4f\x12\xcd\x7c\xc6\x90\x6f\x78\xee\x46\x9f\x9c\x85\x4f\x56\x99\x0a\xf1\x07\x2b\x15\x9f\xab\x94\xae\x9d\x71\x58\xd1\x76\x00\x54\x18\xab\x97\xf4\xe5\x23\x6b\xc5\x98\x2d\xa4\x29\x84\x0e\x20\xe0\x95\x83\x36\x06\x60\xbc\x68\xef\xc5\x0c\x45\xa6\x6c\x81\xb0\x62\x90\xa1\x1f\xa7\x2b\xbb\x6b\x93\x6e\xa1\x55\xeb\xbc\x3e\x2a\xb7\xbb\xe5\x91\x63\xa1\x34\x62\xbe\x13\xba\x45\xe6\x75\xb6\xe7\x24\x00\x09\x23\x1f\x89\x4f\x2b\x73\xda\x5f\xa7\x99\xa9\xa5\x3f\x75\x8b\xe0\x9f\xfe\xe3\xf0\xbb\xfa\xb5\x56\x49\x32\x5b\x78\x0f\x93\x56\x2e\xcb\xd2\x51\xb9\x27\x49\xcb\x2b\x9e\x40\x0b\x59\xb8\xd5\x9a\xd5\x1a\x43\x2e\xed\xff\x6d\xbc\xa8\x59\x60\xf3\xda\x67\x76\xfa\x5e\xe7\x61\xf1\xd5\xdf\x56\xe0\x23\x0e\x6c\x74\x1e\xde\x7e\x62\xf8\x0b\x00\x00\xff\xff\xcc\x39\x4b\x66\x1c\x02\x00\x00")

func catalogKubedbComV1alpha1RedisversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubedbComV1alpha1RedisversionsYaml,
		"catalog.kubedb.com/v1alpha1/redisversions.yaml",
	)
}

func catalogKubedbComV1alpha1RedisversionsYaml() (*asset, error) {
	bytes, err := catalogKubedbComV1alpha1RedisversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubedb.com/v1alpha1/redisversions.yaml", size: 540, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _catalogKubevaultComV1alpha1VaultserverversionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4d\x4e\xc3\x30\x10\x46\xf7\x39\xc5\xec\x51\x63\x75\x57\x79\x0b\x27\x00\xd4\xfd\xd4\x19\xa5\x56\xfc\x27\xcf\xd8\x82\xdb\x23\x3b\x6d\x15\xa4\x14\xb6\xc9\x8b\xbf\xf7\x62\x4c\xf6\x4c\x99\x6d\x0c\x1a\x3c\x09\x8e\x98\x12\x9b\x38\xd1\x68\xa2\x57\xf5\x88\x2e\x5d\xf1\x38\x2c\x36\x4c\x1a\xde\x89\x63\xc9\x86\xde\x88\x4d\xb6\x49\x62\x1e\xda\x37\x13\x0a\xea\x01\xc0\x64\x42\xb1\x31\x7c\x5a\x4f\x2c\xe8\x93\x86\x50\x9c\x1b\x00\x1c\x5e\xc8\x71\x63\x00\x96\x13\x8f\x36\xaa\x39\xc7\x92\x34\x18\x14\x74\x71\x1e\x97\x72\xa1\x8a\xc5\x49\xdb\xdd\x72\xeb\xf2\xb9\xbd\xfa\xa0\x5c\x29\xdf\x74\xb7\x4c\xbe\x79\x69\xe8\x47\x70\xe7\xea\xca\xf1\x16\xac\xf7\xd4\x47\x18\x40\x40\x4f\x4f\x3c\x0e\x77\xec\xb0\x77\x2e\x27\x32\x2d\xe9\xb1\xde\x97\xfe\xef\xfa\x2b\x68\x95\x79\x56\xc1\x26\x26\xd2\xf0\xea\x0a\x0b\xe5\xfe\x68\xaf\xc8\x9a\x18\xfa\xcf\x3e\x00\x67\xa3\xe1\x2a\x92\x58\x2b\x65\xa6\xf0\xfb\x7a\x97\x13\xab\x0e\xab\x5d\x5d\xb5\xe3\x31\x72\x9d\xfb\xb0\x7c\x37\x15\xeb\x71\x26\xc5\x75\x7e\xf9\xf2\xee\x27\x00\x00\xff\xff\x64\x04\xee\x17\x4c\x02\x00\x00")

func catalogKubevaultComV1alpha1VaultserverversionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_catalogKubevaultComV1alpha1VaultserverversionsYaml,
		"catalog.kubevault.com/v1alpha1/vaultserverversions.yaml",
	)
}

func catalogKubevaultComV1alpha1VaultserverversionsYaml() (*asset, error) {
	bytes, err := catalogKubevaultComV1alpha1VaultserverversionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "catalog.kubevault.com/v1alpha1/vaultserverversions.yaml", size: 588, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _certManagerIoV1alpha2CertificaterequestsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x3f\x4f\xc3\x40\x0c\x47\xf7\x7c\x0a\xef\x28\x39\x95\xa9\xba\x15\x66\x86\x0a\xb1\x1b\xc7\xa4\xa7\xde\x3f\x6c\x27\x82\x6f\x8f\x92\xb6\x10\x20\xea\x1a\xbd\xf8\xf7\x5e\x82\x35\xbc\xb0\x68\x28\xd9\x43\x62\xc3\x0e\x6b\x55\x2a\x3d\x77\x54\x92\x9b\x76\x18\xeb\x11\x77\xcd\x29\xe4\xde\xc3\x81\xb5\x8c\x42\xfc\xc8\x4a\x12\xaa\x15\x69\xe6\x77\x7a\x34\xf4\x0d\x00\x09\xa3\x85\x92\x9f\x43\x62\x35\x4c\xd5\x43\x1e\x63\x6c\x00\x22\xbe\x72\xd4\x99\x01\x38\xed\xb5\x0b\xc5\x0d\x52\xc6\xea\x81\x58\xac\x4d\x98\x71\x60\xe9\x42\x59\x13\xe7\xcd\x07\x16\x0b\x6f\x81\xd0\xf8\xc0\xef\x23\xab\xad\x19\xb9\x18\x9d\x0f\x5d\x38\x39\x73\xba\x06\xa7\x6b\xe4\x25\xe9\xbe\x01\xc8\x98\xf8\x9f\x41\x7b\x05\xda\xad\x8b\x5a\x99\xe6\x8c\xef\xdd\x65\xe3\x56\xcb\xad\x88\x1f\x81\x2d\x73\xa5\x52\xd9\xc3\x13\x26\xd6\x8a\xc4\xfd\xf2\x74\x2b\x24\x50\xc9\xcb\xd7\x6d\x41\x85\x3c\x1c\xcd\xaa\x7a\xe7\xa8\xcf\xbf\xff\xe7\x69\xaf\x6e\x81\xdd\x1f\x57\xb7\x21\xd1\xe9\x34\x2c\x93\xf6\x39\x7b\x84\x84\x03\x3b\x9d\x86\xbb\x8f\x14\xbf\x02\x00\x00\xff\xff\xcc\x23\x29\x95\x37\x02\x00\x00")

func certManagerIoV1alpha2CertificaterequestsYamlBytes() ([]byte, error) {
	return bindataRead(
		_certManagerIoV1alpha2CertificaterequestsYaml,
		"cert-manager.io/v1alpha2/certificaterequests.yaml",
	)
}

func certManagerIoV1alpha2CertificaterequestsYaml() (*asset, error) {
	bytes, err := certManagerIoV1alpha2CertificaterequestsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cert-manager.io/v1alpha2/certificaterequests.yaml", size: 567, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _certManagerIoV1alpha2CertificatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x3d\x4f\xc3\x40\x0c\x40\xf7\xfc\x0a\xef\x28\x39\x95\xa9\xba\x15\x66\x06\x84\xd8\x8d\x63\x52\xab\xf7\xa5\xb3\x13\xc1\xbf\x47\x49\x53\x48\xa0\x62\x4d\xde\xf9\x3d\xdf\x61\x91\x57\xae\x2a\x39\x79\x88\x6c\xd8\x61\x29\x4a\xb9\xe7\x8e\x72\x74\xd3\x01\x43\x39\xe1\xa1\x39\x4b\xea\x3d\x3c\xb3\xe6\xb1\x12\x3f\xb2\x52\x95\x62\xb9\x36\xf3\x99\x1e\x0d\x7d\x03\x40\x95\xd1\x24\xa7\x17\x89\xac\x86\xb1\x78\x48\x63\x08\x0d\x40\xc0\x37\x0e\x3a\x33\x00\xe7\xa3\x76\x92\xdd\x50\xf3\x58\x3c\x10\x57\x6b\x23\x26\x1c\xb8\x76\x92\xb7\xc4\xc5\xf9\xc0\xd5\xe4\x5d\x08\x8d\xb7\x3f\xeb\x9a\x72\x99\xb0\x02\xba\x25\xa6\xeb\x5a\xeb\x12\xf7\x0d\x40\xc2\xc8\x7f\x9c\xed\x15\x68\x77\xa3\xb4\x30\xcd\xc5\xdf\xa6\x65\xf8\x7f\xd9\x37\x7b\x7f\x94\xbb\x48\xa5\x5c\xd8\xc3\x13\x46\xd6\x82\xc4\xfd\xf2\xf5\x56\xb3\x50\x4e\xcb\xd5\xb5\xa0\x95\x3c\x9c\xcc\x8a\x7a\xe7\xa8\x4f\xfb\xc7\x3a\x1f\xd5\x2d\xb0\xfb\x55\xe7\xb6\xf6\x4e\xa7\x61\x71\xd9\xe7\x1c\x20\x11\x07\x76\x3a\x0d\x77\x1f\x31\x7c\x05\x00\x00\xff\xff\x6a\x68\x9d\x5a\x0d\x02\x00\x00")

func certManagerIoV1alpha2CertificatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_certManagerIoV1alpha2CertificatesYaml,
		"cert-manager.io/v1alpha2/certificates.yaml",
	)
}

func certManagerIoV1alpha2CertificatesYaml() (*asset, error) {
	bytes, err := certManagerIoV1alpha2CertificatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cert-manager.io/v1alpha2/certificates.yaml", size: 525, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _certManagerIoV1alpha2ClusterissuersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\xc4\x30\x0c\x40\xf7\x7c\x85\x7f\xa0\x3d\x1d\x13\xca\x0a\x0b\x2b\x42\xec\x26\xb5\x0e\xeb\x92\xd8\xb2\x93\xfb\x7e\xd4\x5e\xaf\xaa\xa8\x60\x4d\x9e\xfd\x9e\x51\xf9\x93\xcc\x59\x6a\x84\x42\x0d\x47\x54\xf5\x24\x13\x8d\x49\xca\xe9\x76\xc6\xac\xdf\x78\x0e\x57\xae\x53\x84\x77\x72\xe9\x96\xe8\x95\x3c\x19\x6b\x13\x0b\xf3\xcc\x84\x0d\x63\x00\x48\x46\xd8\x58\xea\x07\x17\xf2\x86\x45\x23\xd4\x9e\x73\x00\xc8\xf8\x45\xd9\x67\x06\xe0\xfa\xec\x23\xcb\xe9\x62\xd2\x35\x42\x22\x6b\x43\xc1\x8a\x17\xb2\x91\x65\x4f\xdc\x9d\x2f\xb9\x7b\x23\x7b\x73\xef\x64\xfb\x6f\x5b\x63\x22\xa4\x3b\xc2\x0b\xe2\x7b\xe6\xf6\x38\x6d\x3d\xe4\x29\x00\x54\x2c\x74\xf0\x0e\x0f\x60\xf8\xb5\xcc\x95\xd2\xdc\xbd\xd9\x96\xf5\xff\xc5\xff\x51\xbd\x6a\x8f\xa9\x9e\x44\x69\x9b\x58\x9e\x8e\xd9\x3f\x01\x00\x00\xff\xff\xa7\x99\x18\x9c\xa7\x01\x00\x00")

func certManagerIoV1alpha2ClusterissuersYamlBytes() ([]byte, error) {
	return bindataRead(
		_certManagerIoV1alpha2ClusterissuersYaml,
		"cert-manager.io/v1alpha2/clusterissuers.yaml",
	)
}

func certManagerIoV1alpha2ClusterissuersYaml() (*asset, error) {
	bytes, err := certManagerIoV1alpha2ClusterissuersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cert-manager.io/v1alpha2/clusterissuers.yaml", size: 423, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _certManagerIoV1alpha2IssuersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x3f\x4f\xf4\x30\x0c\xc6\xf7\x7e\x0a\xef\xaf\xda\xe8\xde\xe9\x94\x99\x85\x85\x01\x21\x76\xe3\x5a\xbd\xe8\xf2\xc7\xb2\xd3\x0a\xbe\x3d\x6a\xae\x45\xe5\x40\xac\xf6\x93\xe7\xf7\x4b\x82\x12\x5e\x59\x2d\x94\xec\x21\x71\xc5\x01\x45\x8c\xca\xc8\x03\x95\xe4\x96\x13\x46\xb9\xe0\xa9\xbb\x86\x3c\x7a\x78\x66\x2b\xb3\x12\x3f\xb0\x91\x06\xa9\x45\xbb\xf5\xcc\x88\x15\x7d\x07\x40\xca\x58\x43\xc9\x2f\x21\xb1\x55\x4c\xe2\x21\xcf\x31\x76\x00\x11\xdf\x38\xda\x9a\x01\xb8\x9e\x6d\x08\xc5\x4d\x5a\x66\xf1\x40\xac\xb5\x4f\x98\x71\x62\x1d\x42\x39\x26\x6e\xcc\x47\xb3\x99\xf5\x38\xd7\xcd\xc2\x43\x68\x3b\x3b\x2e\x97\xfd\x32\x9b\xfa\xff\x0e\x20\x63\xe2\x1f\xa4\x7e\x0f\xf4\x7b\x8b\x09\xd3\xaa\xf8\xd5\xdf\x7a\xff\xf2\xbc\x17\xbc\x81\x8e\x56\x46\x45\xd8\xc3\x13\x26\x36\x41\xe2\xb1\x4d\x7f\x93\x0c\x54\x72\x7b\xa1\x1e\x4c\xc9\xc3\xa5\x56\x31\xef\x1c\x8d\xf9\xfb\x9f\x5c\xcf\xe6\x5a\xd8\xdd\x39\xb9\x0d\x3c\xd8\x32\x35\x4c\xfd\x58\xd9\x21\xe1\xc4\xce\x96\xe9\xdf\x7b\x8a\x9f\x01\x00\x00\xff\xff\x5a\x12\x80\x9a\xef\x01\x00\x00")

func certManagerIoV1alpha2IssuersYamlBytes() ([]byte, error) {
	return bindataRead(
		_certManagerIoV1alpha2IssuersYaml,
		"cert-manager.io/v1alpha2/issuers.yaml",
	)
}

func certManagerIoV1alpha2IssuersYaml() (*asset, error) {
	bytes, err := certManagerIoV1alpha2IssuersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cert-manager.io/v1alpha2/issuers.yaml", size: 495, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _certificatesK8sIoV1beta1CertificatesigningrequestsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x4b\x4e\xc3\x40\x0c\x40\xf7\x39\x85\x2f\xd0\x54\xd9\xa1\xd9\x96\x13\x14\xc4\xde\x9d\x98\x60\x75\x3e\xc6\xf6\xe4\xfc\x28\x4d\x81\xa0\x56\xc0\x76\xe6\xd9\x7e\x0f\x85\x5f\x48\x8d\x6b\x09\x90\xc9\xb1\x47\x11\x8b\x75\xa4\x3e\xd6\xbc\x9f\x07\x4c\xf2\x86\x43\x77\xe6\x32\x06\x38\x92\xd5\xa6\x91\x1e\xc9\xa2\xb2\x78\xd5\x6e\x99\x19\xd1\x31\x74\x00\x51\x09\x9d\x6b\x79\xe6\x4c\xe6\x98\x25\x40\x69\x29\x75\x00\x09\x4f\x94\x6c\x61\x00\xce\x0f\xd6\x73\xdd\x4f\x5a\x9b\x04\x88\xa4\xce\xaf\x1c\xd1\xc9\xfa\xf5\x6b\x4b\xad\x77\x0f\xdf\xd0\x13\x4f\x85\xcb\x74\xa4\xf7\x46\xe6\x5b\x54\xaf\x72\x3f\x77\xae\xb8\xae\xb8\x6d\xf9\xf9\x33\x7b\x1e\x4e\xe4\x38\x74\x00\x05\x33\xdd\x55\xda\x5d\x99\xdd\x2f\xab\x4d\x28\x2e\x85\x5f\x1e\x97\x63\x7f\x65\xfe\xa3\xef\xd6\xea\x4e\x94\xc5\x2a\x14\xe0\x90\x9a\x39\xe9\xe5\xe9\x26\xf0\x23\x00\x00\xff\xff\x57\xe2\xa5\xb6\xec\x01\x00\x00")

func certificatesK8sIoV1beta1CertificatesigningrequestsYamlBytes() ([]byte, error) {
	return bindataRead(
		_certificatesK8sIoV1beta1CertificatesigningrequestsYaml,
		"certificates.k8s.io/v1beta1/certificatesigningrequests.yaml",
	)
}

func certificatesK8sIoV1beta1CertificatesigningrequestsYaml() (*asset, error) {
	bytes, err := certificatesK8sIoV1beta1CertificatesigningrequestsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "certificates.k8s.io/v1beta1/certificatesigningrequests.yaml", size: 492, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterK8sIoV1alpha1MachinesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x0a\xbf\xc0\x3a\xed\x86\x72\xe6\x0a\x07\x84\xb8\x1b\xf7\x17\x8b\x96\xc4\x96\x9d\xee\xf9\x51\x57\x56\x15\x26\x71\xf5\xe7\xf8\xfb\xc2\x96\x3f\xe0\x91\xb5\x25\xaa\xe8\x3c\xb2\x59\x88\x4e\x18\x45\xeb\xf1\x7a\xe2\x62\x67\x3e\x0d\x97\xdc\xa6\x44\x6f\x08\x9d\x5d\xf0\x8c\x10\xcf\xd6\xd5\x87\xe5\xcd\xc4\x9d\xd3\x40\x24\x0e\xee\x59\xdb\x7b\xae\x88\xce\xd5\x12\xb5\xb9\x94\x81\xa8\xf0\x27\x4a\x2c\x3b\x44\x97\xa7\x18\xb3\x1e\xbf\x5c\x67\x4b\x24\x65\x8e\x0e\x1f\xd7\xe9\x7e\x61\x55\xbe\xb0\x9c\x73\xc3\x1e\xf8\x4f\x45\xa2\xba\xc2\xd8\xd3\xeb\xfd\x37\x5b\x3b\x51\xe3\x8a\xbf\xaa\xc3\x9d\x1f\xb6\x2b\x61\x90\xa5\x71\x13\xdc\xee\xfe\x13\xfa\x50\xb8\x8a\x7e\x65\x85\xa8\x21\xd1\x2b\x57\x84\xb1\x60\xba\x4d\x1f\x2b\xbf\x03\x00\x00\xff\xff\xd0\x86\xb2\x84\x89\x01\x00\x00")

func clusterK8sIoV1alpha1MachinesYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterK8sIoV1alpha1MachinesYaml,
		"cluster.k8s.io/v1alpha1/machines.yaml",
	)
}

func clusterK8sIoV1alpha1MachinesYaml() (*asset, error) {
	bytes, err := clusterK8sIoV1alpha1MachinesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.k8s.io/v1alpha1/machines.yaml", size: 393, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterK8sIoV1alpha1MachinesetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x31\x4e\x03\x41\x0c\x45\xfb\x3d\x85\x2f\x90\x8d\xd2\xa1\xa9\x69\xa1\x00\x44\x6f\xbc\x5f\x64\x94\x99\xb1\x35\xf6\xe6\xfc\x68\xb3\x24\x5a\x05\x94\xd6\xff\xdb\xef\x99\x2d\x7f\xa2\x7b\xd6\x96\xa8\x22\x78\x64\x33\x17\x9d\x30\x8a\xd6\xfd\xf9\xc0\xc5\x8e\x7c\x18\x4e\xb9\x4d\x89\xde\xe0\x3a\x77\xc1\x33\x5c\x7a\xb6\xd0\x3e\x2c\x3b\x13\x07\xa7\x81\x48\x3a\x38\xb2\xb6\x8f\x5c\xe1\xc1\xd5\x12\xb5\xb9\x94\x81\xa8\xf0\x17\x8a\x2f\x1d\xa2\xd3\x93\x8f\x59\xf7\xdf\x5d\x67\x4b\x24\x65\xf6\x40\x1f\xd7\xe9\xb6\xb0\x22\x5f\x58\x8e\xb9\xe1\x1d\xb1\xcd\xfa\xaf\x48\xa2\xba\xe6\x8e\xf0\x6d\xe1\x7c\xfd\xe9\xf6\x01\x51\xe3\x8a\x7b\xe0\xee\x9a\xef\xb6\x87\xdc\x20\x8b\xec\x0d\x73\x39\xfd\xc0\xf8\x3f\xd5\x15\x77\xef\xe7\xa2\x86\x44\xaf\x5c\xe1\xc6\x82\xe9\x32\xfd\xab\xfb\x13\x00\x00\xff\xff\x69\xf0\xac\x43\x98\x01\x00\x00")

func clusterK8sIoV1alpha1MachinesetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterK8sIoV1alpha1MachinesetsYaml,
		"cluster.k8s.io/v1alpha1/machinesets.yaml",
	)
}

func clusterK8sIoV1alpha1MachinesetsYaml() (*asset, error) {
	bytes, err := clusterK8sIoV1alpha1MachinesetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.k8s.io/v1alpha1/machinesets.yaml", size: 408, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coordinationK8sIoV1LeasesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xcd\x4a\x04\x31\x0c\xc7\xef\x7d\x8a\xbc\xc0\xce\x32\x37\xe9\xd9\xa3\x78\x10\xf1\x1e\xd3\xa0\x65\xdb\x26\x24\x9d\x79\x7e\xe9\xcc\x2a\x45\x04\xaf\xf9\x7f\xfd\x82\x9a\xdf\xd8\x3c\x4b\x8b\x50\xb9\xe3\x82\xaa\x4e\x92\x78\x21\xa9\xd7\x7d\xc5\xa2\x9f\xb8\x86\x5b\x6e\x29\xc2\x0b\xbb\x6c\x46\xfc\xc8\x4e\x96\xb5\x8b\x85\x91\x49\xd8\x31\x06\x00\x32\xc6\x9e\xa5\xbd\xe6\xca\xde\xb1\x6a\x84\xb6\x95\x12\x00\x0a\xbe\x73\xf1\xe1\x01\xb8\x3d\xf8\x92\xe5\xfa\x61\xb2\x69\x04\x12\xb1\x94\xdb\x91\x5b\x4e\x69\x76\x9d\xbb\x4f\x8c\xce\xf3\xd9\xee\x20\x11\xca\x90\x7c\xd6\xf6\xef\x77\xf6\x35\x00\x34\xac\xfc\xe7\xca\x65\x5f\x2f\xf7\xb0\x2b\xd3\x60\xfb\x69\x3d\xea\xfe\x03\xfc\x45\x76\x0e\x4d\x38\x4e\xa2\x1c\xe1\x19\x2b\xbb\x22\x71\x3a\xae\x33\xdd\x57\x00\x00\x00\xff\xff\x1a\xb7\x40\xa1\x7c\x01\x00\x00")

func coordinationK8sIoV1LeasesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coordinationK8sIoV1LeasesYaml,
		"coordination.k8s.io/v1/leases.yaml",
	)
}

func coordinationK8sIoV1LeasesYaml() (*asset, error) {
	bytes, err := coordinationK8sIoV1LeasesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "coordination.k8s.io/v1/leases.yaml", size: 380, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1BindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xb1\x4e\x04\x31\x0c\x44\xfb\x7c\x85\x75\xfd\xed\x69\x3b\x94\x12\x51\x53\x20\x44\xef\x73\xac\xc3\xba\x24\xb6\xe2\xec\x7e\x3f\xda\x5b\x58\x05\x68\x67\xc6\xf3\xc6\x68\xf2\xc1\xcd\x45\x6b\x84\xc2\x1d\x27\x34\x73\xd2\xc4\x13\x69\xb9\xac\x33\x66\xfb\xc4\x39\xdc\xa5\xa6\x08\x6f\xec\xba\x34\xe2\x17\x76\x6a\x62\x5d\x5b\xd8\x6e\x12\x76\x8c\x01\x80\x1a\x63\x17\xad\xef\x52\xd8\x3b\x16\x8b\x50\x97\x9c\x03\x40\xc6\x2b\x67\xdf\x32\x00\xf7\x27\x9f\x44\x2f\xb7\xa6\x8b\x45\x38\x9d\x46\x71\xc7\x3c\x4b\x4d\x52\x6f\xa3\xd1\xbe\xc9\x11\xae\xbb\xe9\xa3\xbb\xfe\x7c\xb0\xce\x01\xa0\x62\xe1\x08\xa4\x8d\xcf\xeb\x7c\x3e\xf2\x6e\x4c\xdb\x82\xa3\xea\xd1\xf0\x67\xc6\x3f\xfe\x5e\xf6\x0b\xea\xa4\xc6\x11\x5e\xb1\xb0\x1b\x12\xa7\x87\x3a\x6e\xf8\x0a\x00\x00\xff\xff\xa1\x6e\x20\x48\x55\x01\x00\x00")

func coreV1BindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1BindingsYaml,
		"core/v1/bindings.yaml",
	)
}

func coreV1BindingsYaml() (*asset, error) {
	bytes, err := coreV1BindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/bindings.yaml", size: 341, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ComponentstatusesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4d\x4e\xc4\x30\x0c\x85\xf7\x39\x85\x35\xfb\xe9\xa8\x3b\x94\xed\x70\x02\x40\xec\x4d\x6a\x41\x34\x49\x6c\xd9\x4e\xcf\x8f\x1a\x28\x2a\x7f\xdb\xa7\xef\x3d\x7f\x46\xc9\xcf\xa4\x96\xb9\x45\xa8\xe4\x38\xa1\x88\x25\x5e\x68\x4a\x5c\x2f\xeb\x8c\x45\xde\x70\x0e\xb7\xdc\x96\x08\x0f\x64\xdc\x35\xd1\x3d\x59\xd2\x2c\xce\x1a\xb6\xce\x82\x8e\x31\x00\x24\x25\xf4\xcc\xed\x29\x57\x32\xc7\x2a\x11\x5a\x2f\x25\x00\x14\x7c\xa1\x62\x1b\x03\x70\xbb\xb3\x29\xf3\xe5\x55\xb9\x4b\x84\xd3\xe9\x18\x7e\x9c\xb9\x72\x15\x6e\xd4\xfc\xd1\xd1\xbb\x1d\x01\xfd\x34\x88\x90\x76\xc8\x06\x44\xdf\xb0\x75\x7f\x69\x9d\x03\x40\xc3\x3a\x0a\x4a\xe7\x75\x3e\xff\x2e\x9a\x50\xda\xdc\xbe\xc6\xc7\xd4\x0f\xc1\x7f\xcd\xf6\xf5\xbf\x74\x2c\xb1\x50\x84\x6b\xe9\xe6\xa4\x23\x3a\xaa\xbd\x07\x00\x00\xff\xff\x21\xa4\xec\xb6\x7d\x01\x00\x00")

func coreV1ComponentstatusesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ComponentstatusesYaml,
		"core/v1/componentstatuses.yaml",
	)
}

func coreV1ComponentstatusesYaml() (*asset, error) {
	bytes, err := coreV1ComponentstatusesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/componentstatuses.yaml", size: 381, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ConfigmapsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\x4f\x4f\xfb\x30\x0c\xbd\xf7\x53\x58\xbb\xfe\xd4\x46\xbd\x4d\xb9\xfe\xb8\x82\x10\x9a\xb8\x1b\xd7\x74\x51\x9b\xd8\x8a\xb3\x8a\x7d\x7b\xd4\xb0\x41\x8b\xb8\xe6\x3d\xbf\x7f\x41\x0d\xaf\x9c\x2d\x48\xf2\x10\xb9\x60\x87\xaa\x46\x32\x70\x47\x12\xdd\xd2\xe3\xac\x67\xec\x9b\x29\xa4\xc1\xc3\x0b\x9b\x5c\x32\xf1\x03\x1b\xe5\xa0\x45\x72\xb3\xde\x0c\x58\xd0\x37\x00\x94\x19\x4b\x90\x74\x0a\x91\xad\x60\x54\x0f\xe9\x32\xcf\x0d\xc0\x8c\x6f\x3c\xdb\xca\x01\x98\x8e\xd6\x05\x71\x63\x96\x8b\x7a\x38\x1c\xb6\x8f\x5f\x36\xff\x25\xbd\x87\xf1\x11\x75\x0b\xe5\x9b\xb7\x07\xaa\x70\x44\xb5\x2d\xbe\xdc\x5b\x2c\x7d\x03\x90\x30\x56\x66\xe6\x76\xe9\xdb\xcd\x85\x29\xd3\x9a\xe3\x5b\xae\x6a\xfc\x0a\xf3\x47\x8a\xbb\xe0\xce\xda\x48\x94\x3d\x3c\x61\x64\x53\x24\x1e\xea\xeb\x3e\x49\x20\x49\xb5\x79\x0b\x96\xc9\xc3\xb9\x14\x35\xef\x1c\x0d\x69\xbf\xf5\x74\x34\x57\xc9\x6e\x8d\xed\x28\x76\xb6\x8c\x55\xb0\x5c\x57\x97\x10\x71\x64\x67\xcb\xf8\xef\x23\xae\x9b\x4e\x7c\x3d\x61\x1e\xb9\xdc\x76\x6d\x61\xfb\x97\xd5\xfb\xa7\xcc\xb3\x0c\xcd\x67\x00\x00\x00\xff\xff\x54\x2d\x1c\x66\xeb\x01\x00\x00")

func coreV1ConfigmapsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ConfigmapsYaml,
		"core/v1/configmaps.yaml",
	)
}

func coreV1ConfigmapsYaml() (*asset, error) {
	bytes, err := coreV1ConfigmapsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/configmaps.yaml", size: 491, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1EndpointsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x3d\x4f\x03\x31\x0c\x86\xf7\xfc\x0a\xab\x2b\xea\x45\xb7\x55\x99\x61\x65\x40\x88\xdd\x38\xd6\x35\x6a\x12\x5b\x71\x1a\xc1\xbf\x47\x77\xe5\xa3\x45\x5d\xfd\xf1\x3e\x8f\x8d\x9a\xde\xb8\x59\x92\x1a\xa0\x70\xc7\x09\x55\x8d\x24\xf2\x44\x52\xfc\x98\x31\xeb\x11\x67\x77\x4a\x35\x06\x78\x61\x93\x73\x23\x7e\x64\xa3\x96\xb4\x4b\x73\xeb\x4e\xc4\x8e\xc1\x01\x50\x63\xec\x49\xea\x6b\x2a\x6c\x1d\x8b\x06\xa8\xe7\x9c\x1d\x40\xc6\x77\xce\xb6\xce\x00\x9c\x0e\x36\x25\xf1\x4b\x93\xb3\x06\xd8\xed\xae\x8b\x17\xcc\x53\x8d\x2a\xa9\x76\xbb\x6e\xb5\x6f\x76\x00\xbe\xd7\x1e\x3f\x47\x8c\xd9\x01\x54\x2c\x1c\x80\xa4\xf1\x7e\xcc\xfb\xbf\x05\x53\xa6\xd5\xe2\x37\x6c\x8b\xf8\xa7\x72\xc7\xe1\x92\x77\x0b\x36\x12\xe5\x00\xcf\x58\xd8\x14\x89\xe3\x56\xbd\xf5\x48\x24\x75\x3b\x7b\x0f\xd6\x28\xc0\xb1\x77\xb5\xe0\x3d\xc5\x7a\xfb\xe8\xd3\xc1\xfc\x36\xec\x57\x69\xcf\x3a\xd9\x58\xb6\xc0\xfe\xb9\x52\x52\xc1\x85\xbd\x8d\xe5\xe1\xa3\x64\xf7\x15\x00\x00\xff\xff\xac\x94\x73\x79\xb5\x01\x00\x00")

func coreV1EndpointsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1EndpointsYaml,
		"core/v1/endpoints.yaml",
	)
}

func coreV1EndpointsYaml() (*asset, error) {
	bytes, err := coreV1EndpointsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/endpoints.yaml", size: 437, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1EventsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xbd\x4e\x2b\x31\x10\x85\x7b\x3f\xc5\x28\x7d\x36\xda\xee\xca\xf5\xa5\xa5\x40\x88\x7e\x98\x3d\x02\x2b\xb6\x67\xe4\xf1\xfa\xf9\xd1\x26\x01\x59\x69\xcf\xdf\x77\xd8\xd2\x07\x9a\x27\xad\x91\x0a\x3a\x2f\x6c\xe6\xa2\x1b\x16\xd1\x72\x19\x2b\x67\xfb\xe6\x35\x5c\x53\xdd\x22\xbd\xc1\x75\x6f\x82\xff\x70\x69\xc9\xba\xb6\x70\x74\x36\xee\x1c\x03\x91\x34\x70\x4f\x5a\xdf\x53\x81\x77\x2e\x16\xa9\xee\x39\x07\xa2\xcc\x9f\xc8\x7e\x64\x88\xae\xff\x7c\x49\x7a\xf9\x6a\xba\x5b\xa4\xd3\x69\x16\xef\x98\x97\x81\xda\x67\xb9\x3d\xb8\x91\x70\x58\x3e\x7b\xe3\xf7\xfd\x58\x03\x51\xe5\x82\x48\xa2\x0d\xe7\xb1\x9e\x1f\x69\x37\xc8\xc1\xfe\x9b\xb9\xf5\x9f\x0e\x3c\x91\xef\x43\x13\xce\x45\x0d\x91\x5e\xb9\xc0\x8d\x05\xdb\x4d\x9d\xe9\x3f\x01\x00\x00\xff\xff\xdf\x3a\x26\xbe\x4b\x01\x00\x00")

func coreV1EventsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1EventsYaml,
		"core/v1/events.yaml",
	)
}

func coreV1EventsYaml() (*asset, error) {
	bytes, err := coreV1EventsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/events.yaml", size: 331, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1LimitrangesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x3f\x4f\x03\x31\x0c\xc5\xf7\x7c\x0a\xab\x2b\xea\x45\xb7\x55\x99\x19\x11\x43\x85\xd8\x8d\xcf\xba\x46\xcd\x1f\x2b\xce\x45\xf0\xed\x51\x52\x40\xd7\x8a\xd5\xef\xf9\xbd\x9f\x8d\xe2\xdf\xb9\xa8\xcf\xc9\x41\xe4\x8a\x13\x8a\x28\xe5\x85\x27\xca\xd1\xb6\x19\x83\x5c\x70\x36\x57\x9f\x16\x07\x67\xd6\xbc\x15\xe2\x67\x56\x2a\x5e\x6a\x2e\xa6\xef\x2c\x58\xd1\x19\x00\x2a\x8c\xd5\xe7\xf4\xe6\x23\x6b\xc5\x28\x0e\xd2\x16\x82\x01\x08\xf8\xc1\x41\xbb\x07\xe0\x7a\xd2\xc9\x67\xbb\x96\xbc\x89\x83\xc3\x61\x3f\xbc\xd5\xbc\xf8\xe8\xeb\x19\xd3\xca\x7b\xad\xfc\x94\x3b\x08\x5d\x2f\x5d\xd7\xbd\xa1\xfd\xde\xd1\x66\x03\x90\x30\xb2\x03\xca\x85\x8f\x6d\x3e\xee\x57\x54\x98\x3a\xca\x5f\xe0\x08\x79\xe0\xf9\x0f\xe4\x16\xf9\xd8\xae\x94\x85\x1d\xbc\x62\x64\x15\x24\x5e\xc6\xf4\x1e\xc6\x53\x4e\xe3\xfc\x23\x68\x21\x07\x97\x5a\x45\x9d\xb5\xb4\xa4\xfb\x87\x5f\x4f\x6a\x87\xd9\x76\x72\x3b\xba\x74\xd2\xb6\x8e\xd0\xfa\xd5\x9b\x7c\xc4\x95\xad\xb6\xf5\xe9\x33\x06\xf3\x1d\x00\x00\xff\xff\x2d\x8d\xd8\xc5\xc1\x01\x00\x00")

func coreV1LimitrangesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1LimitrangesYaml,
		"core/v1/limitranges.yaml",
	)
}

func coreV1LimitrangesYaml() (*asset, error) {
	bytes, err := coreV1LimitrangesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/limitranges.yaml", size: 449, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1NamespacesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\x05\x91\xb5\xb0\x05\x6f\x81\xd6\x76\xee\x50\x14\xdd\x59\x9a\x70\x04\xeb\x87\x10\x65\xa1\x7d\xfb\xc2\x4a\x53\x38\x41\x57\xde\xf1\xee\x23\x51\xfc\x07\x17\xf5\x39\x39\x88\x5c\x71\x44\x11\xa5\x3c\xf3\x48\x39\xda\x36\x61\x90\x0b\x4e\x66\xf5\x69\x76\xf0\xc6\x9a\xb7\x42\xfc\xc2\x4a\xc5\x4b\xcd\xc5\xec\x3b\x33\x56\x74\x06\x80\x0a\x63\xf5\x39\xbd\xfb\xc8\x5a\x31\x8a\x83\xb4\x85\x60\x00\x02\x7e\x72\xd0\xdd\x03\xb0\x9e\x75\xf4\xd9\x2e\x25\x6f\xe2\xe0\x74\x3a\x0e\xaf\x35\xaf\x18\x59\x05\x89\x8f\x52\xf9\xed\x76\x90\x6e\xb2\x1e\xf5\x76\xbb\xa2\x4d\x06\xba\xc7\x01\xe5\xc2\x43\x9b\x86\xc3\x86\x0a\xd3\xce\xf1\x17\xd7\x33\x1e\x60\xfe\xa1\xb8\x06\x3e\x54\x2b\x65\x61\x07\xcf\x61\xd3\xca\xa5\x8f\xee\x31\x3c\xe5\xd4\xcf\x1e\x40\x0b\x39\xb8\xd4\x2a\xea\xac\xa5\x39\xdd\x3f\x7a\x3d\xab\xed\x66\xbb\x33\xdb\xa4\xa3\xb6\xa5\x07\xd6\xef\xbd\xc2\x47\x5c\xd8\x6a\x5b\x9e\xbe\x62\x30\x3f\x01\x00\x00\xff\xff\xdd\x65\x32\xe9\xb5\x01\x00\x00")

func coreV1NamespacesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1NamespacesYaml,
		"core/v1/namespaces.yaml",
	)
}

func coreV1NamespacesYaml() (*asset, error) {
	bytes, err := coreV1NamespacesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/namespaces.yaml", size: 437, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1NodesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xbd\x6e\xc4\x20\x10\x84\x7b\x9e\x62\x75\x6d\x74\x46\xee\x4e\xb4\x49\x9d\x22\x8a\xd2\x6f\x96\x95\x0f\x1d\xb0\x88\xc5\x28\x79\xfb\x08\x5f\x7e\xec\xb4\xc3\xcc\x7c\xc3\x62\x09\x6f\x5c\x35\x48\x76\x90\xb8\xe1\x84\xa5\x28\x89\xe7\x89\x24\xd9\x3e\x63\x2c\x57\x9c\xcd\x2d\x64\xef\xe0\x85\x55\xd6\x4a\xfc\xc4\x4a\x35\x94\x26\xd5\x8c\x8c\xc7\x86\xce\x00\x50\x65\x6c\x41\xf2\x6b\x48\xac\x0d\x53\x71\x90\xd7\x18\x0d\x40\xc4\x77\x8e\x3a\x3c\x00\xb7\x8b\x4e\x41\xec\x52\x65\x2d\x0e\x4e\xa7\xbd\x78\xc7\x3c\x8b\xe7\xbd\x5a\xbf\xb1\x0e\xb2\x78\xd6\xfd\x53\xff\xd9\xde\x67\x03\x90\x31\xb1\x03\x92\xca\xe7\x3e\x9f\xef\x66\x2d\x4c\x03\xfc\x5b\xb2\xc5\xff\xd1\x8f\xd8\x7b\xcd\x1f\x4b\x49\x0a\x3b\x78\x8c\xab\x36\xae\x9b\x74\xe4\x06\x92\xbc\xfd\xee\x0c\x5a\xc9\xc1\xb5\xb5\xa2\xce\x5a\xf2\xf9\x78\xcf\xdb\x45\xed\x66\xb6\x63\xa4\x1d\x88\x49\xfb\xb2\x55\xb6\xcf\x01\x09\x09\x17\xb6\xda\x97\x87\x8f\x14\xcd\x57\x00\x00\x00\xff\xff\x79\x1f\xa0\x2c\x9e\x01\x00\x00")

func coreV1NodesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1NodesYaml,
		"core/v1/nodes.yaml",
	)
}

func coreV1NodesYaml() (*asset, error) {
	bytes, err := coreV1NodesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/nodes.yaml", size: 414, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1PersistentvolumeclaimsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6a\x2b\x31\x0c\x45\xf7\xf3\x15\x22\xdb\x47\xc6\xcc\x2e\x78\xfb\xba\x2e\xa5\x94\xec\x55\x8d\x98\x98\xd8\x96\xb0\x3c\xa6\xfd\xfb\xe2\x49\x1b\x92\x42\xdb\xad\x38\xd2\x3d\xd7\x46\x0d\x47\x2e\x16\x24\x7b\x48\x5c\x71\x44\x55\x23\x99\x79\x24\x49\xae\x4d\x18\xf5\x84\xd3\x70\x0e\x79\xf6\xf0\xcc\x26\x6b\x21\x7e\x60\xa3\x12\xb4\x4a\x19\xfa\xce\x8c\x15\xfd\x00\x40\x85\xb1\x06\xc9\x2f\x21\xb1\x55\x4c\xea\x21\xaf\x31\x0e\x00\x11\x5f\x39\x5a\x67\x00\xce\x07\x1b\x83\xb8\xa5\xc8\xaa\x1e\x76\xbb\xdb\xe1\x25\xe6\xa9\x0b\x59\xe5\x5c\x8f\x12\xd7\xc4\xff\x23\x86\x74\x8b\x95\x4f\x0f\x0f\x7a\x45\xdb\x86\x52\x47\xed\x96\x6d\x5f\xed\xda\x34\x00\x64\x4c\xec\x81\xa4\xf0\xbe\x4d\xfb\x1f\xb6\x4d\x99\xba\xeb\x35\x66\xbb\xf7\x4d\xf8\x0f\xd3\x4b\xd0\x2f\x7a\x46\xa2\xec\xe1\x11\x13\x9b\x22\xf1\xbc\x4d\xef\x6d\x03\x49\xde\x5e\x6d\x0f\x56\xc8\xc3\xa9\x56\x35\xef\x1c\xcd\xf9\xfe\x9f\xce\x07\x73\x1b\xec\x7a\x35\xa7\x8d\x46\x6b\xcb\x76\xb1\xbe\xf7\x98\x90\x70\x61\x67\x6d\xf9\xf7\x96\xe2\xf0\x11\x00\x00\xff\xff\x9d\x02\x25\xbd\xf5\x01\x00\x00")

func coreV1PersistentvolumeclaimsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1PersistentvolumeclaimsYaml,
		"core/v1/persistentvolumeclaims.yaml",
	)
}

func coreV1PersistentvolumeclaimsYaml() (*asset, error) {
	bytes, err := coreV1PersistentvolumeclaimsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/persistentvolumeclaims.yaml", size: 501, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1PersistentvolumesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4d\x6e\x03\x21\x0c\x85\xf7\x9c\xc2\xca\xb6\xca\xa0\xd9\x45\x6c\xdb\x03\x54\x55\x95\xbd\xcb\x58\x13\x14\xc0\x16\x66\x50\x7b\xfb\x0a\xd2\x46\x49\x7f\xb6\xd6\xe7\xe7\xef\x01\x4a\x38\x52\xd1\xc0\xd9\x41\xa2\x8a\x13\x8a\xa8\xe7\x85\x26\xcf\xc9\xb6\x19\xa3\x9c\x70\x36\xe7\x90\x17\x07\x2f\xa4\xbc\x15\x4f\x4f\xa4\xbe\x04\xa9\x5c\x4c\xdf\x59\xb0\xa2\x33\x00\xbe\x10\xd6\xc0\xf9\x35\x24\xd2\x8a\x49\x1c\xe4\x2d\x46\x03\x10\xf1\x8d\xa2\x76\x06\xe0\x7c\xd0\x29\xb0\x5d\x0b\x6f\xe2\x60\xb7\xbb\x1d\x5e\xce\x3c\x77\x21\xad\x94\xeb\x91\xe3\x96\xe8\x96\x28\x5f\x0a\x0e\xe4\x4a\xb5\x41\xe9\x2d\xd6\xbe\x3b\xb5\xd9\x00\x64\x4c\xe4\xc0\x73\xa1\x7d\x9b\xf7\xbf\x17\x55\xc8\x77\xb9\x6b\xf8\x88\xfa\x61\xf8\xbf\xda\x25\xfe\x6f\x1f\xf5\x2c\xe4\xe0\x31\x6e\x5a\xa9\x8c\xd1\xbd\x5b\xf0\x9c\xc7\xcb\xec\x41\x8b\x77\x70\xaa\x55\xd4\x59\xeb\x97\x7c\xff\x17\xe7\x83\xda\x01\xdb\x5e\xc4\x4a\x9b\xb4\xad\x23\xb0\x7e\xf4\x13\x21\xe1\x4a\x56\xdb\xfa\xf0\x9e\xa2\xf9\x0c\x00\x00\xff\xff\x3f\x09\xc5\x62\xd8\x01\x00\x00")

func coreV1PersistentvolumesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1PersistentvolumesYaml,
		"core/v1/persistentvolumes.yaml",
	)
}

func coreV1PersistentvolumesYaml() (*asset, error) {
	bytes, err := coreV1PersistentvolumesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/persistentvolumes.yaml", size: 472, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1PodsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\xcb\x6e\xdb\x3a\x10\x86\xf7\x7e\x0a\xc2\x67\x11\xe0\x14\x96\xe0\x5d\xa0\x5d\x9b\xa2\x45\xd1\xc6\x35\xec\x20\x9b\xb6\x8b\x09\x39\x96\x19\x4b\x24\xc1\x19\xa9\x35\x8c\xbc\x7b\x21\xea\x62\xcb\xca\xc5\x49\x83\x76\x63\x43\x43\xf2\xfb\xe7\xf2\x93\xe0\xf4\x35\x7a\xd2\xd6\x24\x22\x47\x86\x08\x9c\x23\x69\x15\x46\xd2\xe6\x71\x39\x85\xcc\xad\x61\x3a\xda\x68\xa3\x12\xb1\x40\xb2\x85\x97\xf8\x1e\x49\x7a\xed\xd8\xfa\x51\x75\x46\x01\x43\x32\x12\x42\x7a\x04\xd6\xd6\x5c\xe9\x1c\x89\x21\x77\x89\x30\x45\x96\x8d\x84\xc8\xe0\x06\x33\xaa\xf6\x08\xb1\x39\xa7\x48\xdb\x38\xf5\xb6\x70\x89\x18\x8f\x0f\x83\xb5\xcc\xdc\xaa\xc3\xa0\x6f\x54\x13\xe1\xac\xa2\xc3\x95\xb2\xcd\xbc\x9c\x8e\x84\x30\x90\x63\x22\xa4\xf5\x38\x29\xa7\x93\xb0\x97\x1c\xca\x4a\xb5\x43\x84\xd3\x47\xd2\x3d\xcd\x1a\xd2\x09\x91\xb4\x0e\x13\x31\x83\x1c\xc9\x81\xc4\x7a\x53\x5f\x57\x4b\x6b\x42\x6d\x13\x41\x5e\x26\x62\xcd\xec\x28\x89\x63\xa9\x4c\xbf\x9b\x9b\x73\x8a\xc3\xe6\xb8\x4a\x32\x76\x56\x45\x54\xa6\x81\xc8\xdb\x4a\x46\xe7\x90\x62\x4c\x65\xfa\xe6\x57\x5e\xb5\x4d\xda\xac\xc8\x4d\xd3\xb7\x89\xb8\x25\x6b\xe6\xc0\xeb\x44\x44\x6d\xdb\xa3\x2a\xdf\xb0\xdc\xa6\x3e\xdb\x07\x6a\x28\xb1\xd7\x26\x7d\x02\x11\x8a\x1b\x70\x0e\xa3\x27\xc2\xea\x49\xf7\x48\x5f\x0e\x43\x35\xc6\xde\xdc\xa2\xe4\x47\x30\x60\x8c\xe5\x60\xa6\x3e\xeb\xed\x20\x7e\x22\x70\xe0\xcd\x3e\x36\xed\x97\xa9\x80\xeb\xc0\x7f\x42\x16\xc4\x36\x6f\x47\x71\xac\xd0\xa3\x2c\x10\xd4\xf6\xa4\x76\x11\x03\x17\x14\xb9\x35\x50\xbf\xeb\xcb\xb0\x70\x02\xe3\x48\x98\x18\x3c\x9f\x72\x6e\xaf\x6d\xd5\xa7\x79\x8f\xd2\x7d\x3e\x71\xde\xa1\x8c\x8c\x55\x38\x1b\x58\xcf\xaa\xd3\xdc\xd2\x20\x72\x6d\x80\x51\xcd\xee\x67\x35\xab\xcf\xa4\x7a\x04\xa5\x0d\x12\x7d\x04\x46\x1a\x8c\x27\x2c\x89\xc3\xb5\x23\xff\x6c\x70\x7b\x05\x3e\x45\xee\x6e\xdd\xe1\x0b\x19\xee\xfb\xfe\xd1\x58\xa2\x2f\x75\x73\x43\x1e\xdd\x38\xaf\xe2\xc4\x68\xf8\xba\xf2\x11\x5e\x64\xa0\xf3\x70\xc1\x8d\x41\x19\xec\xdc\xca\x71\x50\x6f\xe7\x2b\x7a\xd4\xea\x35\x89\x3b\x74\x97\x05\x03\xe3\xaa\xc8\x96\xc8\xbd\x9a\xbe\xfe\x34\xa8\xde\xb5\x86\xcc\xb0\xc4\x2c\x11\x17\xd6\xb0\xb7\x59\x86\xfe\xc5\x7a\x0b\x74\x99\x96\xf0\xfa\x72\x03\xa5\xc1\xe8\x2f\x81\xe5\x7a\x81\xab\x26\xe8\x71\x85\x1e\x8d\x44\x6a\x81\x13\x71\xb6\xeb\x3b\xf4\xee\xec\x25\xca\x0f\x0d\xec\xc1\x54\xba\x47\xb4\x36\xe3\x78\xf8\xba\x8e\x1f\x4d\xda\x83\x49\xb1\xf1\x70\x19\x24\xe9\xdb\xff\x3f\xee\x76\x91\xbb\x2f\x93\x48\x56\xbf\xa1\xbc\xdd\xf8\xbb\x19\xdf\xed\xd0\xa8\x97\x55\x7a\x61\xcd\x4a\xa7\x97\xe0\xfe\x56\x75\xd2\x1a\x06\x6d\xd0\x57\x05\x46\x68\xca\x0f\xde\xe6\x75\xad\xb2\xcd\x65\x81\xab\x80\x1e\x56\x77\x02\xaf\x66\x95\x90\x15\x58\xa1\xf7\xd4\xcf\xb8\x7d\x0e\xb8\x37\x86\x0e\xf2\xc0\xf1\x67\x76\x7d\x89\xd2\x1f\xdd\x9f\x7f\xd3\x72\x0a\x89\xbc\x6a\xbf\x6b\xe4\x9f\x34\xbb\x26\x34\x7f\x43\x97\xff\x0e\x00\x00\xff\xff\x22\xd7\x16\xea\xb4\x0a\x00\x00")

func coreV1PodsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1PodsYaml,
		"core/v1/pods.yaml",
	)
}

func coreV1PodsYaml() (*asset, error) {
	bytes, err := coreV1PodsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/pods.yaml", size: 2740, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ReplicationcontrollersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xb1\x6e\xdb\x30\x10\xdd\xf5\x15\x07\x75\x08\x50\x20\x32\x9c\xa9\xe0\x16\xb4\x43\x0b\xb4\x81\xd1\x04\x5d\xda\x0e\x17\xea\xaa\x30\xa1\x78\x04\x79\x12\xe0\x0a\xfe\xf7\x42\x94\x64\x4b\x76\x13\x7b\xd4\xd3\xe3\x7b\x8f\xc7\x47\xa2\x37\x3f\x28\x44\xc3\x4e\x41\x4d\x82\x05\x7a\x1f\x35\x97\x54\x68\xae\x57\xed\x1a\xad\x7f\xc2\x75\xf6\x62\x5c\xa9\xe0\x3b\x45\x6e\x82\xa6\x4f\x14\x75\x30\x5e\x38\x64\xfd\x9a\x12\x05\x55\x06\xa0\x03\xa1\x18\x76\x0f\xa6\xa6\x28\x58\x7b\x05\xae\xb1\x36\x03\xb0\xf8\x48\x36\xf6\x1c\x80\x97\x0f\xb1\x30\xbc\xaa\x02\x37\x5e\x41\x9e\xcf\xc1\xc9\xc6\x5b\xa3\x93\xd4\x47\x76\x12\xd8\x5a\x0a\x73\x5a\x18\x73\x28\x08\x07\xaa\xde\x53\xe3\x9c\xdb\x4e\xbb\x6b\xd7\x19\x80\xc3\x9a\x14\x68\x0e\x74\xdd\xae\xaf\x5f\x59\x1d\x3d\xe9\x3e\xeb\xde\x26\xe9\x1d\x05\x3e\x93\x74\x30\x7a\x23\x5e\xd4\xec\x49\xc1\x1d\xd6\x14\x3d\x6a\x2a\x13\xba\x4c\xab\xd9\x36\xb5\x1b\xe7\x76\x0d\xcf\x91\xdd\x06\xe5\x49\x41\x31\x8d\xbd\xe8\x7d\xd2\xef\xc9\xf2\xee\x00\xc8\xb6\x77\x88\x12\x8c\xab\xce\x48\xa4\x08\x27\x3a\x73\xf4\x42\xb1\xe1\xa4\x17\x4a\x5f\xe7\xd0\x20\xc3\x8f\xcf\xa4\xe5\x0d\x19\x74\x8e\x25\xcd\x6d\xa9\x75\x7b\x82\x5f\x28\x78\xd2\xcd\xa5\x6c\xb5\xdc\x66\x89\x32\x00\xef\x40\x37\x51\xb8\x9e\x8e\xe2\xc4\xe1\xaa\x2b\xa2\xa0\x34\xb1\x08\x84\xe5\x76\x2c\x44\xdc\xad\xba\xa2\xaf\x51\x11\x26\xe0\x6a\x61\xb8\xe1\x32\x5e\x32\xd8\xab\x2e\xa0\xab\x08\x06\x31\xa1\xda\x5b\x14\x1a\xbe\xfa\x46\xa1\x71\x14\xe2\xcf\xf7\xbf\x77\x5d\x61\x6a\xac\x68\xd7\xe5\xbf\x5c\xbe\xeb\xc8\x95\x47\x96\x5f\xfa\xdf\xaf\x9a\x02\xfc\xe1\x50\xa3\x28\xd0\xb1\xcd\x00\x5e\x68\xfb\x80\xa1\x22\xd9\xb7\x6f\xfe\x52\xa4\x76\x1e\xae\xc1\x86\xcb\xf3\xa4\x7b\x0a\xad\x19\xeb\xb4\x24\x62\x23\x1c\x35\x5a\xe3\xaa\x55\x7b\xf3\x48\x82\x37\x8b\x95\x9f\x39\x98\xbf\xfd\x66\xed\x86\xcb\xdb\x91\x9c\xee\x99\x66\xe7\x48\xa7\x3a\x4c\x31\x25\xa5\x56\xa3\x00\xfc\x3f\xd1\x71\xf0\x69\x20\xdf\x50\xf4\xd3\x3d\x59\xd2\xfd\xdb\x76\x98\x5e\xba\x08\xc3\x89\xe4\xa7\xf7\x26\x1f\x99\x71\x5c\x38\x12\xd3\x21\x4d\xd8\xc4\xb1\xd4\x92\x55\x30\x7b\x2d\xfe\x05\x00\x00\xff\xff\x6e\x4d\xd3\x18\x82\x05\x00\x00")

func coreV1ReplicationcontrollersYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ReplicationcontrollersYaml,
		"core/v1/replicationcontrollers.yaml",
	)
}

func coreV1ReplicationcontrollersYaml() (*asset, error) {
	bytes, err := coreV1ReplicationcontrollersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/replicationcontrollers.yaml", size: 1410, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ResourcequotasYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x4e\xf4\x30\x0c\x84\xef\x7d\x0a\x6b\xaf\xbf\xb6\x51\x6f\xab\x9c\xff\x33\x12\x08\x71\x37\xae\xd5\x8d\x9a\xc4\x21\x4e\x23\x78\x7b\x94\xc0\xa2\x76\x05\x37\xcb\x1e\xcf\x7c\x36\x26\xf7\xc2\x59\x9d\x44\x0b\x81\x0b\x8e\x98\x92\x92\xcc\x3c\x92\x04\x53\x27\xf4\xe9\x8a\xd3\xb0\xba\x38\x5b\x78\x62\x95\x2d\x13\xff\x67\xa5\xec\x52\x91\x3c\xb4\x9d\x19\x0b\xda\x01\x80\x32\x63\x71\x12\x9f\x5d\x60\x2d\x18\x92\x85\xb8\x79\x3f\x00\x78\x7c\x65\xaf\x4d\x03\xb0\x5e\x74\x74\x62\x96\x2c\x5b\xb2\x70\x3a\xed\x9b\xc7\x98\xc7\x4d\x0a\xee\xc7\xf9\x7b\x60\xe1\x56\xbd\x35\x89\xee\x35\xf5\x76\x4d\x9d\x06\x80\x88\x81\x2d\x90\x64\x3e\xd7\xe9\x7c\xb7\xa5\x89\xa9\x31\xfd\xd8\x76\x9f\x3b\xb0\x3f\x88\xbe\x8c\x7f\xc1\x50\x92\xc4\x16\x1e\x30\xb0\x26\x24\x9e\x7b\xf7\x48\xe5\x48\x62\xff\xc6\x19\x34\x93\x85\x6b\x29\x49\xad\x31\x34\xc7\xe3\xff\xd7\x8b\x9a\x2e\x36\xed\x04\xd3\x63\x46\xad\x4b\xf7\x2c\x1f\x2d\xc8\x05\x5c\xd8\x68\x5d\xfe\xbd\x07\xff\x19\x00\x00\xff\xff\x3c\x30\x61\x66\xce\x01\x00\x00")

func coreV1ResourcequotasYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ResourcequotasYaml,
		"core/v1/resourcequotas.yaml",
	)
}

func coreV1ResourcequotasYaml() (*asset, error) {
	bytes, err := coreV1ResourcequotasYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/resourcequotas.yaml", size: 462, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1SecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x31\x6f\xdc\x30\x0c\x85\x77\xff\x0a\x22\x6b\x71\x16\x0e\x5d\x02\x6d\x05\xba\xb5\x08\x82\x36\xe8\xce\xc8\x84\x4f\xb1\x25\x0a\x22\x6d\xf4\xfe\x7d\x21\xf9\x9c\xb3\x73\x43\x9a\xac\x8f\xf4\xf7\x48\xfa\x09\x93\xff\x43\x59\x3c\x47\x0b\x81\x14\x5b\x4c\x49\x1c\x77\xd4\x3a\x0e\x66\x3e\xe2\x98\x4e\x78\x6c\x06\x1f\x3b\x0b\xbf\x48\x78\xca\x8e\xbe\x93\xb8\xec\x93\x72\x6e\xca\x37\x1d\x2a\xda\x06\xc0\x65\x42\xf5\x1c\x9f\x7c\x20\x51\x0c\xc9\x42\x9c\xc6\xb1\x01\x18\xf1\x99\x46\x29\x3d\x00\xc3\xbd\xb4\x9e\x4d\x9f\x79\x4a\x16\xee\xee\xb6\xe2\x62\xf3\x9b\x5c\x26\xdd\xea\xf9\x62\x6c\x41\x6a\x4d\xb6\xc5\x79\x9d\x7f\x3e\x36\x00\x11\x03\x59\x70\x9c\xe9\x30\x1f\x0f\x6b\xbb\x24\x72\xc5\xfe\x15\x54\x01\x6f\x66\x78\x6b\xbe\xa0\xb6\x8e\xe2\x38\x91\x85\x07\x0c\x24\x09\x1d\x75\x55\xdd\x0f\xe0\x1d\xc7\xba\xea\x01\x24\x3b\x0b\x27\xd5\x24\xd6\x18\xd7\xc5\xfd\x71\x87\x7b\x31\xb5\xd9\x94\x69\xcd\xe2\xd3\xca\xdc\x57\xa8\x9e\x8b\x93\x0f\xd8\x93\x91\xb9\xff\xf2\x37\x94\x43\x3a\x1e\xa7\x10\x2f\x97\x3c\xc0\x8b\x70\x7c\x44\x3d\x59\x68\xd7\x1f\xd1\x96\xa9\x6b\x79\x5d\xe0\xe1\x2a\x2c\x50\xd1\xec\x63\x7f\x91\x52\xf6\x9c\xbd\x9e\x2d\x7c\x7d\x07\x5a\x37\xbe\x21\x6f\xd5\x4f\xe3\x97\x7c\xec\xd8\x3f\xb7\xd2\x02\xe6\xe7\x17\x72\xfa\x21\x30\xc6\xc8\x5a\x43\xb9\xa7\x7f\xbb\xd1\x3f\x6d\x71\x93\xfa\xbd\x51\xbf\x3f\x4e\x87\x4a\xff\x83\x2f\x61\xdc\x81\x7e\x5c\x85\x77\xcf\x3c\xd0\xf9\x09\x73\x4f\xfa\x1a\x94\xed\x33\xaf\x29\xbd\x06\xfe\x91\xbb\xe6\x5f\x00\x00\x00\xff\xff\xac\x04\x68\x29\x06\x04\x00\x00")

func coreV1SecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1SecretsYaml,
		"core/v1/secrets.yaml",
	)
}

func coreV1SecretsYaml() (*asset, error) {
	bytes, err := coreV1SecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/secrets.yaml", size: 1030, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ServiceaccountsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x75\x2b\x6a\xa3\x6e\xa7\x6c\x48\xcc\x0c\x80\xd8\x8d\x6b\xf5\xa2\x26\x71\x14\xa7\x11\xbc\x3d\x6a\x0b\xa8\x77\xe2\x56\xe7\xf3\xef\xcf\x31\x66\xff\xce\x45\xbd\x24\x07\x91\x2b\xf6\x98\xb3\x92\x8c\xdc\x93\x44\xdb\x06\x0c\xf9\x82\x83\x99\x7d\x1a\x1d\xbc\xb0\xca\x52\x88\x9f\x58\xa9\xf8\x5c\xa5\x98\xb5\x67\xc4\x8a\xce\x00\x50\x61\xac\x5e\xd2\x9b\x8f\xac\x15\x63\x76\x90\x96\x10\x0c\x40\xc0\x0f\x0e\xba\x32\x00\xf3\x59\x7b\x2f\x76\x2a\xb2\x64\x07\xa7\xd3\xb1\xb8\x8f\x79\xe5\xd2\x3c\xf1\x23\x91\x2c\xa9\x1e\xdf\xcb\x8f\x80\x03\xdd\x19\xdc\x19\x3d\x42\xed\x77\x9f\x36\x18\x80\x84\x91\x1d\x90\x14\xee\xda\xd0\xdd\xb6\x69\x66\x5a\xb5\xfe\x82\xb7\xa0\x1b\xb7\x7b\x52\x7b\xf4\x7f\x26\x4a\x92\xd9\xc1\x33\x46\xd6\x8c\xc4\xe3\x56\xbd\x16\xf3\x24\x69\xfb\x92\x0e\xb4\x90\x83\x4b\xad\x59\x9d\xb5\x34\xa6\xeb\x23\xcc\x67\xb5\x1b\x6c\xd7\x2d\xac\x62\xaf\x6d\xda\x02\xeb\xd7\x3a\xc5\x47\x9c\xd8\x6a\x9b\x1e\x3e\x63\x30\xdf\x01\x00\x00\xff\xff\x19\x6e\xe5\xc9\xd1\x01\x00\x00")

func coreV1ServiceaccountsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ServiceaccountsYaml,
		"core/v1/serviceaccounts.yaml",
	)
}

func coreV1ServiceaccountsYaml() (*asset, error) {
	bytes, err := coreV1ServiceaccountsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/serviceaccounts.yaml", size: 465, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ServicesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\xbb\x8e\xdc\x30\x0c\xec\xfd\x15\x84\xdb\xc0\x16\xdc\x1d\x54\x5f\x99\x04\x87\xdc\x21\x3d\x43\x13\xb6\x60\xbd\x20\x6a\x8d\xec\xdf\x07\xf2\x6b\xed\x6c\x8a\x54\xd7\x92\xa3\x99\xe1\x90\xc2\x68\x7e\x72\x12\x13\xbc\x06\xc7\x19\x5b\x8c\x51\x28\xf4\xdc\x52\x70\x6a\xee\xd0\xc6\x11\xbb\x6a\x32\xbe\xd7\xf0\x83\x25\xdc\x12\xf1\x2b\x0b\x25\x13\x73\x48\x55\x79\xd3\x63\x46\x5d\x01\x50\x62\xcc\x26\xf8\x0f\xe3\x58\x32\xba\xa8\xc1\xdf\xac\xad\x00\x2c\xfe\x62\x2b\x05\x03\x30\xbd\x48\x6b\x82\x1a\x52\xb8\x45\x0d\x75\x7d\x2e\xae\x32\xef\x9c\x66\x43\x7c\x6e\xa4\x4d\x59\x83\xac\x4d\x39\x77\xe7\x7d\x82\xb9\xab\x00\x3c\x3a\xd6\x40\x21\x71\x33\x77\xcd\x81\x97\xc8\x54\x1c\x1c\x54\x0b\xc3\x5f\x36\x9e\xf4\x57\xb2\x8b\xa8\x50\x88\xac\xe1\x3b\x3a\x96\x88\xc4\xfd\x52\xbd\x7a\x30\x14\xfc\x32\x6f\x03\x92\x48\xc3\x98\x73\x14\xad\x14\xf5\xfe\x9a\xf0\xf4\x22\x6a\x01\xab\x62\x58\xc9\x4c\xad\xcc\xc3\xc2\x98\xef\x45\xc6\x38\x1c\x4a\x7d\xf8\xf2\xdb\x95\x28\x27\xbe\x7f\x60\x1a\x38\x6f\x71\x36\x70\x5e\xe1\x22\xfe\x98\xe4\x2d\x14\x73\x14\xbc\x67\x2a\x9b\x39\xde\xe4\x85\x42\x6f\x60\xf8\x37\xc7\x95\xe5\x61\xe9\x1b\x66\x1a\xdf\xd9\x32\x95\x0b\x58\x3b\x7e\x4f\xe3\x0d\xf3\xa8\xa1\xde\xef\xa2\x3d\x1a\xf5\x86\x94\xed\xe1\x06\x2c\x6b\x69\xf7\x5a\xfd\x1f\xf6\x4a\x7c\xea\xc9\xe3\x2b\x47\x1b\xee\x8e\x7d\xfe\x54\xab\xb0\x59\xfd\x5a\x0e\xfc\x0c\xcb\xec\xa2\xc5\xcc\xed\xc1\xbe\xfe\x81\xba\xfa\x13\x00\x00\xff\xff\x74\x6f\x8c\x55\x72\x03\x00\x00")

func coreV1ServicesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ServicesYaml,
		"core/v1/services.yaml",
	)
}

func coreV1ServicesYaml() (*asset, error) {
	bytes, err := coreV1ServicesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/services.yaml", size: 882, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1AwsaccesskeyrequestsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbd\x4e\xec\x30\x10\x46\xfb\x3c\xc5\xf4\x57\x89\xb5\xdd\xca\xdd\x4a\xb7\x43\xa2\x58\x10\xd4\xb3\x93\x51\xd6\x8a\xff\xf0\xd8\x81\xbc\x3d\x8a\xc3\xae\x82\x14\xa0\x8d\x4e\xfc\x9d\x63\x63\x34\x2f\x9c\xc4\x04\xaf\xc1\x71\xc6\x0e\x63\x14\x0a\x3d\x77\x14\x9c\x9a\x0e\x68\xe3\x15\x0f\xcd\x68\x7c\xaf\xe1\xcc\x12\x4a\x22\xfe\xcf\x42\xc9\xc4\x1c\x52\xb3\xfc\xd3\x63\x46\xdd\x00\x50\x62\xcc\x26\xf8\x67\xe3\x58\x32\xba\xa8\xc1\x17\x6b\x1b\x00\x8b\x17\xb6\xb2\x30\x00\xe3\x51\x3a\x13\xd4\x90\x42\x89\x1a\xd8\x0f\xc6\x73\x37\x96\x0b\x4f\x58\x6c\x5e\x66\xb7\xd8\x3a\x7c\x7a\x7d\x3a\x11\xb1\xc8\x03\xcf\x67\x7e\x2b\x2c\x79\x0b\xa5\x2f\x2f\x0d\xf8\x2e\x58\xc1\x91\xe7\xb4\x82\xb2\x25\xa7\x5b\xeb\xbd\x0c\xc0\xa3\xe3\x7d\x91\xf6\x46\xb5\xbb\xe7\x4a\x64\x5a\x9a\xee\xf3\x75\xe9\xcf\xb0\x5f\x8b\x56\x99\x1f\x33\x84\x42\x64\x0d\x8f\xe8\x58\x22\x12\xf7\xf5\xeb\x5e\x95\xa1\xe0\xeb\x8d\xb7\x20\x89\x34\x5c\x73\x8e\xa2\x95\xa2\xde\x7f\x7f\xe3\xf1\x28\xaa\xc2\x6a\x4f\x59\xed\xa9\x74\x32\x0d\x75\x38\xcf\x8b\x8d\x71\x38\xb0\x92\x69\xf8\xf7\xe1\xec\x67\x00\x00\x00\xff\xff\x33\x08\x51\x2d\x51\x02\x00\x00")

func engineKubevaultComV1alpha1AwsaccesskeyrequestsYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1AwsaccesskeyrequestsYaml,
		"engine.kubevault.com/v1alpha1/awsaccesskeyrequests.yaml",
	)
}

func engineKubevaultComV1alpha1AwsaccesskeyrequestsYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1AwsaccesskeyrequestsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/awsaccesskeyrequests.yaml", size: 593, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1AwsrolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x6e\xeb\x30\x0c\x45\x77\x7f\x05\xf7\x87\x58\xc8\x16\x68\x7b\x40\xe7\x0e\x69\xd1\xce\x0c\x4d\x38\x82\x25\x91\x10\x65\xb7\xfd\xfb\xc2\x4e\x63\x38\xa8\x81\xae\xe2\x15\xcf\xb9\x12\x6a\x78\xe3\x62\x41\xb2\x87\xc4\x15\x5b\x54\x35\x92\x8e\x5b\x92\xe4\xa6\x23\x46\xbd\xe2\xb1\x19\x42\xee\x3c\x9c\xd9\x64\x2c\xc4\x4f\x6c\x54\x82\x56\x29\xcd\x7c\xa7\xc3\x8a\xbe\x01\xa0\xc2\x58\x83\xe4\xd7\x90\xd8\x2a\x26\xf5\x90\xc7\x18\x1b\x80\x88\x17\x8e\x36\x67\x00\x86\x93\xb5\x41\x5c\x5f\x64\x54\x0f\x9c\xfb\x90\xb9\x1d\xc6\x0b\x4f\x38\xc6\x3a\x63\xb7\xb1\x1b\xf8\xff\xfb\xcb\x59\x22\x6f\x07\xe5\xc7\xc5\x03\x7e\x58\x91\xc8\xb6\x9d\x4e\xf7\x4e\x6b\x03\x80\x8c\x89\xf7\x81\x87\x7b\xea\xb0\xee\x32\x65\x9a\x7d\x57\xcc\xb2\xfd\x4f\xe9\x5f\xb6\x37\xe8\x83\xa2\x91\x28\x7b\x78\xc6\xc4\xa6\x48\xdc\x2d\xa7\x7b\xc6\x81\x24\x2f\xaf\x76\x00\x2b\xe4\xe1\x5a\xab\x9a\x77\x8e\xba\xfc\xf8\x4f\xc3\xc9\xdc\x12\x76\x7b\x6a\xee\x8e\x6f\x6d\xea\x17\x58\xfd\x9a\x0d\x42\xc2\x9e\x9d\x4d\xfd\xbf\xcf\x14\xbf\x03\x00\x00\xff\xff\xee\x88\x51\xb8\x09\x02\x00\x00")

func engineKubevaultComV1alpha1AwsrolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1AwsrolesYaml,
		"engine.kubevault.com/v1alpha1/awsroles.yaml",
	)
}

func engineKubevaultComV1alpha1AwsrolesYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1AwsrolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/awsroles.yaml", size: 521, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1AzureaccesskeyrequestsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3f\x6b\xc3\x30\x10\x47\x77\x7f\x8a\xdb\x4b\x2c\xb2\x05\x6d\x81\x6e\x85\x0e\xa1\x74\xbf\x9c\x0f\x47\x58\xff\xaa\x93\x4c\xd3\x4f\x5f\x24\x37\xc1\x05\xb7\x59\xcd\xb3\x7e\xef\x49\x18\xcd\x3b\x27\x31\xc1\x6b\x70\x9c\xb1\xc7\x18\x85\xc2\xc0\x3d\x05\xa7\xe6\x3d\xda\x78\xc1\x7d\x37\x19\x3f\x68\x38\xb1\x84\x92\x88\x9f\x59\x28\x99\x98\x43\xea\xea\x3f\x03\x66\xd4\x1d\x00\x25\xc6\x6c\x82\x7f\x33\x8e\x25\xa3\x8b\x1a\x7c\xb1\xb6\x03\xb0\x78\x66\x2b\x95\x01\x98\x0e\xd2\x9b\xa0\xc6\x14\x4a\xd4\xc0\x7e\x34\x9e\xfb\xa9\x9c\x79\xc6\x62\x73\x9d\x5d\x63\xcb\xf0\xf1\xab\x24\x3e\x12\xb1\xc8\x0b\x5f\x4f\xfc\x51\x58\xf2\x1a\x4b\x3f\x66\x1a\xb0\xa2\xd8\xd0\x89\xaf\x69\x41\x65\xcd\xce\xb7\xde\x7b\x1d\x80\x47\xc7\xdb\x32\xbb\x1b\xb5\xfb\xe3\x64\x89\x4c\xb5\xec\xae\xd0\xb6\x1e\xe6\x3d\xe8\x5a\x84\xfe\x89\x11\x0a\x91\x35\xbc\xa2\x63\x89\x48\x3c\xb4\xaf\x5b\x6d\x86\x82\x6f\x77\xbf\x03\x49\xa4\xe1\x92\x73\x14\xad\x14\x0d\xfe\xf7\x6b\x4f\x07\x51\x0d\x56\x5b\xda\x6a\x5b\xa6\x97\x79\x6c\xd3\xf9\x5a\x7d\x8c\xc3\x91\x95\xcc\xe3\xd3\xa7\xb3\xdf\x01\x00\x00\xff\xff\x33\x73\x5b\x84\x5d\x02\x00\x00")

func engineKubevaultComV1alpha1AzureaccesskeyrequestsYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1AzureaccesskeyrequestsYaml,
		"engine.kubevault.com/v1alpha1/azureaccesskeyrequests.yaml",
	)
}

func engineKubevaultComV1alpha1AzureaccesskeyrequestsYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1AzureaccesskeyrequestsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/azureaccesskeyrequests.yaml", size: 605, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1AzurerolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x6e\xc3\x20\x10\x86\x77\x3f\xc5\xed\x95\x8d\xb2\x45\x6c\x95\x3a\x77\x88\xaa\xee\x17\x7c\x72\x90\x81\x3b\x71\x60\xb5\x7d\xfa\x0a\xa7\x49\xdd\xca\x52\x56\xfe\x9f\xfb\xbe\x03\x14\xff\x4e\x59\x3d\x27\x0b\x91\x0a\x0e\x28\xa2\x8e\x47\x1a\x1c\x47\xb3\x1c\x30\xc8\x05\x0f\xdd\xec\xd3\x68\xe1\x44\xca\x35\x3b\x7a\x21\x75\xd9\x4b\xe1\xdc\xb5\x3b\x23\x16\xb4\x1d\x80\xcb\x84\xc5\x73\x7a\xf3\x91\xb4\x60\x14\x0b\xa9\x86\xd0\x01\x04\x3c\x53\xd0\xd6\x01\x98\x8f\x3a\x78\x36\x53\xe6\x2a\x16\x28\x4d\x3e\xd1\x30\xd7\x33\x2d\x58\x43\x69\xd8\x6d\xed\x0a\x7e\xfe\xaa\x99\x4e\x1c\x68\x1b\xe5\x1f\x1b\x0b\xd8\xe2\xcc\x81\x74\x9b\x2f\xb7\xbd\xee\x5b\x00\x24\x8c\xb4\x0f\xed\x6f\xad\x7e\x33\x4d\x85\x5c\xb3\xbe\xa3\xd6\xf9\x0f\xd5\x77\x9c\xaf\xe0\x7f\xa2\xea\x58\xc8\xc2\x2b\x46\x52\x41\x47\xe3\x7a\xba\xe7\xed\x1d\xa7\xf5\xfd\x7a\xd0\xec\x2c\x5c\x4a\x11\xb5\xc6\xb8\x31\xfd\xfd\xb1\xf9\xa8\x66\x2d\x9b\x3d\x3d\xf3\x2b\x30\xe8\x32\xad\xb8\xf2\xd9\x1c\x7c\xc4\x89\x8c\x2e\xd3\xd3\x47\x0c\xdf\x01\x00\x00\xff\xff\xc9\xc1\x0c\xdd\x15\x02\x00\x00")

func engineKubevaultComV1alpha1AzurerolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1AzurerolesYaml,
		"engine.kubevault.com/v1alpha1/azureroles.yaml",
	)
}

func engineKubevaultComV1alpha1AzurerolesYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1AzurerolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/azureroles.yaml", size: 533, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1DatabaseaccessrequestsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3f\x6b\xc3\x30\x10\x47\x77\x7f\x8a\xdb\x4b\x2c\xb2\x05\x6d\x85\xcc\x1d\x42\xe9\x7e\x3e\x1d\x8e\xb0\xfe\x55\x27\x99\xf6\xdb\x17\xcb\x49\x70\xc1\x6d\x56\xf3\xac\xdf\x7b\x12\x26\xfb\xc1\x59\x6c\x0c\x1a\x3c\x17\xec\x31\x25\xa1\x68\xb8\xa7\xe8\xd5\x7c\x44\x97\xae\x78\xec\x26\x1b\x8c\x86\x0b\x4b\xac\x99\xf8\xcc\x42\xd9\xa6\x12\x73\xb7\xfc\x63\xb0\xa0\xee\x00\x28\x33\x16\x1b\xc3\xbb\xf5\x2c\x05\x7d\xd2\x10\xaa\x73\x1d\x80\xc3\x81\x9d\x2c\x0c\xc0\x74\x92\xde\x46\x35\xe6\x58\x93\x06\x0e\xa3\x0d\xdc\x4f\x75\xe0\x19\xab\x2b\xcb\xec\x16\x5b\x87\xcf\x58\x70\x40\xe1\x57\x22\x16\xb9\xf0\x67\x65\x29\x5b\x2c\xdf\xcc\x34\x98\x1b\x8a\x0d\xcd\x2b\x2a\x5b\x76\xbe\xf7\x3e\xea\x00\x02\x7a\xde\x97\x39\xdc\xa9\xc3\x1f\x27\x4b\x62\x5a\xca\x1e\x0a\x6d\xeb\x69\xde\x93\xae\x55\xe8\x9f\x18\xa1\x98\x58\xc3\x1b\x7a\x96\x84\xc4\xa6\x7d\xdd\x6b\xb3\x14\x43\xbb\xfb\x03\x48\x26\x0d\xd7\x52\x92\x68\xa5\xc8\x84\xdf\xaf\x3d\x9d\x44\x35\x58\xed\x69\xab\x7d\x99\x5e\xe6\xb1\x4d\x97\xef\xc5\xc7\x7a\x1c\x59\xc9\x3c\xbe\x7c\x79\xf7\x13\x00\x00\xff\xff\xd1\xc3\xbc\x21\x5d\x02\x00\x00")

func engineKubevaultComV1alpha1DatabaseaccessrequestsYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1DatabaseaccessrequestsYaml,
		"engine.kubevault.com/v1alpha1/databaseaccessrequests.yaml",
	)
}

func engineKubevaultComV1alpha1DatabaseaccessrequestsYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1DatabaseaccessrequestsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/databaseaccessrequests.yaml", size: 605, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1GcpaccesskeyrequestsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4f\x4b\x03\x31\x10\x47\xef\xfb\x29\xe6\x2e\xdd\xd0\x5b\xc9\x4d\x14\x3c\x08\x22\x45\xbc\x4f\x67\x87\x6d\xd8\xfc\x19\x33\xc9\x62\xbf\xbd\x6c\x6a\x4b\x85\x55\xaf\xcb\xdb\xfc\xde\x4b\x50\xdc\x3b\x67\x75\x29\x5a\x08\x5c\xb0\x47\x11\xa5\x34\x70\x4f\x29\x98\x79\x8b\x5e\x8e\xb8\xed\x26\x17\x07\x0b\x7b\xd6\x54\x33\xf1\x23\x2b\x65\x27\x25\xe5\x6e\xf9\x67\xc0\x82\xb6\x03\xa0\xcc\x58\x5c\x8a\x6f\x2e\xb0\x16\x0c\x62\x21\x56\xef\x3b\x00\x8f\x07\xf6\xba\x30\x00\xd3\x4e\x7b\x97\xcc\x98\x53\x15\x0b\x1c\x47\x17\xb9\x9f\xea\x81\x67\xac\xbe\x2c\xb3\xb7\xd8\x79\xf8\xe9\xe1\xf5\x9e\x88\x55\x9f\xf9\xb4\xe7\x8f\xca\x5a\x6e\xa1\xfc\xed\x65\x61\x24\xc1\x06\x4e\x7c\xca\x67\x50\x6f\xc9\xf9\xd2\x7a\x2d\x03\x88\x18\x78\x5d\x64\x73\xa1\x36\xab\xe7\xaa\x30\x2d\x4d\xd7\xf9\xb6\xf4\x6f\xd8\x9f\x45\x67\x99\x5f\x33\x94\x92\xb0\x85\x17\x0c\xac\x82\xc4\x43\xfb\xba\x56\xe5\x28\xc5\x76\xe3\x1b\xd0\x4c\x16\x8e\xa5\x88\x5a\x63\x68\x88\x3f\xdf\x78\xda\xa9\x69\xb0\x59\x53\x36\x6b\x2a\xbd\xce\x63\x1b\x2e\xa7\xc5\xc6\x05\x1c\xd9\xe8\x3c\xde\x7d\x06\xff\x15\x00\x00\xff\xff\xb4\x9f\x54\x4c\x51\x02\x00\x00")

func engineKubevaultComV1alpha1GcpaccesskeyrequestsYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1GcpaccesskeyrequestsYaml,
		"engine.kubevault.com/v1alpha1/gcpaccesskeyrequests.yaml",
	)
}

func engineKubevaultComV1alpha1GcpaccesskeyrequestsYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1GcpaccesskeyrequestsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/gcpaccesskeyrequests.yaml", size: 593, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1GcprolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6a\xc3\x30\x0c\x86\xef\x79\x0a\xdd\x47\x63\x7a\x2b\xbe\x6e\xb0\xdb\x18\x65\xec\xae\x2a\xc2\x35\xb1\x2d\x61\x39\x61\x7b\xfb\x91\x74\x2d\x2d\x0b\xec\x6a\xfd\xd6\xf7\xfd\x36\x6a\xfc\xe4\x6a\x51\x8a\x87\xcc\x0d\x7b\x54\x35\x92\x81\x7b\x92\xec\xe6\x3d\x26\x3d\xe3\xbe\x1b\x63\x19\x3c\x1c\xd9\x64\xaa\xc4\x2f\x6c\x54\xa3\x36\xa9\xdd\x72\x67\xc0\x86\xbe\x03\xa0\xca\xd8\xa2\x94\x8f\x98\xd9\x1a\x66\xf5\x50\xa6\x94\x3a\x80\x84\x27\x4e\xb6\x64\x00\xc6\x83\xf5\x51\x5c\xa8\x32\xa9\x07\x2e\x21\x16\xee\xc7\xe9\xc4\x33\x4e\xa9\x2d\xd8\xfb\xd8\x05\xfc\xfa\xfc\x7e\x94\xc4\xf7\x83\xfa\xeb\xe2\x21\x90\x56\x49\x6c\xf7\xd3\xf9\xda\xe9\xd6\x00\xa0\x60\xe6\x6d\xe0\xee\x9a\xda\xdd\x76\x99\x32\x2d\xbe\x37\xcc\xba\xfd\x5f\xe9\x3f\xb6\x17\xe8\x83\xa2\x91\x28\x7b\x78\xc3\xcc\xa6\x48\x3c\xac\xa7\x5b\xc6\x91\xa4\xac\xaf\xb6\x03\xab\xe4\xe1\xdc\x9a\x9a\x77\x8e\x86\xf2\xf8\x4f\xe3\xc1\xdc\x1a\x76\x5b\x6a\xee\x8a\xef\x6d\x0e\x2b\xac\x7d\x2f\x06\x31\x63\x60\x67\x73\x78\xfa\xca\xe9\x27\x00\x00\xff\xff\xf3\x17\xc7\x64\x09\x02\x00\x00")

func engineKubevaultComV1alpha1GcprolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1GcprolesYaml,
		"engine.kubevault.com/v1alpha1/gcproles.yaml",
	)
}

func engineKubevaultComV1alpha1GcprolesYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1GcprolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/gcproles.yaml", size: 521, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1MongodbrolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x6e\xc3\x20\x10\x40\x77\x7f\xc5\xed\x55\x8c\xb2\x45\x8c\x55\xd6\x76\x88\xaa\xee\x67\x7c\x22\xc8\xc0\x9d\x38\x6c\xb5\x7f\x5f\xe1\x34\x91\xa3\x5a\xea\x0a\x0f\xde\x3b\x40\x09\x9f\x54\x34\x70\xb6\x90\xa8\x62\x8f\x22\xea\x78\xa4\xde\x71\x32\xcb\x11\xa3\x5c\xf1\xd8\x4d\x21\x8f\x16\x2e\xa4\x3c\x17\x47\x67\x52\x57\x82\x54\x2e\x5d\x3b\x33\x62\x45\xdb\x01\xb8\x42\x58\x03\xe7\x8f\x90\x48\x2b\x26\xb1\x90\xe7\x18\x3b\x80\x88\x03\x45\x6d\x0c\xc0\x74\xd2\x3e\xb0\xf1\x85\x67\xb1\x40\xd9\x87\x4c\xfd\x34\x0f\xb4\xe0\x1c\x6b\xd3\x6e\xb1\x9b\xf8\x8d\xb3\xe7\xf3\xeb\x85\x23\x6d\x37\xcb\x6f\x8f\x85\xd4\x80\x71\x28\x1c\x49\xb7\xc4\x72\x9f\xed\x31\x09\x40\xc6\x44\xfb\xe2\xc3\x9d\x3a\x3c\xdd\xa7\x42\xae\xb5\x3f\x74\xab\xe1\xdf\x01\x76\xcb\x6f\xf2\x3f\xb9\xea\x58\xc8\xc2\x3b\x26\x52\x41\x47\xe3\xba\xba\x57\x1f\x1c\xe7\xf5\x25\x0f\xa0\xc5\x59\xb8\xd6\x2a\x6a\x8d\x71\x63\x7e\xfe\xbb\xe9\xa4\x66\x85\xcd\x5e\xa2\xd9\x26\xf4\xba\xf8\x55\x58\xbf\x5b\x45\x48\xe8\xc9\xe8\xe2\x5f\xbe\x52\xfc\x09\x00\x00\xff\xff\x16\xa8\x87\x9b\x21\x02\x00\x00")

func engineKubevaultComV1alpha1MongodbrolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1MongodbrolesYaml,
		"engine.kubevault.com/v1alpha1/mongodbroles.yaml",
	)
}

func engineKubevaultComV1alpha1MongodbrolesYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1MongodbrolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/mongodbroles.yaml", size: 545, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1MysqlrolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x4f\xf3\x30\x0c\x86\xef\xfd\x15\xbe\x7f\x5a\xa3\xdd\xa6\x9c\xbf\x23\x20\x31\x10\x77\xcf\xb5\xba\xa8\x49\x6c\xe2\xb4\x62\xff\x1e\xb5\x63\xa3\xa0\x4a\x5c\xe3\x37\x7e\x9e\x37\x41\x0d\x6f\x5c\x2c\x48\xf6\x90\xb8\x62\x8b\xaa\x46\xd2\x71\x4b\x92\xdc\xb4\xc7\xa8\x67\xdc\x37\x43\xc8\x9d\x87\x23\x9b\x8c\x85\xf8\x3f\x1b\x95\xa0\x55\x4a\x33\xdf\xe9\xb0\xa2\x6f\x00\xa8\x30\xd6\x20\xf9\x35\x24\xb6\x8a\x49\x3d\xe4\x31\xc6\x06\x20\xe2\x89\xa3\xcd\x19\x80\xe1\x60\x6d\x10\xd7\x17\x19\xd5\x03\xe7\x3e\x64\x6e\x87\xf1\xc4\x13\x8e\xb1\xce\xd8\x75\xec\x0a\x7e\xbc\xbc\x3c\x3f\x1c\x25\xf2\x7a\x54\xbe\x6c\x3c\xa4\x8b\xbd\xc7\x22\x91\x6d\x3d\x9f\x6e\xbd\xee\x2d\x00\x32\x26\xde\x86\xee\x6e\xa9\xdd\x6a\x9b\x29\xd3\x6c\x7d\x47\x2d\xfb\xff\x54\xdf\x70\xbe\x82\x7f\x89\x1a\x89\xb2\x87\x27\x4c\x6c\x8a\xc4\xdd\x72\xba\xe5\x1d\x48\xf2\xf2\x7e\x3b\xb0\x42\x1e\xce\xb5\xaa\x79\xe7\xa8\xcb\x3f\x7f\x6c\x38\x98\x5b\xc2\x6e\x4b\xcf\x7d\x0b\xb4\x36\xf5\x0b\xae\x5e\x66\x87\x90\xb0\x67\x67\x53\xff\xef\x23\xc5\xcf\x00\x00\x00\xff\xff\xd9\x61\xf2\xcf\x15\x02\x00\x00")

func engineKubevaultComV1alpha1MysqlrolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1MysqlrolesYaml,
		"engine.kubevault.com/v1alpha1/mysqlroles.yaml",
	)
}

func engineKubevaultComV1alpha1MysqlrolesYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1MysqlrolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/mysqlroles.yaml", size: 533, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1PostgresrolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcd\x6a\xeb\x30\x10\x46\xf7\x7e\x8a\xd9\x5f\x62\x91\x5d\xd0\xfa\xae\x4b\x09\xa5\xfb\xc9\x78\x50\x84\x25\xcd\xa0\x91\x4d\xfb\xf6\xc5\xce\x0f\x31\x35\x74\x6b\x1f\xfb\x9c\x4f\x42\x8d\x9f\x5c\x2d\x4a\xf1\x90\xb9\x61\x8f\xaa\x46\x32\x70\x4f\x92\xdd\x7c\xc4\xa4\x57\x3c\x76\x63\x2c\x83\x87\x33\x9b\x4c\x95\xf8\x3f\x1b\xd5\xa8\x4d\x6a\xb7\x7c\x33\x60\x43\xdf\x01\x50\x65\x6c\x51\xca\x47\xcc\x6c\x0d\xb3\x7a\x28\x53\x4a\x1d\x40\xc2\x0b\x27\x5b\x18\x80\xf1\x64\x7d\x14\x17\xaa\x4c\xea\x81\x4b\x88\x85\xfb\x71\xba\xf0\x8c\x53\x6a\x8b\xf6\x15\xbb\x89\xdf\xc5\x5a\xa8\x6c\x67\x49\xfc\xfa\xb6\xde\x83\x3c\xe8\x9d\xa8\x92\xd8\x5e\x91\xf9\xb1\xee\xb9\x05\xa0\x60\xe6\x7d\xf5\xe1\x41\x1d\xb6\x3f\x34\x65\x5a\xf2\x9f\xc2\x55\xf1\xe7\x86\xfd\xf8\x9b\xfe\x77\xb1\x91\x28\x7b\x78\xc3\xcc\xa6\x48\x3c\xac\x4f\xf7\x06\x44\x92\xb2\x1e\xe7\x01\xac\x92\x87\x6b\x6b\x6a\xde\x39\x1a\xca\xf6\x02\xc7\x93\xb9\x15\x76\x7b\x91\x6e\xd3\xd0\xdb\x1c\x56\x63\xfb\x5e\x32\x62\xc6\xc0\xce\xe6\xf0\xef\x2b\xa7\x9f\x00\x00\x00\xff\xff\x6c\x18\xf8\x7b\x27\x02\x00\x00")

func engineKubevaultComV1alpha1PostgresrolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1PostgresrolesYaml,
		"engine.kubevault.com/v1alpha1/postgresroles.yaml",
	)
}

func engineKubevaultComV1alpha1PostgresrolesYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1PostgresrolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/postgresroles.yaml", size: 551, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _engineKubevaultComV1alpha1SecretenginesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3f\x6f\x83\x30\x10\x47\x77\x3e\xc5\xed\x55\xb0\xb2\x45\x9e\xdb\xb5\x43\x5b\x75\xbf\x1c\x27\x62\xe1\x3f\x27\x9f\x41\xed\xb7\xaf\x6c\x9a\x08\x54\xa4\xae\xf0\xf0\x7b\x3f\x8c\xe2\x3e\x39\xab\x4b\xd1\x42\xe0\x82\x3d\x8a\x28\xa5\x81\x7b\x4a\xc1\x2c\x67\xf4\x72\xc3\x73\x37\xb9\x38\x58\x78\x63\x4d\x73\x26\x7e\x66\xa5\xec\xa4\xa4\xdc\xd5\x6f\x06\x2c\x68\x3b\x00\xca\x8c\xc5\xa5\xf8\xe1\x02\x6b\xc1\x20\x16\xe2\xec\x7d\x07\xe0\xf1\xca\x5e\x2b\x03\x30\x5d\xb4\x77\xc9\x8c\x39\xcd\x62\x81\xe3\xe8\x22\xf7\xd3\x7c\xe5\x05\x67\x5f\xaa\x76\x8b\xad\xe2\x77\xa6\xcc\xe5\xa5\xb1\xdb\xb7\xf9\x37\xc8\x82\x36\x62\x3d\x4d\xb7\xc8\x72\x5f\xf7\xd8\x02\x10\x31\xf0\xb1\xfa\x74\xa7\x4e\xfb\x03\x55\x98\x6a\xfe\x43\xd8\x14\xff\x6e\x38\x8e\x5f\xf5\x7f\x8b\x95\x92\xb0\x85\x57\x0c\xac\x82\xc4\x43\x7b\x7a\x34\xc0\x51\x8a\xed\x77\x9e\x40\x33\x59\xb8\x95\x22\x6a\x8d\xa1\x21\xee\x2f\x70\xba\xa8\x69\xb0\x39\x8a\x34\xbb\x86\x5e\x97\xb1\x19\xcb\x77\xcd\x70\x01\x47\x36\xba\x8c\x4f\x5f\xc1\xff\x04\x00\x00\xff\xff\x2e\xed\xfe\x19\x27\x02\x00\x00")

func engineKubevaultComV1alpha1SecretenginesYamlBytes() ([]byte, error) {
	return bindataRead(
		_engineKubevaultComV1alpha1SecretenginesYaml,
		"engine.kubevault.com/v1alpha1/secretengines.yaml",
	)
}

func engineKubevaultComV1alpha1SecretenginesYaml() (*asset, error) {
	bytes, err := engineKubevaultComV1alpha1SecretenginesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "engine.kubevault.com/v1alpha1/secretengines.yaml", size: 551, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _eventsK8sIoV1beta1EventsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x7f\x20\x0e\xbc\x15\x9a\xdb\xb5\x43\x51\x74\x67\xe8\x43\x2b\x44\x12\x09\x51\xf6\xf7\x17\x76\x9c\xc2\x48\x91\xf5\x9e\x78\xf7\xc4\x96\xbe\xd0\x3c\x69\x8d\x54\xd0\x79\x60\x33\x17\x9d\x30\x88\x96\xf3\x32\x72\xb6\x1f\x1e\xc3\x35\xd5\x29\xd2\x07\x5c\xe7\x26\x78\x85\x4b\x4b\xd6\xb5\x85\xf5\x66\xe2\xce\x31\x10\x49\x03\xf7\xa4\xf5\x33\x15\x78\xe7\x62\x91\xea\x9c\x73\x20\xca\x7c\x41\xf6\xf5\x0d\xd1\xf5\xc5\x87\xa4\xe7\xef\xa6\xb3\x45\xc2\x82\xda\x7d\xb8\x85\x47\x7e\x5b\x7c\x5b\xf1\x31\x6e\xbb\xc2\xfd\xf2\xc8\x96\xfb\x47\x96\xf1\x82\xce\x63\x20\xaa\x5c\xf0\x30\x72\xda\xe9\x69\x2f\x70\x83\xac\x66\x7f\xcd\x5b\xe5\x73\xbd\x07\xaf\xe3\xc2\x16\xb8\xa8\x21\xd2\x3b\x17\xb8\xb1\x60\xda\xd2\x7f\x6e\xbf\x01\x00\x00\xff\xff\x2a\x6a\x43\xa0\x79\x01\x00\x00")

func eventsK8sIoV1beta1EventsYamlBytes() ([]byte, error) {
	return bindataRead(
		_eventsK8sIoV1beta1EventsYaml,
		"events.k8s.io/v1beta1/events.yaml",
	)
}

func eventsK8sIoV1beta1EventsYaml() (*asset, error) {
	bytes, err := eventsK8sIoV1beta1EventsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "events.k8s.io/v1beta1/events.yaml", size: 377, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1IngressesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3d\x4f\xc3\x30\x10\x86\x77\xff\x8a\xdb\x51\x63\x65\xab\x3c\xb3\xb0\x30\x20\xc4\x7e\x75\x4e\xae\x15\x7f\x9c\x7c\xd7\x50\xfe\x3d\x72\x1a\xa0\x11\xb0\x45\x79\xcf\xef\xf3\x9c\x8d\x1c\xdf\xa8\x49\xac\xc5\x41\x26\xc5\x01\x99\xc5\xd7\x89\x06\x5f\xb3\x5d\x46\x4c\x7c\xc6\xd1\xcc\xb1\x4c\x0e\x5e\x48\xea\xa5\x79\x7a\x24\xf1\x2d\xb2\xd6\x66\xfa\x99\x09\x15\x9d\x01\xf0\x8d\x50\x63\x2d\xaf\x31\x93\x28\x66\x76\x50\x2e\x29\x19\x80\x84\x27\x4a\xd2\x67\x00\xe6\xa3\x0c\xb1\xda\xd0\xea\x85\x1d\xd0\x55\xa9\x74\xbc\xdc\x87\x37\xdc\x53\x09\x8d\x64\x17\xb4\xcd\xc0\x41\xbc\x85\xb4\x8b\x97\xaf\x55\x96\xf1\x44\x8a\xa3\x01\x28\x98\xe9\x1e\x73\xd8\xa2\xc3\x4f\x81\x30\xf9\xee\xf6\x5d\xbe\x56\xfe\x23\xf8\xcb\xec\x06\xd8\xeb\x88\xaf\x4c\x0e\x9e\x31\x93\x30\x7a\x9a\xd6\xbf\x7f\xd8\x45\x5f\xcb\x7a\x2f\x07\x90\xe6\x1d\x9c\x55\x59\x9c\xb5\x7e\x2a\xfb\x97\x98\x8f\x62\xd7\x61\x5b\x48\xdf\x6b\x9b\x63\x09\xc3\xb6\x75\xff\x94\x25\xac\x0c\xfd\xe8\xe0\x98\x31\x90\x95\x25\x3c\x5c\x73\x32\x9f\x01\x00\x00\xff\xff\xbe\x3f\xd2\x77\xe4\x01\x00\x00")

func extensionsV1beta1IngressesYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1IngressesYaml,
		"extensions/v1beta1/ingresses.yaml",
	)
}

func extensionsV1beta1IngressesYaml() (*asset, error) {
	bytes, err := extensionsV1beta1IngressesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/ingresses.yaml", size: 484, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1NetworkpoliciesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\x6e\xeb\x30\x0c\x45\x77\x7f\x05\xf7\x87\x58\xf0\x16\x68\x7e\x73\x50\x14\x45\x77\x46\x26\x1c\xc1\x92\x48\x88\x8c\x9b\xfc\x7d\x21\xc7\x2d\x92\x22\x59\xc5\xab\x7b\x8e\x28\x94\xf8\x49\x55\x23\x17\x0f\x99\x0c\x7b\x14\xd1\xc0\x23\xf5\x81\xb3\x5b\x06\x4c\x72\xc2\xa1\x9b\x63\x19\x3d\xbc\x93\xf2\xb9\x06\xfa\x4f\x1a\x6a\x14\xe3\xda\xb5\x3b\x23\x1a\xfa\x0e\x20\x54\x42\x8b\x5c\x3e\x62\x26\x35\xcc\xe2\xa1\x9c\x53\xea\x00\x12\x1e\x29\x69\xcb\x00\xcc\x7b\xed\x23\xbb\xa9\xf2\x59\x3c\xd0\xc5\xa8\x34\xbc\xde\x0f\x6f\xb8\x03\xd9\x17\xd7\xf9\x8d\x53\x0c\xd7\xfb\x71\xdd\x3c\x3c\x94\x5b\x44\x5a\x24\xd2\x43\xc7\xf2\xf3\xac\x65\x38\x92\xe1\xd0\x01\x14\xcc\x74\x8f\xdc\x6d\xa3\xdd\xdf\x1a\x15\x0a\xcd\xf6\x17\xb4\x16\xbf\x50\x7e\xe1\x7a\x83\x3d\x13\xd4\xc0\x42\x1e\x0e\x98\x49\x05\x03\x8d\xeb\xe9\x13\xdf\x18\xb8\xac\x5b\xdb\x81\xd6\xe0\xe1\x64\x26\xea\x9d\x0b\x63\x79\xfc\xa7\x79\xaf\x6e\x0d\xbb\x8d\x17\xcb\xd4\x6f\x7b\x28\x64\xc2\xa9\xd7\x65\x5a\x31\x76\x6d\xec\x98\x71\x22\xa7\xcb\xf4\xef\x92\xd3\x77\x00\x00\x00\xff\xff\x2d\xac\x88\x4c\x04\x02\x00\x00")

func extensionsV1beta1NetworkpoliciesYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1NetworkpoliciesYaml,
		"extensions/v1beta1/networkpolicies.yaml",
	)
}

func extensionsV1beta1NetworkpoliciesYaml() (*asset, error) {
	bytes, err := extensionsV1beta1NetworkpoliciesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/networkpolicies.yaml", size: 516, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1PodsecuritypoliciesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xb1\x6e\xeb\x30\x0c\x45\x77\x7f\x05\xf7\x87\x58\xf0\x16\x68\x7d\xfd\x80\xa0\x2d\xba\x33\x32\xe1\x08\x91\x44\x42\xa4\x8d\xf8\xef\x0b\x2b\x69\x91\x00\x49\x57\xf1\xea\x9e\x23\x11\x25\x7e\x51\xd5\xc8\xc5\x43\x26\xc3\x1e\x45\x34\xf0\x48\x7d\xe0\xec\x96\x01\x93\x9c\x70\xe8\xce\xb1\x8c\x1e\xde\x49\x79\xae\x81\xde\x48\x43\x8d\x62\x5c\xbb\xed\xce\x88\x86\xbe\x03\x08\x95\xd0\x22\x97\xcf\x98\x49\x0d\xb3\x78\x28\x73\x4a\x1d\x40\xc2\x23\x25\xdd\x32\x00\xe7\xbd\xf6\x91\xdd\x54\x79\x16\x0f\x74\x31\x2a\x1b\x5e\xef\x87\x57\xdc\x81\xc7\x0f\x0a\x73\x8d\xb6\x1e\x38\xc5\xb0\xde\x47\xea\xcd\xc5\x83\xf0\xa8\xb7\x98\x6c\xb1\x48\x0f\x5d\xcb\xcf\xf3\x96\xe1\x48\x86\x43\x07\x50\x30\xd3\x3d\x7a\x77\x1b\xed\x9e\x55\xa9\x50\xd8\xcc\x7f\x81\xad\xfc\x85\xfe\x1f\xde\x57\xe8\x2b\x59\x0d\x2c\xe4\xe1\x7f\x9a\xd5\xa8\xb6\xa3\x27\xe2\x31\x70\x69\xdf\xb8\x03\xad\xc1\xc3\xc9\x4c\xd4\x3b\x17\xc6\xf2\xb8\xb8\xf3\x5e\x5d\x0b\xbb\x46\x59\x9d\xa8\xf4\xba\x4c\xad\xd8\xd6\x0d\x15\x33\x4e\xe4\x74\x99\xfe\x5d\x72\xfa\x0e\x00\x00\xff\xff\x00\x03\xa0\xdd\x07\x02\x00\x00")

func extensionsV1beta1PodsecuritypoliciesYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1PodsecuritypoliciesYaml,
		"extensions/v1beta1/podsecuritypolicies.yaml",
	)
}

func extensionsV1beta1PodsecuritypoliciesYaml() (*asset, error) {
	bytes, err := extensionsV1beta1PodsecuritypoliciesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/podsecuritypolicies.yaml", size: 519, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1DormantdatabasesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xbd\x6e\xf3\x30\x0c\x00\x77\x3f\x05\xf7\x0f\xb6\x90\x2d\xd0\x9c\xf9\x1b\x8a\xa2\x3b\x2d\x11\x8e\x60\x49\x24\x44\xd9\x68\xdf\xbe\xf0\x5f\xea\xa2\xc9\x6a\x9e\x79\x47\x1b\x25\x7c\x50\xd1\xc0\xd9\x42\xa2\x8a\x1d\x8a\xa8\x63\x4f\x9d\xe3\x64\xe6\x0b\x46\xb9\xe3\xa5\x19\x43\xf6\x16\xde\x48\x79\x2a\x8e\x6e\xa4\xae\x04\xa9\x5c\x9a\xe5\x1d\x8f\x15\x6d\x03\xe0\x0a\x61\x0d\x9c\xdf\x43\x22\xad\x98\xc4\x42\x9e\x62\x6c\x00\x22\xf6\x14\x75\x61\x00\xc6\xab\x76\x81\xcd\x50\x78\x12\x0b\xe3\xd4\x93\xef\x17\xd9\x79\xb8\xe9\x6e\x5c\x12\xe6\x7a\xc3\x8a\x3d\x2a\x9d\x81\xb2\x97\x58\xf0\x1b\xe4\x77\x48\xcf\xd4\x7c\x5c\xf6\xb8\x03\x20\x63\xa2\xb3\xb6\x3d\x66\xed\x9f\x4d\x2a\xe4\x96\xe6\x87\x6c\xdd\xfd\x22\xfc\x65\xf1\x26\x7c\x9a\xa9\x8e\x85\x2c\xfc\xc7\x44\x2a\xe8\xc8\xaf\x4f\x9f\x55\x07\xc7\x79\xfd\x7e\x2d\x68\x71\x16\xee\xb5\x8a\x5a\x63\x9c\xcf\xbf\xff\xd8\x78\x55\xb3\xc2\xe6\x27\xd0\xec\xf2\xf6\xb0\x77\x3a\x0f\xab\xaa\x7e\x2d\xfe\x90\x70\x20\xa3\xf3\xf0\xef\x33\xc5\xe6\x3b\x00\x00\xff\xff\x8a\x41\x96\x1b\x12\x02\x00\x00")

func kubedbComV1alpha1DormantdatabasesYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1DormantdatabasesYaml,
		"kubedb.com/v1alpha1/dormantdatabases.yaml",
	)
}

func kubedbComV1alpha1DormantdatabasesYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1DormantdatabasesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/dormantdatabases.yaml", size: 530, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1ElasticsearchesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xbd\x6e\xeb\x30\x0c\x85\x77\x3f\x05\xf7\x0b\x5b\xc8\x16\x68\xbe\x5d\x3b\x14\x45\x77\x9a\x22\x6c\xc1\xfa\x21\x44\xd9\x68\xdf\xbe\xb0\xd3\xa4\x4a\x91\xac\x3a\x47\xfc\x3e\x4a\x28\xfe\x83\x8b\xfa\x9c\x2c\x44\xae\x38\xa0\x88\x52\x76\x3c\x50\x8e\x66\x3b\x61\x90\x19\x4f\xdd\xe2\x93\xb3\xf0\xc6\x9a\xd7\x42\xfc\x9f\x95\x8a\x97\x9a\x4b\xb7\xdf\x71\x58\xd1\x76\x00\x54\x18\xab\xcf\xe9\xdd\x47\xd6\x8a\x51\x2c\xa4\x35\x84\x0e\x20\xe0\xc8\x41\xf7\x0e\xc0\x72\xd6\xc1\x67\x33\x95\xbc\x8a\x85\x65\x1d\xd9\x8d\x3b\xac\x0d\x2f\xb8\x97\x80\x5a\x3d\x29\x63\xa1\xb9\x8d\xcb\x8f\x87\x05\x6e\x2b\xac\x6d\x69\xbb\xae\x75\x5b\x02\x20\x61\xe4\x96\xd9\x5f\xb3\xfe\xef\x20\x15\xa6\xdd\xf7\x86\x3a\x46\x3f\x91\x7e\x62\x7b\xa1\x3d\x52\x54\xca\xc2\x16\x5e\x31\xb2\x0a\x12\xbb\xe3\xf4\x91\xb1\xa7\x9c\x8e\x87\xeb\x41\x0b\x59\x98\x6b\x15\xb5\xc6\x90\x4b\xf7\x5f\xb5\x9c\xd5\x1c\x65\xf3\x6b\x67\xee\xd8\x83\x6e\xd3\xc1\xa9\x5f\x3b\xdc\x47\x9c\xd8\xe8\x36\xfd\xfb\x8c\xa1\xfb\x0e\x00\x00\xff\xff\xb8\xe9\xb3\xd1\x08\x02\x00\x00")

func kubedbComV1alpha1ElasticsearchesYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1ElasticsearchesYaml,
		"kubedb.com/v1alpha1/elasticsearches.yaml",
	)
}

func kubedbComV1alpha1ElasticsearchesYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1ElasticsearchesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/elasticsearches.yaml", size: 520, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1EtcdsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xbb\x6e\xc3\x30\x0c\x45\x77\x7f\x05\xf7\xc2\x16\xb2\x05\x9a\xdb\xb5\x43\x51\x74\xa7\x29\xc2\x11\xac\x07\x21\xca\x46\xfb\xf7\x85\xec\x26\x71\x80\x66\x15\x2f\xef\x39\x22\x8a\xff\xe2\xa2\x3e\x27\x0b\x91\x2b\x0e\x28\xa2\x94\x1d\x0f\x94\xa3\x59\x4f\x18\xe4\x82\xa7\x6e\xf6\xc9\x59\xf8\x60\xcd\x4b\x21\x7e\x65\xa5\xe2\xa5\xe6\xd2\xb5\x1d\x87\x15\x6d\x07\x40\x85\xb1\xfa\x9c\x3e\x7d\x64\xad\x18\xc5\x42\x5a\x42\xe8\x00\x02\x8e\x1c\xb4\x65\x00\xe6\xb3\x0e\x3e\x9b\xa9\xe4\x45\x2c\xcc\xcb\xc8\x6e\x6c\xb0\xe3\x70\xc7\xbd\x55\x72\xc7\xd7\xf2\x87\xb7\xc0\x95\x9c\x1e\x47\xeb\xf5\x0f\x37\x63\x80\x84\x91\x8f\x80\xfe\x3a\xeb\xf7\x75\x15\xa6\xa6\x74\xab\xdd\x0a\x9f\x78\x3d\x0a\xed\xd5\x77\x0b\xa5\x2c\x6c\xe1\x1d\x23\xab\x20\xf1\x9e\xfa\x4f\xca\x53\x4e\xdb\x21\x7a\xd0\x42\x16\x2e\xb5\x8a\x5a\x63\xc8\xa5\xc7\xd3\xcf\x67\x35\x5b\xd8\xdc\x55\x4c\x23\x0e\xba\x4e\x5b\x7d\xfd\x69\x4c\x1f\x71\x62\xa3\xeb\xf4\xf2\x1d\xc3\x6f\x00\x00\x00\xff\xff\x43\x31\x76\xf5\xce\x01\x00\x00")

func kubedbComV1alpha1EtcdsYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1EtcdsYaml,
		"kubedb.com/v1alpha1/etcds.yaml",
	)
}

func kubedbComV1alpha1EtcdsYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1EtcdsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/etcds.yaml", size: 462, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1MariadbsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xbd\x6e\xeb\x30\x0c\x85\x77\x3f\x05\xf7\x8b\x58\xc8\x16\x68\xbc\xc8\xda\x0e\x45\xd1\x9d\xa6\x08\x47\xb0\x7e\x08\x51\x36\xda\xb7\x2f\xe4\xd4\xae\x83\xb6\xab\x0e\x75\xbe\x4f\x22\x8a\x7f\xe3\xa2\x3e\x27\x0b\x91\x2b\xf6\x28\xa2\x94\x1d\xf7\x94\xa3\x59\xce\x18\xe4\x86\xe7\x6e\xf2\xc9\x59\x78\x61\xcd\x73\x21\xbe\xb2\x52\xf1\x52\x73\xe9\xda\x1d\x87\x15\x6d\x07\x40\x85\xb1\xfa\x9c\x5e\x7d\x64\xad\x18\xc5\x42\x9a\x43\xe8\x00\x02\x0e\x1c\xb4\xcd\x00\x4c\x17\xed\x7d\x36\x63\xc9\xb3\x58\x98\xe6\x81\xdd\xd0\x60\xc7\xf0\x8e\x7b\xc2\xe2\xf1\xfa\xff\x18\x94\x2f\x03\x0b\xb1\x85\x6e\xd0\x63\xba\x6c\x2f\xd9\xbd\x01\x12\x46\x3e\x62\x4e\x5b\x76\xda\x1b\x54\x98\x9a\xdb\x5e\xbe\x76\xfe\x21\xf8\xc3\xec\x0e\x78\xd0\x51\xca\xc2\x16\x9e\x31\xb2\x0a\x12\xbb\xf5\xf4\x37\x3b\x4f\x39\xad\xff\x72\x02\x2d\x64\xe1\x56\xab\xa8\x35\x86\x5c\x7a\xdc\xc4\x74\x51\xb3\x0e\x9b\x6f\x21\xb3\x41\x7b\x5d\xc6\x15\x51\x3f\x1a\xd7\x47\x1c\xd9\xe8\x32\xfe\x7b\x8f\xe1\x33\x00\x00\xff\xff\x14\x69\x7e\x36\xe1\x01\x00\x00")

func kubedbComV1alpha1MariadbsYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1MariadbsYaml,
		"kubedb.com/v1alpha1/mariadbs.yaml",
	)
}

func kubedbComV1alpha1MariadbsYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1MariadbsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/mariadbs.yaml", size: 481, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1MemcachedsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3d\x4f\xc4\x30\x0c\x40\xf7\xfe\x0a\xef\xe8\x1a\xdd\x76\xca\xcc\x0a\x03\x42\xec\x3e\xc7\x6a\xa3\xe6\xc3\x8a\xd3\x0a\xfe\x3d\x4a\xaf\x57\x0a\x3a\xe6\xe7\xf8\xbd\x24\x28\xfe\x83\x8b\xfa\x9c\x2c\x44\xae\xd8\xa3\x88\x52\x76\xdc\x53\x8e\x66\x39\x63\x90\x11\xcf\xdd\xe4\x93\xb3\xf0\xc6\x9a\xe7\x42\xfc\xcc\x4a\xc5\x4b\xcd\xa5\x6b\x67\x1c\x56\xb4\x1d\x00\x15\xc6\xea\x73\x7a\xf7\x91\xb5\x62\x14\x0b\x69\x0e\xa1\x03\x08\x78\xe5\xa0\x6d\x06\x60\xba\x68\xef\xb3\x19\x4a\x9e\xc5\xc2\x34\x5f\xd9\x5d\x9b\xec\x08\x6f\xba\x17\x8e\x84\x34\xb2\x3b\xa2\xb2\x35\xb4\xdc\x0d\xeb\x91\x2f\xf7\xdb\xec\xed\x00\x09\x23\x1f\x55\xa7\x3b\x3b\x1d\x76\xa8\x30\xb5\xc2\x5d\xb0\x6e\xfd\x27\xf3\x41\xdf\x4d\xf2\x27\x4a\x29\x0b\x5b\x78\xc5\xc8\x2a\x48\xdb\xe8\xa3\x46\x4f\x39\xad\x2f\x74\x02\x2d\x64\x61\xac\x55\xd4\x1a\x43\x2e\xfd\xfe\x93\xe9\xa2\x66\x1d\x36\x3f\x51\x66\xd7\xf6\xba\x0c\xab\xa3\x7e\x35\xb1\x8f\x38\xb0\xd1\x65\x78\xfa\x8c\xa1\xfb\x0e\x00\x00\xff\xff\x25\x13\x06\x30\xed\x01\x00\x00")

func kubedbComV1alpha1MemcachedsYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1MemcachedsYaml,
		"kubedb.com/v1alpha1/memcacheds.yaml",
	)
}

func kubedbComV1alpha1MemcachedsYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1MemcachedsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/memcacheds.yaml", size: 493, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1MongodbsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\x6e\xc3\x20\x10\x86\x77\x3f\xc5\xed\x55\x8c\xb2\x45\x8c\x55\xd6\x76\xa8\xaa\xee\x67\x38\x39\xc8\xc0\x9d\x38\x6c\xb5\x6f\x5f\xe1\x24\xae\xa3\xb6\x2b\xff\xf1\x7f\x1f\x1c\x4a\xf8\xa0\xa2\x81\xb3\x85\x44\x15\x7b\x14\x51\xc7\x9e\x7a\xc7\xc9\x2c\x47\x8c\x72\xc1\x63\x37\x85\xec\x2d\xbc\x91\xf2\x5c\x1c\x9d\x49\x5d\x09\x52\xb9\x74\xed\x8e\xc7\x8a\xb6\x03\x70\x85\xb0\x06\xce\xef\x21\x91\x56\x4c\x62\x21\xcf\x31\x76\x00\x11\x07\x8a\xda\x66\x00\xa6\x93\xf6\x81\xcd\x58\x78\x16\x0b\xd3\x3c\x90\x1f\x1a\x6c\x1f\x5e\x71\x2f\x9c\x47\x3e\x3f\xef\x83\x72\x33\xb0\x90\x5a\xe8\x07\xdd\xa7\xcb\xfd\x25\x9b\x37\x40\xc6\x44\x7b\xcc\xe1\x9e\x1d\xb6\x06\x15\x72\xcd\x6d\x2b\x5f\x3b\xff\x11\xfc\x65\x76\x05\x3c\xe8\xa8\x63\x21\x0b\xaf\x98\x48\x05\x1d\xf9\xf5\xf4\x2f\xbb\xe0\x38\xaf\xff\x72\x00\x2d\xce\xc2\xa5\x56\x51\x6b\x8c\xf3\xf9\x71\x13\xd3\x49\xcd\x3a\x6c\x7e\x84\xcc\x0d\xda\xeb\x32\xae\x84\xfa\xd5\xb0\x21\xe1\x48\x46\x97\xf1\xe9\x33\xc5\xee\x3b\x00\x00\xff\xff\x66\x08\xae\xd1\xe1\x01\x00\x00")

func kubedbComV1alpha1MongodbsYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1MongodbsYaml,
		"kubedb.com/v1alpha1/mongodbs.yaml",
	)
}

func kubedbComV1alpha1MongodbsYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1MongodbsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/mongodbs.yaml", size: 481, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1MysqlsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcb\x4e\xc4\x30\x0c\x45\xf7\xfd\x0a\xef\xd1\x34\x9a\xdd\x28\x6b\x96\x80\xc4\x43\xec\x3d\x8e\xd5\x89\x9a\x87\x89\xd3\x8a\xfe\x3d\x6a\xe6\x41\x41\xb0\xcd\xb5\xef\x39\x31\x8a\x7f\xe7\xa2\x3e\x27\x0b\x91\x2b\xf6\x28\xa2\x94\x1d\xf7\x94\xa3\x99\xf7\x18\xe4\x84\xfb\x6e\xf4\xc9\x59\x78\x61\xcd\x53\x21\xbe\x67\xa5\xe2\xa5\xe6\xd2\xad\x3b\x0e\x2b\xda\x0e\x80\x0a\x63\xf5\x39\xbd\xf9\xc8\x5a\x31\x8a\x85\x34\x85\xd0\x01\x04\x3c\x72\xd0\x75\x06\x60\x3c\x68\xef\xb3\x19\x4a\x9e\xc4\xc2\x38\x1d\xd9\x1d\x57\xd8\x36\x3c\xe3\x1e\x97\xd7\xe7\x87\xed\x73\xb9\xf0\x2d\xc4\x45\x3f\x82\x6e\xb3\xf9\xfa\x8b\x9b\x33\x40\xc2\xc8\x5b\xc4\xee\x9a\xed\x2e\xfb\x2a\x4c\xab\xd5\xad\xb8\x35\xfe\xa3\xf6\xcb\xe9\x5c\xbe\x11\x51\xca\xc2\x16\x9e\x30\xb2\x0a\x12\xbb\xf6\xfa\x97\x97\xa7\x9c\xda\x35\x76\xa0\x85\x2c\x9c\x6a\x15\xb5\xc6\x90\x4b\x3f\xef\x3f\x1e\xd4\xb4\x61\xf3\x2d\x63\x1a\xb2\xd7\x79\x68\xfd\x75\x59\xa1\x3e\xe2\xc0\x46\xe7\xe1\xee\x33\x86\xee\x2b\x00\x00\xff\xff\x0d\x8a\x06\x62\xd5\x01\x00\x00")

func kubedbComV1alpha1MysqlsYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1MysqlsYaml,
		"kubedb.com/v1alpha1/mysqls.yaml",
	)
}

func kubedbComV1alpha1MysqlsYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1MysqlsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/mysqls.yaml", size: 469, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1PerconaxtradbsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcd\x6a\xeb\x30\x10\x85\xf7\x7e\x8a\xd9\x5f\x6c\x91\x5d\xd0\xf2\x92\x75\x29\xa5\x94\x6e\xc7\xa3\xc1\x11\xd6\xcf\xa0\x91\x4d\xfa\xf6\xc5\x76\x93\x3a\x25\xd9\xea\x1c\xcd\xf7\x8d\x84\xe2\x3f\xb8\xa8\xcf\xc9\x42\xe4\x8a\x1d\x8a\x28\x65\xc7\x1d\xe5\x68\xe6\x03\x06\x39\xe3\xa1\x19\x7d\x72\x16\xde\x58\xf3\x54\x88\x4f\xac\x54\xbc\xd4\x5c\x9a\xe5\x8e\xc3\x8a\xb6\x01\xa0\xc2\x58\x7d\x4e\xef\x3e\xb2\x56\x8c\x62\x21\x4d\x21\x34\x00\x01\x7b\x0e\xba\x74\x00\xc6\xa3\x76\x3e\x9b\xa1\xe4\x49\x2c\x8c\x53\xcf\xae\x5f\x60\xfb\x70\xc3\xbd\x72\xa1\x9c\xf0\xb3\x16\x3c\xfd\xdf\xc7\xe5\xc7\xc3\x82\x6c\x95\x4b\x2d\xe8\x7a\xdd\x77\xe6\xeb\x56\xb7\x1d\x00\x12\x46\xde\x23\xdb\x6b\xd6\xfe\x99\xa3\xc2\xb4\xd8\xde\x40\xeb\xe4\x27\xca\x4f\x5c\x37\xd8\x03\x41\xa5\x2c\x6c\xe1\x05\x23\xab\x20\xb1\x5b\x4f\x1f\xf9\x7a\xca\x69\x7d\xb5\x16\xb4\x90\x85\x73\xad\xa2\xd6\x18\x72\xe9\xfe\x9f\xc6\xa3\x9a\xb5\x6c\x7e\xe5\xcc\x3d\xba\xd3\x79\x58\x41\xf5\x6b\xa1\xfb\x88\x03\x1b\x9d\x87\x7f\x97\x18\xbe\x03\x00\x00\xff\xff\x6b\xb5\xc0\xb1\x05\x02\x00\x00")

func kubedbComV1alpha1PerconaxtradbsYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1PerconaxtradbsYaml,
		"kubedb.com/v1alpha1/perconaxtradbs.yaml",
	)
}

func kubedbComV1alpha1PerconaxtradbsYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1PerconaxtradbsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/perconaxtradbs.yaml", size: 517, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1PgbouncersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3d\x4f\xc4\x30\x0c\x40\xf7\xfe\x0a\xef\xe8\x1a\xdd\x76\xca\x88\x98\x11\x42\x88\xdd\x75\xac\x5c\xd4\x7c\x58\x71\x5a\xc1\xbf\x47\x6d\xb9\x52\xd0\xb1\xf6\xb9\x7e\x2f\x09\x4a\x78\xe7\xaa\xa1\x64\x0b\x89\x1b\xf6\x28\xa2\x54\x1c\xf7\x54\x92\x99\xcf\x18\xe5\x8a\xe7\x6e\x0c\xd9\x59\x78\x65\x2d\x53\x25\x7e\x62\xa5\x1a\xa4\x95\xda\x2d\xff\x38\x6c\x68\x3b\x00\xaa\x8c\x2d\x94\xfc\x16\x12\x6b\xc3\x24\x16\xf2\x14\x63\x07\x10\x71\xe0\xa8\xcb\x0c\xc0\x78\xd1\x3e\x14\xe3\x6b\x99\xc4\xc2\x38\x0d\xec\x86\x45\x76\x84\x9b\xee\xc5\x3f\x96\x29\x13\xd7\x23\xaa\xdf\x0d\x16\xc4\x0f\x1b\xd6\x23\x9f\x6f\xa7\xd9\xdb\x01\x32\x26\x3e\xaa\x4e\x37\x76\x3a\xec\x50\x61\x5a\x0a\x77\xc1\xba\xf5\x9f\xcc\x3b\x7d\x9b\xe4\x4f\x94\x52\x11\xb6\xf0\x8c\x89\x55\x90\xd8\xad\x5f\xef\x35\x06\x2a\x79\xbd\xa1\x13\x68\x25\x0b\xd7\xd6\x44\xad\x31\xe4\xf2\xef\x37\x19\x2f\x6a\xd6\x61\xf3\x13\x65\x76\x6d\xaf\xb3\x5f\x1d\xed\x73\x11\x87\x84\x9e\x8d\xce\xfe\xe1\x23\xc5\xaf\x00\x00\x00\xff\xff\x37\x60\x2b\xd9\xec\x01\x00\x00")

func kubedbComV1alpha1PgbouncersYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1PgbouncersYaml,
		"kubedb.com/v1alpha1/pgbouncers.yaml",
	)
}

func kubedbComV1alpha1PgbouncersYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1PgbouncersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/pgbouncers.yaml", size: 492, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1PostgresesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x93\x4b\xaf\x13\x3f\x0c\xc5\xf7\xfd\x14\x56\xb7\x7f\x75\xa2\xee\xae\xb2\xfb\x23\x96\x3c\xae\xe8\x15\x7b\x37\x63\xa6\x51\xf3\x30\xb1\x67\x00\x21\xbe\x3b\xca\x3c\xda\x29\xbd\x57\x02\x09\x89\xee\x9a\xe3\xe4\xfc\x6c\x9f\x41\xf6\x1f\xa9\x88\xcf\xc9\x42\x24\xc5\x06\x99\xc5\xe5\x96\x1a\x97\xa3\x19\xf6\x18\xf8\x84\xfb\xcd\xd9\xa7\xd6\xc2\x07\x92\xdc\x17\x47\xaf\x49\x5c\xf1\xac\xb9\x6c\xea\x9d\x16\x15\xed\x06\xc0\x15\x42\xf5\x39\x3d\xf9\x48\xa2\x18\xd9\x42\xea\x43\xd8\x00\x04\x3c\x52\x90\x5a\x03\x70\x7e\x90\xc6\x67\xd3\x95\xdc\xb3\x85\x73\x7f\xa4\xf6\x58\xcd\xd6\xe2\x64\xf7\x98\x45\xbb\x42\xb2\x56\xca\x8c\x60\x81\x67\xf5\x56\x1f\x96\x66\x2e\xe8\x00\x09\x23\xad\x9d\x76\x8b\xb6\x5b\xbd\x21\x4c\xae\x02\x5e\x0c\xc6\x57\x5f\xa0\xbc\xc7\x9b\x3c\x7e\x61\x12\x97\x99\x2c\xbc\xc3\x48\xc2\xe8\xa8\x1d\x4f\x9f\x43\xf4\x2e\xa7\x71\x3e\x3b\x90\xe2\x2c\x9c\x54\x59\xac\x31\xae\x4d\xb7\x1b\x39\x3f\x88\x19\x8b\xcd\x95\xc9\x2c\xb6\x9f\x43\x23\x43\x37\x9a\xe8\xb7\xea\xec\x23\x76\x64\x64\xe8\xfe\xfb\x1a\xeb\x1e\x5c\x4e\x89\x5c\xdd\xd1\xbc\x8c\x1d\x28\x96\x8e\x74\xfa\x57\x7f\xeb\x40\x54\x67\x33\xec\x2f\xda\xd4\xf7\x41\x51\xe9\x53\x1f\x0e\xa4\xb3\x32\x99\xbd\x45\x75\xa7\xda\xeb\x7c\x9a\x96\xb6\x1f\x51\x4f\x16\xb6\x4b\x54\x9a\x8b\xb0\x5d\x55\x3e\x51\xe4\x80\x4a\x16\xb6\xdf\x9b\x9b\xd2\x1f\x4b\x59\xa0\x81\x82\x85\xf7\x5f\x12\x95\xdf\xa0\xbf\x07\xa7\x32\x78\x47\xf7\xd0\x07\x0a\xe4\x6a\x9a\xff\x14\x5c\xe6\x8b\x57\x80\x58\xdf\x7b\xb3\x8a\xfb\x0c\x70\x5d\xd6\x33\xe1\xb9\xab\x99\xd2\xf4\xb7\x06\x81\xcc\x0e\x15\x43\xee\x5e\xf8\xba\x6f\xc7\xf4\x3f\xf3\x2b\x9f\x5a\x9f\xba\x7f\xb8\xde\x9f\x01\x00\x00\xff\xff\x97\x70\x35\xc4\x98\x04\x00\x00")

func kubedbComV1alpha1PostgresesYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1PostgresesYaml,
		"kubedb.com/v1alpha1/postgreses.yaml",
	)
}

func kubedbComV1alpha1PostgresesYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1PostgresesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/postgreses.yaml", size: 1176, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1ProxysqlsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4d\x4e\x03\x31\x0c\x46\xf7\x73\x0a\x5f\xa0\x53\x75\x87\xb2\x66\x89\x10\x7f\x62\xef\x71\x2c\x88\x26\x89\x8d\x9d\xa9\xe0\xf6\x28\x2d\x2d\x83\x46\x6c\xf3\x92\xef\xbd\xa0\xa6\x57\x36\x4f\x52\x03\x14\x6e\x38\xa2\xaa\x93\x44\x1e\x49\xca\xfe\x78\xc0\xac\xef\x78\x18\xe6\x54\x63\x80\x27\x76\x59\x8c\xf8\x96\x9d\x2c\x69\x13\x1b\xfa\x9b\x88\x0d\xc3\x00\x40\xc6\xd8\x92\xd4\x97\x54\xd8\x1b\x16\x0d\x50\x97\x9c\x07\x80\x8c\x13\x67\xef\x77\x00\xe6\x1b\x1f\x93\xec\xdf\x4c\x16\x0d\x30\x2f\x13\xc7\xa9\xcb\xd6\xf0\xac\x7b\x30\xf9\xfc\x7a\x7e\xbc\x5b\x13\xfb\x49\x08\xa0\x9d\xfa\x47\xf6\x35\x3e\x5e\xfe\x72\x2d\x07\xa8\x58\x78\x2d\xda\x5d\xd8\xee\x77\xc2\x95\xa9\xe7\x5d\xe7\x4f\xa3\xff\x34\x6e\xe3\xce\x8a\xbf\x45\x4e\xa2\x1c\xe0\x1e\x0b\xbb\x22\x71\x3c\x9d\x6e\x03\xbf\x03\x00\x00\xff\xff\x86\x03\x4a\x8a\x82\x01\x00\x00")

func kubedbComV1alpha1ProxysqlsYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1ProxysqlsYaml,
		"kubedb.com/v1alpha1/proxysqls.yaml",
	)
}

func kubedbComV1alpha1ProxysqlsYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1ProxysqlsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/proxysqls.yaml", size: 386, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1RedisesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xbd\x4e\xec\x30\x10\x85\xfb\x3c\xc5\xf4\x57\x89\xb5\xdd\xca\xf5\xad\x29\x10\xa2\x9f\x8c\x47\x59\x2b\xfe\x19\x79\x9c\x08\xde\x1e\xd9\x90\x25\x8b\xa0\x9d\x33\x3e\xdf\x67\x1b\xc5\xbf\x72\x51\x9f\x93\x85\xc8\x15\x27\x14\x51\xca\x8e\x27\xca\xd1\xec\x17\x0c\x72\xc3\xcb\xb0\xfa\xe4\x2c\x3c\xb3\xe6\xad\x10\xff\x67\xa5\xe2\xa5\xe6\x32\xb4\x33\x0e\x2b\xda\x01\x80\x0a\x63\xf5\x39\xbd\xf8\xc8\x5a\x31\x8a\x85\xb4\x85\x30\x00\x04\x9c\x39\x68\xdb\x01\x58\xaf\x3a\xf9\x6c\x96\x92\x37\xb1\xb0\x6e\x33\xbb\xb9\xc1\xce\xe1\x81\x73\x5e\xcf\xe3\xf2\xc5\xb7\x50\x5a\xc4\x0f\xe1\x7e\x5c\xe3\x2e\x0d\x90\x30\xf2\x99\x31\x1e\xd9\x78\x14\xa8\x30\x35\xaf\x7b\x75\xaf\xfc\x43\xee\x87\xd5\x67\xfb\x59\x45\x29\x0b\x5b\x78\xc2\xc8\x2a\x48\xec\xfa\xf4\x37\x33\x4f\x39\xf5\x07\x19\x41\x0b\x59\xb8\xd5\x2a\x6a\x8d\x21\x97\x1e\xbf\x60\xbd\xaa\xe9\xcb\xe6\xdb\xc6\x74\xe6\xa4\xfb\xd2\xfb\xeb\x7b\x83\xfa\x88\x0b\x1b\xdd\x97\x7f\x6f\x31\x0c\x1f\x01\x00\x00\xff\xff\xe0\xe7\x3e\xd5\xd8\x01\x00\x00")

func kubedbComV1alpha1RedisesYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1RedisesYaml,
		"kubedb.com/v1alpha1/redises.yaml",
	)
}

func kubedbComV1alpha1RedisesYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1RedisesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/redises.yaml", size: 472, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1SnapshotsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x3d\x6e\x04\x21\x0c\x46\x7b\x4e\xe1\x0b\xec\xac\xb6\x8b\xa8\x53\xa7\x48\xa2\xf4\x1e\x63\x65\xd1\x00\xb6\x30\xec\xf9\x23\xf6\x2f\x44\xa3\xb4\x3c\xf8\xde\x03\x35\x7e\x71\xb5\x28\xc5\x43\xe6\x86\x0b\xaa\x1a\x49\xe0\x85\x24\x1f\x2f\x27\x4c\x7a\xc6\x93\xdb\x62\x09\x1e\xde\xd9\xa4\x57\xe2\x57\x36\xaa\x51\x9b\x54\x37\xde\x04\x6c\xe8\x1d\x00\x55\xc6\x16\xa5\x7c\xc6\xcc\xd6\x30\xab\x87\xd2\x53\x72\x00\x09\x57\x4e\x36\xee\x00\x6c\x2f\xb6\x44\x39\x7e\x57\xe9\xea\x61\xeb\x2b\x87\x75\xc8\x66\x78\xd3\x7d\x14\x54\x3b\x4b\x9b\x49\xbd\x27\x78\xb0\x3b\xb5\x19\x5f\x1e\x7f\x79\x96\x03\x14\xcc\x3c\x8b\x0e\x0f\x76\xf8\x9d\x30\x65\x1a\x79\xcf\xf9\xeb\xe8\x3f\x8d\xfb\xb8\x9b\xe2\x6f\x91\x91\x28\x7b\x78\xc3\xcc\xa6\x48\x1c\xae\xa7\xfb\xc0\x9f\x00\x00\x00\xff\xff\xab\x7d\xb3\x79\x82\x01\x00\x00")

func kubedbComV1alpha1SnapshotsYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1SnapshotsYaml,
		"kubedb.com/v1alpha1/snapshots.yaml",
	)
}

func kubedbComV1alpha1SnapshotsYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1SnapshotsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/snapshots.yaml", size: 386, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubevaultComV1alpha1VaultserversYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xbd\x6e\xeb\x30\x0c\x85\x77\x3f\x05\xf7\x8b\x58\xc8\x16\x68\xbe\x73\x87\xb6\xc8\xce\xd0\x84\x23\x58\x3f\x84\x28\x0b\xed\xdb\x17\x52\x9a\xc0\x6e\xd3\xd5\xe7\x90\xdf\x47\x0b\xc5\x9d\x39\xab\x4b\xd1\x42\xe0\x82\x23\x8a\x28\xa5\x89\x47\x4a\xc1\xd4\x23\x7a\xb9\xe2\x71\x58\x5c\x9c\x2c\xbc\xb2\xa6\x35\x13\xff\x67\xa5\xec\xa4\xa4\x3c\xb4\x99\x09\x0b\xda\x01\x80\x32\x63\x71\x29\xbe\xbb\xc0\x5a\x30\x88\x85\xb8\x7a\x3f\x00\x78\xbc\xb0\xd7\xd6\x01\x58\x4e\x3a\xba\x64\xe6\x9c\x56\xb1\xb0\xac\x17\xae\xb8\xfa\xd2\x78\xdb\xfc\x46\x3c\xb7\xe8\x8d\x73\xe5\xbc\x0d\xf3\xb7\x88\x85\x3e\xab\xbd\xa0\xdb\x46\xbd\x1f\xf5\x38\x01\x20\x62\xe0\x1f\xc4\xc3\x3d\x3e\xec\x16\xa9\x30\x35\xdb\x07\xa7\xaf\xfe\x5b\xf9\xa9\xeb\x0d\xf7\x4b\x50\x29\x09\x5b\x78\xc1\xc0\x2a\x48\x3c\xf5\xaf\xcf\x7c\x1d\xa5\xd8\x7f\xda\x01\x34\x93\x85\x6b\x29\xa2\xd6\x18\x9a\xe2\xfe\x99\x96\x93\x9a\x5e\x36\x3b\x37\xb3\x65\x8f\x5a\xe7\x4e\x2a\x9f\x0d\xef\x02\xce\x6c\xb4\xce\xff\x3e\x82\xff\x0a\x00\x00\xff\xff\x45\x2d\xfe\x59\x05\x02\x00\x00")

func kubevaultComV1alpha1VaultserversYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubevaultComV1alpha1VaultserversYaml,
		"kubevault.com/v1alpha1/vaultservers.yaml",
	)
}

func kubevaultComV1alpha1VaultserversYaml() (*asset, error) {
	bytes, err := kubevaultComV1alpha1VaultserversYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubevault.com/v1alpha1/vaultservers.yaml", size: 517, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metaAppscodeComV1alpha1ResourcedescriptorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x6e\x85\x30\x0c\x45\xf7\x7c\x85\x7f\xe0\x81\xd8\xaa\xcc\x9d\x3b\x54\x55\x77\xd7\xb1\xda\x88\x24\xb6\xe2\xc0\xf7\x57\xd0\x82\x90\x1e\xb0\x45\xf1\xb1\xef\x3d\xa8\xf1\x93\xab\x45\x29\x1e\x32\x37\xec\x50\xd5\x48\x02\x77\x24\xb9\x9f\x07\x4c\xfa\x83\x83\x1b\x63\x09\x1e\xde\xd9\x64\xaa\xc4\xaf\x6c\x54\xa3\x36\xa9\x6e\xd9\x09\xd8\xd0\x3b\x00\xaa\x8c\x2d\x4a\xf9\x88\x99\xad\x61\x56\x0f\x65\x4a\xc9\x01\x24\xfc\xe2\x64\x0b\x03\x30\xbe\x58\x17\xa5\xff\xae\x32\xe9\x49\xe6\x91\xb9\x4c\x3d\x30\xf5\x7f\xea\x61\x7b\x85\x9d\xb3\x23\x38\x6f\x9a\xbb\x14\x40\xc1\xcc\x27\x1d\x1e\x1b\xf2\x38\xbb\x69\xca\xb4\xa8\xec\xc9\x6b\xca\xbd\xcf\x9d\xc8\x5f\x89\xab\xf6\x46\xa2\xec\xe1\x0d\x33\x9b\x22\x71\x58\x7f\x9f\x65\x7e\x03\x00\x00\xff\xff\xff\x3c\x96\x8d\xc9\x01\x00\x00")

func metaAppscodeComV1alpha1ResourcedescriptorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_metaAppscodeComV1alpha1ResourcedescriptorsYaml,
		"meta.appscode.com/v1alpha1/resourcedescriptors.yaml",
	)
}

func metaAppscodeComV1alpha1ResourcedescriptorsYaml() (*asset, error) {
	bytes, err := metaAppscodeComV1alpha1ResourcedescriptorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "meta.appscode.com/v1alpha1/resourcedescriptors.yaml", size: 457, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringCoreosComV1AlertmanagersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x5f\xe0\x7a\xea\x86\xb2\x21\x31\x33\x20\xc4\x6e\x5c\xab\x58\x97\xc4\x96\x9d\xf6\xf9\x51\xef\x00\x05\x01\x62\x4d\xbe\xfc\xdf\x17\x34\x79\x61\x0f\xd1\x96\xa1\x72\xc7\x09\xcd\x82\x74\xe1\x89\xb4\x9e\xf7\x19\x8b\xbd\xe1\x9c\x2e\xd2\x96\x0c\x4f\x1c\xba\x39\xf1\x03\x07\xb9\x58\x57\x4f\xc7\x9b\x05\x3b\xe6\x04\x40\xce\xd8\x45\xdb\xb3\x54\x8e\x8e\xd5\x32\xb4\xad\x94\x04\x50\xf0\x95\x4b\x1c\x0c\xc0\xe5\x2e\x26\xd1\xf3\xea\xba\x59\x86\xaa\x4d\xba\xba\xb4\x75\x22\x75\xd6\x38\xbc\x23\x77\x33\xdf\x17\xf6\x5e\xb1\xe1\xca\x3e\xde\xfa\x47\x51\x06\x1c\x88\x18\x91\xfd\xf3\x7b\xfb\x9c\x00\x1a\x56\xfe\xc3\x7a\xda\xe7\xd3\xf7\x95\x30\xa6\x23\xfa\xcb\x72\xdd\xfd\xbf\xfc\xf7\xe4\x9b\xfa\x67\x67\x90\x1a\x67\x78\xc4\xca\x61\x48\xbc\x5c\x4f\xc7\xec\xf7\x00\x00\x00\xff\xff\xc9\xec\x17\x8c\xa5\x01\x00\x00")

func monitoringCoreosComV1AlertmanagersYamlBytes() ([]byte, error) {
	return bindataRead(
		_monitoringCoreosComV1AlertmanagersYaml,
		"monitoring.coreos.com/v1/alertmanagers.yaml",
	)
}

func monitoringCoreosComV1AlertmanagersYaml() (*asset, error) {
	bytes, err := monitoringCoreosComV1AlertmanagersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring.coreos.com/v1/alertmanagers.yaml", size: 421, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringCoreosComV1PodmonitorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xc1\x4a\x04\x31\x0c\x86\xef\x7d\x8a\xbc\xc0\xce\x32\x37\xe9\xd9\xab\x22\x22\xde\x63\x1b\xd6\xb0\x6d\x13\x92\xce\x3c\xbf\xcc\xce\x28\x45\x94\xbd\xb6\x5f\xff\xef\x2b\x2a\xbf\x93\x39\x4b\x8b\x50\xa9\xe3\x84\xaa\x9e\x24\xd3\x94\xa4\x9e\xd7\x19\x8b\x7e\xe2\x1c\xae\xdc\x72\x84\x57\x72\x59\x2c\xd1\x23\x79\x32\xd6\x2e\x16\xb6\x37\x19\x3b\xc6\x00\x90\x8c\xb0\xb3\xb4\x37\xae\xe4\x1d\xab\x46\x68\x4b\x29\x01\xa0\xe0\x07\x15\xdf\x18\x80\xeb\x83\x4f\x2c\xe7\x8b\xc9\xa2\x11\xaa\x34\xee\x62\xdc\x2e\x53\x12\x23\xf1\xcd\x3b\x72\xbb\xf9\x45\xf2\xd3\x4e\x8e\x77\x76\xf4\x44\x50\xc9\xc7\x92\x8f\xc0\xfa\xfd\xb5\x75\x0e\x00\x0d\x2b\xfd\x63\x3c\xad\xf3\x69\xdc\x70\xa5\xb4\xe5\xfe\x18\x6e\xab\xf7\x9b\xff\x8a\xdd\xb5\xbf\x0b\x3d\x89\x52\x84\x67\xac\xe4\x8a\x89\xf2\xed\x74\x0c\xfe\x0a\x00\x00\xff\xff\xf3\x99\x9c\xc1\x9b\x01\x00\x00")

func monitoringCoreosComV1PodmonitorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_monitoringCoreosComV1PodmonitorsYaml,
		"monitoring.coreos.com/v1/podmonitors.yaml",
	)
}

func monitoringCoreosComV1PodmonitorsYaml() (*asset, error) {
	bytes, err := monitoringCoreosComV1PodmonitorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring.coreos.com/v1/podmonitors.yaml", size: 411, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringCoreosComV1PrometheusesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x4f\x8f\x9c\x30\x0c\xc5\xef\x7c\x0a\x6b\x7b\xac\x00\xcd\x6d\x95\x73\xaf\x5b\xad\xba\xab\xde\x5d\xe3\x42\x34\x24\x8e\x62\x83\xba\xdf\xbe\x0a\x64\xfe\xa0\x4e\xb5\xdc\x12\xff\xe2\xf7\xec\x07\x26\xff\x93\xb3\x7a\x89\x0e\x02\x1b\x76\x98\x92\x92\x0c\xdc\x91\x84\x7e\x3d\xe1\x9c\x26\x3c\x35\x67\x1f\x07\x07\x3f\x58\x65\xc9\xc4\xdf\x58\x29\xfb\x64\x92\x9b\xf2\x66\x40\x43\xd7\x00\x50\x66\x34\x2f\xf1\xdd\x07\x56\xc3\x90\x1c\xc4\x65\x9e\x1b\x80\x19\x7f\xf1\xac\x85\x01\x38\x3f\x6b\xe7\xa5\x1f\xb3\x2c\xc9\x41\x90\xe8\x4d\xb2\x8f\x63\x47\x92\x59\xb4\xe8\xde\x73\xbb\xf2\x6b\x96\xc0\x36\xf1\xa2\xf7\xb5\x5c\xfd\x38\x48\xd7\x3a\x1f\x88\xf5\x32\xdb\x7a\x6a\x00\x22\x06\xfe\x8f\x64\xbb\x9e\xda\x43\x13\x4d\x4c\xc5\xf0\x55\x63\x6b\xfb\xa9\xeb\xa3\xe0\x45\xf2\x5f\x7b\x8f\xa6\x52\x92\xc4\x0e\xbe\x63\x60\x4d\x48\x3c\x34\x00\x9e\x24\x6e\x8b\x6b\x41\x33\x39\x98\xcc\x92\xba\xbe\xa7\x21\x1e\xa3\x3a\x3f\x6b\xbf\xc1\xfd\x43\x73\xfd\xcd\x42\xa7\xeb\xb8\xe9\xd9\x47\x91\xf3\x01\x47\xee\x75\x1d\xbf\xfe\x09\x25\x2b\x92\x18\x99\x4a\x8e\x35\xb0\x2f\x45\xdb\xd0\xf8\xf7\x32\x2b\xdb\xed\x8e\xf3\xea\x89\xb7\x73\x0b\x86\x79\x64\xdb\x5f\x94\xef\xf0\x63\x3d\x74\x54\x37\x74\x5b\xc7\xdb\xde\xf0\x65\xa7\x6b\x71\x37\xf9\x82\x46\xd3\x1b\xcf\x4c\xb7\x4a\xbc\xec\xe9\x15\x6d\x72\xf0\x54\x12\xeb\xae\x97\x17\xf8\xa9\xd2\x5a\xcf\xf7\xb0\xde\x31\x67\xfe\x78\xdf\x46\xa8\x53\xb7\x87\x09\xae\x5e\x6b\x70\x32\x7c\x0e\xd5\x71\x9a\xbf\x01\x00\x00\xff\xff\x40\x6e\x8c\x0c\x63\x03\x00\x00")

func monitoringCoreosComV1PrometheusesYamlBytes() ([]byte, error) {
	return bindataRead(
		_monitoringCoreosComV1PrometheusesYaml,
		"monitoring.coreos.com/v1/prometheuses.yaml",
	)
}

func monitoringCoreosComV1PrometheusesYaml() (*asset, error) {
	bytes, err := monitoringCoreosComV1PrometheusesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring.coreos.com/v1/prometheuses.yaml", size: 867, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringCoreosComV1PrometheusrulesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x6a\x2b\x31\x10\x45\x7b\x7d\xc5\xfc\x80\xd7\x6c\xf7\x50\xfd\xea\x10\x4c\x48\x3f\xd1\x5e\x6c\x61\x49\x33\xcc\x48\xfb\xfd\x61\xed\xc4\x2c\x21\x26\xad\x74\x74\xcf\x11\x6b\x7e\x87\x79\x96\x16\xa9\xa2\xf3\xc4\xaa\x9e\x64\xc1\x94\xa4\x1e\xd7\x99\x8b\x5e\x78\x0e\xd7\xdc\x96\x48\x27\xb8\x0c\x4b\xf8\x0f\x4f\x96\xb5\x8b\x85\xed\xcd\xc2\x9d\x63\x20\x4a\x06\xee\x59\xda\x5b\xae\xf0\xce\x55\x23\xb5\x51\x4a\x20\x2a\xfc\x81\xe2\x1b\x43\x74\xfd\xe7\x53\x96\xe3\xd9\x64\x68\xa4\x2a\x2d\x77\xb1\xdc\xce\x53\x12\x83\xf8\xe6\xdd\x73\x77\xf3\xab\x49\x45\xbf\x60\xf8\x69\x14\xec\xef\xed\xab\x29\x92\x3e\x18\x1b\x05\xbe\x87\xd6\xef\x2f\xae\x73\x20\x6a\x5c\xf1\xc4\x7c\x58\xe7\xc3\xcf\x1d\x57\xa4\x2d\xfd\x61\xba\x2d\xff\xdd\xff\x2c\xfc\xae\xff\xad\xd6\x93\x28\x22\xbd\x70\x85\x2b\x27\x2c\xb7\xd3\x7d\xfc\x67\x00\x00\x00\xff\xff\x11\x1b\xcb\x1e\xaf\x01\x00\x00")

func monitoringCoreosComV1PrometheusrulesYamlBytes() ([]byte, error) {
	return bindataRead(
		_monitoringCoreosComV1PrometheusrulesYaml,
		"monitoring.coreos.com/v1/prometheusrules.yaml",
	)
}

func monitoringCoreosComV1PrometheusrulesYaml() (*asset, error) {
	bytes, err := monitoringCoreosComV1PrometheusrulesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring.coreos.com/v1/prometheusrules.yaml", size: 431, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringCoreosComV1ServicemonitorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x41\x6f\xdb\x30\x0c\x85\xef\xfe\x15\x44\x77\x1c\x62\x21\xb7\x42\xe7\x5d\x3b\x14\x4d\xb1\x3b\x47\x73\x8e\x10\x4b\x14\x44\xc6\x58\xff\xfd\x20\x47\xce\x9c\x36\x45\x8f\x89\x3f\xbd\xf7\xc8\x47\xcc\xe1\x17\x17\x0d\x92\x3c\x44\x36\xec\x31\x67\x25\x19\xb8\x27\x89\x6e\xde\xe3\x94\x8f\xb8\xef\x4e\x21\x0d\x1e\x5e\x58\xe5\x5c\x88\x7f\xb0\x52\x09\xd9\xa4\x74\xf5\xcd\x80\x86\xbe\x03\xa0\xc2\x68\x41\xd2\x6b\x88\xac\x86\x31\x7b\x48\xe7\x69\xea\x00\x26\xfc\xcd\x93\x56\x06\xe0\xf4\xa8\x7d\x10\x37\x16\x39\x67\x0f\x51\x52\x30\x29\x21\x8d\x3d\x49\x61\xd1\xea\xbb\xe5\x2e\xce\x07\x2e\x73\x20\x7e\xba\xd0\xdb\xef\xa5\x65\xf2\xa0\x17\xa6\x29\xea\x16\x9a\xd7\x11\xe7\x7d\x07\x90\x30\xf2\x27\xce\xbb\x79\xbf\x7b\xaf\xa3\x99\xa9\x46\xbf\x3a\x2d\xca\x5f\xe6\xbf\xf5\x5c\x5d\xef\x86\xfc\x6c\x44\x25\xc9\xec\xe1\x27\x46\xd6\x8c\xc4\x43\x07\x10\x48\xd2\xb2\xc9\x1d\x68\x21\x0f\x47\xb3\xac\xde\x39\x1a\xd2\x6d\x77\xa7\x47\x75\x0b\xec\xee\x66\x74\xb7\x49\x7a\x9d\xc7\xc5\xd3\xde\xaa\x65\x88\x38\xb2\xd3\x79\xfc\xfe\x37\xd6\x02\x4f\xfc\xf6\x8a\x65\x64\x6b\x25\xee\x60\x7b\x38\xd5\xd7\xb5\x31\xd7\x71\x5e\x38\x4f\x81\xf0\xc0\x76\xe7\xc1\x3b\xf6\x59\x86\xaf\xa1\xb6\x9f\x7a\x67\x92\x12\x53\xbd\xb4\x96\xe6\x5b\x5d\x86\xa1\xf1\x9f\xf3\xa4\x57\x43\x5b\x02\xfb\x26\x02\xf7\xb5\x3f\xaa\xff\x5f\xc2\x13\x1a\x1d\x0f\x3c\x31\xad\x85\x5c\x5a\x5c\xba\x78\x46\x3b\x7a\x78\xa8\xc7\xd1\x5f\xff\x5c\xe1\x87\x46\x6b\xfb\xbd\x85\xf5\xca\xfc\x0b\x00\x00\xff\xff\xc3\xe5\x3a\x54\x7c\x03\x00\x00")

func monitoringCoreosComV1ServicemonitorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_monitoringCoreosComV1ServicemonitorsYaml,
		"monitoring.coreos.com/v1/servicemonitors.yaml",
	)
}

func monitoringCoreosComV1ServicemonitorsYaml() (*asset, error) {
	bytes, err := monitoringCoreosComV1ServicemonitorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring.coreos.com/v1/servicemonitors.yaml", size: 892, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _networkingK8sIoV1NetworkpoliciesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xbd\x6e\xeb\x30\x0c\x85\x77\x3f\x05\xf7\x8b\x58\xf0\x16\x68\xbe\x73\x50\x14\x45\x77\x56\x26\x1c\xc2\x92\x48\x88\x8a\xdb\xbc\x7d\x21\xa7\x0d\xec\xfe\xad\xe4\xa7\x73\x3e\x49\xa8\xfc\x4c\xc5\x58\xb2\x87\x44\x15\x7b\x54\xb5\x20\x23\xf5\x41\x92\x5b\x06\x8c\x7a\xc6\xa1\x9b\x39\x8f\x1e\x1e\xc9\xe4\x52\x02\xfd\x27\x0b\x85\xb5\x4a\xe9\xda\x99\x11\x2b\xfa\x0e\x20\x14\xc2\xca\x92\x9f\x38\x91\x55\x4c\xea\x21\x5f\x62\xec\x00\x22\xbe\x50\xb4\xc6\x00\xcc\x47\xeb\x59\xdc\x54\xe4\xd2\x00\xaa\xaf\x52\x66\xce\x53\x7f\x5b\x6c\x99\x5b\xeb\xe9\x86\x3c\x48\xe4\x70\xdd\xae\xcb\x87\xce\x3d\x45\x1b\xc2\x64\x5b\x68\xf9\xbc\xdd\x32\x74\x00\x19\x13\xfd\x50\x7a\x58\x86\xc3\xd7\x0c\x53\x0a\xcd\xf8\xde\xb2\xa6\xfe\xad\xfd\x8b\xef\xae\x75\x27\x69\x41\x94\x3c\x9c\x30\x91\x29\x06\x1a\xd7\xe9\xde\x99\x83\xe4\xf5\xed\x0e\x60\x25\x78\x38\xd7\xaa\xe6\x9d\x0b\x63\xde\xff\xd6\x7c\x34\xb7\xc2\xee\x9b\x5e\x9b\xa8\xc4\xde\x96\x69\x6d\xa8\xd7\x56\xcb\x09\x27\x72\xb6\x4c\xff\xde\x52\x7c\x0f\x00\x00\xff\xff\x73\xcd\xf7\xe1\x0a\x02\x00\x00")

func networkingK8sIoV1NetworkpoliciesYamlBytes() ([]byte, error) {
	return bindataRead(
		_networkingK8sIoV1NetworkpoliciesYaml,
		"networking.k8s.io/v1/networkpolicies.yaml",
	)
}

func networkingK8sIoV1NetworkpoliciesYaml() (*asset, error) {
	bytes, err := networkingK8sIoV1NetworkpoliciesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "networking.k8s.io/v1/networkpolicies.yaml", size: 522, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _networkingK8sIoV1beta1IngressesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x31\x6f\xf3\x20\x10\x86\x77\x7e\xc5\xed\x9f\x62\xe4\x2d\x62\xfe\x96\x2e\x1d\xaa\xaa\xfb\x05\x9f\xc8\xc9\xc0\x21\x8e\xb8\xed\xbf\xaf\xb0\xd3\x36\x56\xa2\x6e\x88\xf7\xe5\x9e\x07\xc0\xc2\x6f\x54\x95\x25\x3b\x48\xd4\x70\xc0\x52\xd4\xcb\x44\x83\x97\x64\x97\x11\x63\x39\xe3\x68\x66\xce\x93\x83\x17\x52\xb9\x54\x4f\xff\x49\x7d\xe5\xd2\xa4\x9a\x7e\x66\xc2\x86\xce\x00\xf8\x4a\xd8\x58\xf2\x2b\x27\xd2\x86\xa9\x38\xc8\x97\x18\x0d\x40\xc4\x13\x45\xed\x1d\x80\xf9\xa8\x03\x8b\x0d\x55\x2e\xbd\x40\xed\x5d\xea\xcc\x39\x0c\x5b\x70\xdb\xd9\xa8\x4f\x39\x54\x52\xbd\x0d\xea\x55\xc4\x01\x6f\x21\xed\xe2\xe5\xfb\x46\xcb\x78\xa2\x86\xa3\x01\xc8\x98\xe8\x01\xed\x70\x6d\x1c\x7e\xe7\x68\x21\xdf\x4d\x7f\x18\xeb\xe4\xbf\x75\xef\x3c\x37\xdc\x5e\x4e\xbd\x14\x72\xf0\x8c\x89\xb4\xa0\xa7\x69\xdd\x7d\xe0\xca\x5e\xf2\xfa\x58\x07\xd0\xea\x1d\x9c\x5b\x2b\xea\xac\xf5\x53\xde\x7f\xcf\x7c\x54\xbb\x96\xed\x9d\x97\xed\x4b\x5d\xc2\xca\x68\x9f\x1d\xcc\x09\x03\x59\x5d\xc2\xbf\x8f\x14\xcd\x57\x00\x00\x00\xff\xff\xf9\xda\xb3\x46\xf9\x01\x00\x00")

func networkingK8sIoV1beta1IngressesYamlBytes() ([]byte, error) {
	return bindataRead(
		_networkingK8sIoV1beta1IngressesYaml,
		"networking.k8s.io/v1beta1/ingresses.yaml",
	)
}

func networkingK8sIoV1beta1IngressesYaml() (*asset, error) {
	bytes, err := networkingK8sIoV1beta1IngressesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "networking.k8s.io/v1beta1/ingresses.yaml", size: 505, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeK8sIoV1beta1RuntimeclassesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x41\x6e\x03\x21\x0c\x45\xf7\x9c\xc2\x17\xc8\x44\xb3\xab\xd8\xa6\x27\xa8\xaa\xee\x1d\xe6\xab\x45\x01\x8c\x6c\x98\xf3\x57\x64\xa6\x55\xd2\x26\x5b\xfb\xe1\xf7\xe0\x1a\x3f\xa0\x16\xa5\x78\xca\x68\x3c\x71\xad\x16\x64\xc1\x14\x24\x1f\xd7\x99\x53\xfd\xe2\xd9\x5d\x62\x59\x3c\xbd\xc1\xa4\x6b\xc0\x2b\x2c\x68\xac\x4d\xd4\x8d\x37\x0b\x37\xf6\x8e\x28\x28\xb8\x45\x29\xef\x31\xc3\x1a\xe7\xea\xa9\xf4\x94\x1c\x51\xe2\x33\x92\x0d\x86\xe8\xf2\x62\x53\x94\xe3\xa7\x4a\x1f\xc0\x50\x6d\xa3\xdb\xed\xee\xeb\xa5\xc5\x8c\x53\x62\xb3\xdb\xad\xee\x1d\x9e\x74\x23\xc2\x20\x70\xc7\xac\x3f\xbf\x5a\xe7\x33\x1a\xcf\x8e\xa8\x70\xc6\x9d\xf1\xb0\xef\x0e\x7f\xce\x58\x45\x18\xb1\xbf\x9e\xeb\xe1\x67\xc5\x8f\x53\x37\xd9\x83\x3e\x0b\x52\xe1\xe9\x94\xba\x35\xe8\x75\xf4\xaf\xf5\x3b\x00\x00\xff\xff\x2f\xf6\x17\x71\x96\x01\x00\x00")

func nodeK8sIoV1beta1RuntimeclassesYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeK8sIoV1beta1RuntimeclassesYaml,
		"node.k8s.io/v1beta1/runtimeclasses.yaml",
	)
}

func nodeK8sIoV1beta1RuntimeclassesYaml() (*asset, error) {
	bytes, err := nodeK8sIoV1beta1RuntimeclassesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node.k8s.io/v1beta1/runtimeclasses.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _policyV1beta1PoddisruptionbudgetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x41\x6a\x03\x31\x0c\x45\xf7\x3e\x85\x2e\x90\x84\xd9\x15\x2f\x4b\xd6\xa5\x94\xd2\xbd\xc6\x16\xa9\x88\x6d\x09\xcb\x1e\xe8\xed\x8b\xa7\x99\x30\xd0\xb4\xdb\xef\xe7\xff\x9f\x50\xf9\x83\xaa\xb1\x14\x0f\x99\x1a\x1e\x51\xd5\x82\x44\x3a\x06\xc9\xa7\x65\xc2\xa4\x9f\x38\xb9\x2b\x97\xe8\xe1\x8d\x4c\x7a\x0d\x74\x26\x0b\x95\xb5\x49\x75\xe3\x4f\xc4\x86\xde\x01\x84\x4a\xd8\x58\xca\x3b\x67\xb2\x86\x59\x3d\x94\x9e\x92\x03\x48\x38\x53\xb2\xc1\x00\x5c\x9f\xec\xc8\x72\xba\x54\xe9\xea\x41\x25\x71\xf8\xda\x3f\xfc\x4c\xbd\x4a\x3c\xb3\xd5\xae\xa3\xf0\xb9\xc7\x0b\xb5\x3d\x54\x6f\x26\xa3\x20\xc6\x3b\x38\xaf\xa0\xed\xc9\x65\xbb\x6e\x99\x66\x6a\x38\x39\x80\x82\x99\xb6\xe5\xc3\x2d\x3e\x3c\xec\x31\xa5\x30\xac\xef\x73\x6b\xf3\x03\xf5\x7f\x9d\xb7\xbd\x3f\x44\x2d\x88\x92\x87\x17\xcc\x64\x8a\x81\xe2\x9a\xfe\xf2\xfe\x0e\x00\x00\xff\xff\x17\x65\x2e\xa7\xaa\x01\x00\x00")

func policyV1beta1PoddisruptionbudgetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_policyV1beta1PoddisruptionbudgetsYaml,
		"policy/v1beta1/poddisruptionbudgets.yaml",
	)
}

func policyV1beta1PoddisruptionbudgetsYaml() (*asset, error) {
	bytes, err := policyV1beta1PoddisruptionbudgetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "policy/v1beta1/poddisruptionbudgets.yaml", size: 426, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _policyV1beta1PodsecuritypoliciesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xb1\x6e\xeb\x30\x0c\x45\x77\x7f\x05\xf7\x87\x58\xf0\x16\x68\x7d\xfd\x80\xa0\x2d\xba\x33\x32\xe1\x10\x91\x44\x42\x94\x8d\xe6\xef\x0b\x2b\x71\x91\xa2\x46\x57\xea\xf2\x9e\x23\x09\x95\x3f\xa8\x18\x4b\xf6\x90\xa8\x62\x8f\xaa\x16\x64\xa4\x3e\x48\x72\xcb\x80\x51\x2f\x38\x74\x57\xce\xa3\x87\x57\x32\x99\x4b\xa0\x17\xb2\x50\x58\xab\x94\x6e\xdd\x19\xb1\xa2\xef\x00\x42\x21\xac\x2c\xf9\x9d\x13\x59\xc5\xa4\x1e\xf2\x1c\x63\x07\x10\xf1\x4c\xd1\xd6\x0c\xc0\xf5\x68\x3d\x8b\x9b\x8a\xcc\xea\x41\x25\x72\xb8\x3d\x1f\xdc\x51\x27\x19\xdf\x28\xcc\x85\xeb\xed\xf4\x2b\x52\x1e\x1e\xeb\xfa\x68\x8f\x58\x6b\x62\xb2\xe7\xe0\xb2\x5d\x6d\x19\xce\x54\x71\xe8\x00\x32\x26\xda\xb0\x87\xc7\xf8\xb0\x57\x63\x4a\x61\x35\xfe\x86\xb5\xe2\x1d\xed\x3f\x7c\x37\xd8\xbe\xa4\x05\x51\xf2\xf0\x3f\xce\x56\xa9\xb4\xd1\x8e\x30\x07\xc9\xed\xe9\x0e\x60\x25\x78\xb8\xd4\xaa\xe6\x9d\x0b\x63\xfe\xf9\x59\xd7\xa3\xb9\x16\x76\x77\x3b\xa7\xa6\xbd\x2d\x53\x2b\xae\xb7\x15\xc5\x09\x27\x72\xb6\x4c\xff\x3e\x53\xfc\x0a\x00\x00\xff\xff\xe4\xbc\x36\xae\xfb\x01\x00\x00")

func policyV1beta1PodsecuritypoliciesYamlBytes() ([]byte, error) {
	return bindataRead(
		_policyV1beta1PodsecuritypoliciesYaml,
		"policy/v1beta1/podsecuritypolicies.yaml",
	)
}

func policyV1beta1PodsecuritypoliciesYaml() (*asset, error) {
	bytes, err := policyV1beta1PodsecuritypoliciesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "policy/v1beta1/podsecuritypolicies.yaml", size: 507, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _policyKubevaultComV1alpha1VaultpoliciesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4f\x6b\xf3\x30\x0c\xc6\xef\xf9\x14\xba\xbf\x24\xa6\xb7\xe2\xf3\x7b\x1e\x63\x8c\xde\x55\x45\xa4\x26\xfe\x23\x2c\x27\xac\xdf\x7e\xd8\x5d\x4b\xc2\x02\xbb\x46\x8f\xf4\xfb\x3d\x31\x8a\xbb\x70\x56\x97\xa2\x85\xc0\x05\x07\x14\x51\x4a\x23\x0f\x94\x82\x59\x4f\xe8\xe5\x86\xa7\x6e\x76\x71\xb4\xf0\xc1\x9a\x96\x4c\xfc\x9f\x95\xb2\x93\x92\x72\x57\x77\x46\x2c\x68\x3b\x00\xca\x8c\xc5\xa5\xf8\xe9\x02\x6b\xc1\x20\x16\xe2\xe2\x7d\x07\xe0\xf1\xca\x5e\x6b\x06\x60\x3e\xeb\xe0\x92\x99\x72\x5a\xc4\x82\x24\xef\xe8\x3e\xcc\xcb\x95\x57\x5c\x7c\xa9\xd8\x6d\xec\x01\xbe\xd4\xd1\x7b\x8b\x6e\x87\xf9\xc7\xc7\x42\xdb\x6d\xb7\x1c\xeb\x36\xb2\x3e\xcb\xbd\xaa\x00\x44\x0c\x7c\x4c\xee\x9f\xa9\x7e\x7f\x50\x85\xa9\xda\xbf\x80\x0d\xf1\x67\x85\x43\xf7\x07\xfd\xb7\xb0\x52\x12\xb6\xf0\x86\x81\x55\x90\x78\x6c\x5f\x8f\xfc\x1d\xa5\xd8\x7e\x66\x0f\x9a\xc9\xc2\xad\x14\x51\x6b\x0c\x8d\x71\xff\x7c\xf3\x59\x4d\x0b\x9b\x23\x47\xb3\x73\x18\x74\x9d\x1a\xb1\xdc\xab\x86\x0b\x38\xb1\xd1\x75\xfa\xf7\x15\xfc\x77\x00\x00\x00\xff\xff\x51\xee\x2d\x87\x25\x02\x00\x00")

func policyKubevaultComV1alpha1VaultpoliciesYamlBytes() ([]byte, error) {
	return bindataRead(
		_policyKubevaultComV1alpha1VaultpoliciesYaml,
		"policy.kubevault.com/v1alpha1/vaultpolicies.yaml",
	)
}

func policyKubevaultComV1alpha1VaultpoliciesYaml() (*asset, error) {
	bytes, err := policyKubevaultComV1alpha1VaultpoliciesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "policy.kubevault.com/v1alpha1/vaultpolicies.yaml", size: 549, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _policyKubevaultComV1alpha1VaultpolicybindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4d\x6b\xc3\x30\x0c\x40\xef\xf9\x15\xba\x8f\xc6\xf4\x56\x7c\x1c\x3b\x8f\x31\x46\xef\xaa\x22\x52\x11\x7f\x08\xcb\x09\xeb\xbf\x1f\x49\xd6\x92\x41\xb6\x5d\x93\x67\xe9\x3d\x1b\x55\xce\x5c\x4c\x72\xf2\x10\xb9\x62\x8b\xaa\x46\xb9\xe3\x96\x72\x74\xd3\x11\x83\x5e\xf1\xd8\x0c\x92\x3a\x0f\xef\x6c\x79\x2c\xc4\x2f\x6c\x54\x44\x6b\x2e\xcd\x7c\xa6\xc3\x8a\xbe\x01\xa0\xc2\x58\x25\xa7\x0f\x89\x6c\x15\xa3\x7a\x48\x63\x08\x0d\x40\xc0\x0b\x07\x9b\x19\x80\xe1\x64\xad\x64\xd7\x97\x3c\xaa\x07\xcd\x41\xe8\xd6\x0e\xe3\x85\x27\x1c\x43\x9d\xd7\x6e\xb1\x75\xf1\x79\xfe\xf5\xb6\xa0\xcf\x92\x3a\x49\xfd\x96\x29\xdf\x5a\x1e\x96\x11\xeb\xc8\xcb\xca\xd9\x16\x9c\xee\xa5\x8f\x2e\x80\x84\x91\xf7\x35\x0e\x77\xea\xb0\x37\xd6\x94\x69\x0e\x7a\x2c\x5f\x16\xfd\x5b\xf5\x57\xce\xaa\xf2\x5b\x83\x51\x56\xf6\xf0\x8a\x91\x4d\x91\xb8\x5b\xbe\xee\x25\x09\xe5\xb4\x5c\xf6\x01\xac\x90\x87\x6b\xad\x6a\xde\x39\xea\xd2\xcf\xe7\x1d\x4e\xe6\x16\xd8\xed\x09\xbb\x1d\x93\xd6\xa6\xd5\xb5\xde\x66\x19\x89\xd8\xb3\xb3\xa9\x7f\xfa\x8c\xe1\x2b\x00\x00\xff\xff\x16\x17\x88\xdc\x4b\x02\x00\x00")

func policyKubevaultComV1alpha1VaultpolicybindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_policyKubevaultComV1alpha1VaultpolicybindingsYaml,
		"policy.kubevault.com/v1alpha1/vaultpolicybindings.yaml",
	)
}

func policyKubevaultComV1alpha1VaultpolicybindingsYaml() (*asset, error) {
	bytes, err := policyKubevaultComV1alpha1VaultpolicybindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "policy.kubevault.com/v1alpha1/vaultpolicybindings.yaml", size: 587, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rbacAuthorizationK8sIoV1ClusterrolebindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6a\xc3\x30\x10\x45\xf7\x3e\xc5\xec\x4b\x2c\xbc\x0b\x5a\xb6\x3d\x41\x28\xdd\x8f\xc7\x83\x23\x22\x69\xc4\x8c\x6c\xda\x9e\xbe\xd8\x6e\x83\x03\x4d\xe8\x56\xbc\xaf\xff\x9f\x84\x25\xbc\xb3\x5a\x90\xec\x21\x71\xc5\x16\x4b\x31\x92\x81\x5b\x92\xe4\xe6\x0e\x63\x39\x63\xd7\x5c\x42\x1e\x3c\x9c\xd8\x64\x52\xe2\x57\x36\xd2\x50\xaa\x68\xb3\x64\x06\xac\xe8\x1b\x00\x52\xc6\x1a\x24\xbf\x85\xc4\x56\x31\x15\x0f\x79\x8a\xb1\x01\x88\xd8\x73\xb4\x85\x01\xb8\x1c\xad\x0d\xe2\x46\x95\xa9\x78\xd0\x1e\xa9\xc5\xa9\x9e\x45\xc3\xd7\x9a\x6e\x37\x60\xcf\x6e\xed\x2f\x71\xb2\xca\x7a\x92\xc8\xcf\x21\x0f\x21\x8f\x7b\x46\x7f\xb6\x79\xa0\x8d\x53\x89\xdc\x6f\x9c\xed\xc1\xf9\x57\x77\xee\x1a\x80\x8c\x89\x1f\xac\x38\xcc\xdd\xe1\xaf\xfb\xac\x30\x2d\x3a\xd7\xd6\xb5\xe1\x7f\x4e\x8f\x64\xb6\x39\xf7\x0c\x8c\xa4\xf0\x35\xbb\x1e\xdd\xda\x04\x92\xbc\x3e\xf3\x01\x4c\xc9\xc3\xb9\xd6\x62\xde\x39\x1a\xf2\xed\xc7\x5e\x8e\xe6\x56\xd8\xdd\x1d\xeb\x48\xfb\xd6\xe6\x6d\x57\xfd\x5c\x8a\x43\xc2\x91\x9d\xcd\xe3\xd3\x47\x8a\xdf\x01\x00\x00\xff\xff\x59\xbd\x86\x0a\x3a\x02\x00\x00")

func rbacAuthorizationK8sIoV1ClusterrolebindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_rbacAuthorizationK8sIoV1ClusterrolebindingsYaml,
		"rbac.authorization.k8s.io/v1/clusterrolebindings.yaml",
	)
}

func rbacAuthorizationK8sIoV1ClusterrolebindingsYaml() (*asset, error) {
	bytes, err := rbacAuthorizationK8sIoV1ClusterrolebindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rbac.authorization.k8s.io/v1/clusterrolebindings.yaml", size: 570, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rbacAuthorizationK8sIoV1ClusterrolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x8e\xa3\x30\x0c\x86\xef\x3c\x85\xef\x2b\x88\xb8\x55\x39\xee\xee\x13\x54\xd5\xde\xdd\x60\xd1\x88\x24\x8e\xec\x80\xb6\xf3\xf4\x23\x42\xa7\xa2\x9a\x76\x34\xd2\x5c\xe1\xf3\xff\x7f\xd8\x60\xf6\xff\x48\xd4\x73\xb2\x10\xa9\x60\x87\x39\xab\xe3\x81\x3a\xc7\xd1\x2c\x3d\x86\x7c\xc1\xbe\x99\x7c\x1a\x2c\x1c\x49\x79\x16\x47\x7f\x49\x9d\xf8\x5c\x58\x9a\x75\x66\xc0\x82\xb6\x01\x70\x42\x58\x3c\xa7\x93\x8f\xa4\x05\x63\xb6\x90\xe6\x10\x1a\x80\x80\x67\x0a\xba\x32\x00\xd3\x41\x3b\xcf\x66\x14\x9e\xb3\x05\x39\xa3\xeb\x70\x2e\x17\x16\xff\x56\xa7\xbb\x0d\xd8\xb3\x5b\xfb\x9f\x30\x6b\x21\x39\x72\xa0\xfd\x4b\xb9\x49\x59\x70\x1b\x20\x1c\x48\xf7\xc4\xf2\xf1\x81\x4b\xdf\x00\x24\x8c\xf4\x45\x6f\xbb\xf4\xed\x43\x90\x66\x72\xab\xf9\xbd\xa7\x46\x7f\x4f\xff\xa9\xf7\x26\xf0\x49\x56\x1d\x67\xba\xd3\xf5\xd1\xa3\xb8\x77\x9c\xea\x0e\x5b\x50\x71\x16\x2e\xa5\x64\xb5\xc6\xb8\x21\x3d\x5e\x6d\x3a\xa8\xa9\xb0\x79\xa9\x67\x5c\xbb\x36\x77\xba\x8c\xb5\xa9\x5c\xd7\x6e\x1f\x71\x24\xa3\xcb\xf8\xeb\x7f\x5c\xcf\x36\xd1\xf5\x84\x32\x52\xb9\x9d\xae\x85\xfd\xef\xf2\x3a\xbc\xea\x3e\x5d\xc0\x6f\x9f\x06\x9f\xc6\x9f\xa4\xed\x63\xde\x03\x00\x00\xff\xff\x19\xbe\x0a\xf9\xbe\x02\x00\x00")

func rbacAuthorizationK8sIoV1ClusterrolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_rbacAuthorizationK8sIoV1ClusterrolesYaml,
		"rbac.authorization.k8s.io/v1/clusterroles.yaml",
	)
}

func rbacAuthorizationK8sIoV1ClusterrolesYaml() (*asset, error) {
	bytes, err := rbacAuthorizationK8sIoV1ClusterrolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rbac.authorization.k8s.io/v1/clusterroles.yaml", size: 702, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rbacAuthorizationK8sIoV1RolebindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x85\x77\x74\x8d\xba\x9d\x32\x22\x66\x06\x84\xd8\xdd\xd4\xea\x59\x97\xc4\x91\x9d\x46\xc0\xd3\xa3\xf6\x0e\x74\x45\x80\x58\x93\xcf\xff\xff\x25\xc6\xc2\x2f\xa4\xc6\x92\x3d\x24\xaa\xd8\x63\x29\x16\x64\xa2\x3e\x48\x72\x6d\xc0\x58\x4e\x38\x74\x67\xce\x93\x87\x27\x32\x59\x34\xd0\x03\x59\x50\x2e\x55\xb4\x5b\x67\x26\xac\xe8\x3b\x80\xa0\x84\x95\x25\x3f\x73\x22\xab\x98\x8a\x87\xbc\xc4\xd8\x01\x44\x1c\x29\xda\xca\x00\x9c\x8f\xd6\xb3\xb8\x59\x65\x29\x1e\x74\xc4\xd0\xe3\x52\x4f\xa2\xfc\xbe\x4d\xf7\x17\xe0\x96\xbd\xb6\x4b\xa4\x7b\xce\x13\xe7\xf9\xf6\x52\xaf\x52\x1e\x54\x22\x8d\x17\xc0\x6e\x89\xf6\xf9\xc0\x36\x74\x00\x19\x13\xfd\xd1\x7b\x68\xc3\x61\x17\x64\x85\xc2\x6a\xfe\xd5\xb3\x45\xff\x4f\xff\x47\xef\xab\xc0\x77\x59\x0b\x52\xc8\xc3\x23\x26\xb2\x82\x81\xa6\xed\x74\xef\xce\x41\xf2\xf6\x8d\x07\x30\x0d\x1e\x4e\xb5\x16\xf3\xce\x85\x29\xef\x17\x77\x3e\x9a\xdb\x60\xf7\xab\xa1\xd3\xb1\xb7\x76\x51\xaa\x6f\x6b\x35\x27\x9c\xc9\x59\x9b\xef\x5e\x53\xfc\x08\x00\x00\xff\xff\x01\xa1\xb6\x98\x19\x02\x00\x00")

func rbacAuthorizationK8sIoV1RolebindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_rbacAuthorizationK8sIoV1RolebindingsYaml,
		"rbac.authorization.k8s.io/v1/rolebindings.yaml",
	)
}

func rbacAuthorizationK8sIoV1RolebindingsYaml() (*asset, error) {
	bytes, err := rbacAuthorizationK8sIoV1RolebindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rbac.authorization.k8s.io/v1/rolebindings.yaml", size: 537, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rbacAuthorizationK8sIoV1RolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6f\x84\x30\x0c\x85\x77\x7e\x85\xf7\x0a\x22\xb6\x53\xc6\xaa\x73\x87\xea\xd4\xdd\x17\x2c\x2e\x22\x89\x23\x3b\xa0\x5e\x7f\x7d\x45\x8e\x9e\x60\xb8\xaa\xab\x79\x7e\xef\x33\x2f\x98\xfd\x27\x89\x7a\x4e\x16\x22\x15\xec\x30\x67\x75\x3c\x50\xe7\x38\x9a\xa5\xc7\x90\xaf\xd8\x37\x93\x4f\x83\x85\x0f\x52\x9e\xc5\xd1\x1b\xa9\x13\x9f\x0b\x4b\xb3\xee\x0c\x58\xd0\x36\x00\x4e\x08\x8b\xe7\x74\xf6\x91\xb4\x60\xcc\x16\xd2\x1c\x42\x03\x10\xf0\x42\x41\x57\x0d\xc0\x74\xd2\xce\xb3\x19\x85\xe7\x6c\x41\x2e\xe8\x3a\x9c\xcb\x95\xc5\x7f\xd7\xed\xee\x2e\xd8\x6b\xb7\x74\x0e\xb4\x9f\xca\x46\x63\x41\x38\x90\xee\x3f\x2d\xbf\x27\x2d\x7d\x03\x90\x30\xd2\x1f\x49\xed\xd2\xb7\x77\x07\xcd\xe4\x56\xc8\x87\x73\xf5\xfc\x1f\xe9\x11\x71\x8b\x7c\x70\xa9\xe3\x4c\x16\xde\x31\x92\x66\x74\x34\xd4\xe9\x11\xd3\x3b\x4e\xf5\x1f\xb5\xa0\xe2\x2c\x5c\x4b\xc9\x6a\x8d\x71\x43\x3a\xb6\x32\x9d\xd4\x54\xb1\x79\xca\x64\xd6\xe8\x4e\x97\xb1\xe6\x94\xdb\x1a\xee\x23\x8e\x64\x74\x19\x5f\xbe\xe2\x5a\xca\x44\xb7\x33\xca\x48\x65\x2b\xa6\x85\xfd\x63\x78\x6e\x5d\x61\x8f\x37\xbf\xfa\x34\xf8\x34\x36\x3f\x01\x00\x00\xff\xff\x54\x00\x90\x09\x4e\x02\x00\x00")

func rbacAuthorizationK8sIoV1RolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_rbacAuthorizationK8sIoV1RolesYaml,
		"rbac.authorization.k8s.io/v1/roles.yaml",
	)
}

func rbacAuthorizationK8sIoV1RolesYaml() (*asset, error) {
	bytes, err := rbacAuthorizationK8sIoV1RolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rbac.authorization.k8s.io/v1/roles.yaml", size: 590, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulingK8sIoV1PriorityclassesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4e\xc3\x30\x0c\x40\xef\xf9\x0a\xff\xc0\x3a\xf5\x86\x72\x1d\x1f\x80\x10\xe2\x6e\x52\x6b\xb3\x96\xc4\x96\x9d\x54\xe2\xef\x51\xd7\x81\x0a\x2a\xbb\xc6\x2f\x7e\xcf\xa8\xfc\x4e\xe6\x2c\x35\x42\xa1\x86\x03\xaa\x7a\x92\x89\x86\x24\xe5\x38\x8f\x98\xf5\x82\x63\xb8\x72\x9d\x22\xbc\x92\x4b\xb7\x44\xcf\xe4\xc9\x58\x9b\x58\x58\xfe\x4c\xd8\x30\x06\x80\x64\x84\x8d\xa5\xbe\x71\x21\x6f\x58\x34\x42\xed\x39\x07\x80\x8c\x1f\x94\x7d\x61\x00\xae\x4f\x3e\xb0\x1c\xcf\x26\x5d\x23\x78\xba\xd0\xd4\x33\xd7\xf3\xb0\x0e\xb6\xcc\x6a\x7d\x31\x16\xe3\xf6\x79\xca\xe8\xbe\x1d\xdb\x3d\x27\x82\xde\x91\xb4\x20\xf4\x0b\x9a\xbf\xaf\x9b\xc7\x00\x50\xb1\xd0\x8e\xf4\x30\x8f\x87\xbf\x3b\x5c\x29\x2d\xc5\x3f\x96\xdb\xd6\xc7\xd9\xff\xf4\xae\xd6\xbd\x48\x4f\xa2\x14\xe1\x94\xbb\x37\xb2\xdb\xd3\x36\xf8\x2b\x00\x00\xff\xff\xa4\xa9\x26\x74\x9e\x01\x00\x00")

func schedulingK8sIoV1PriorityclassesYamlBytes() ([]byte, error) {
	return bindataRead(
		_schedulingK8sIoV1PriorityclassesYaml,
		"scheduling.k8s.io/v1/priorityclasses.yaml",
	)
}

func schedulingK8sIoV1PriorityclassesYaml() (*asset, error) {
	bytes, err := schedulingK8sIoV1PriorityclassesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduling.k8s.io/v1/priorityclasses.yaml", size: 414, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1alpha1RecoveriesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x6e\xeb\x30\x0c\x45\x77\x7f\x05\xf7\x07\x5b\xc8\x16\x68\x7e\x73\x87\xa2\xe8\xce\xd2\x84\x2d\x58\x12\x09\x51\x36\x9a\xbf\x2f\xec\xd4\xa9\xd3\x04\xe8\xaa\x7b\xc5\x73\x28\xa1\x86\x77\x2e\x16\x24\x7b\x48\x5c\xb1\x43\x55\x23\xe9\xb9\x23\x49\x6e\x39\x61\xd4\x11\x4f\xcd\x14\x72\xef\xe1\x95\x4d\xe6\x42\xfc\x9f\x8d\x4a\xd0\x2a\xa5\x59\xef\xf4\x58\xd1\x37\x00\x54\x18\x6b\x90\xfc\x16\x12\x5b\xc5\xa4\x1e\xf2\x1c\x63\x03\x10\xf1\x83\xa3\xad\x1d\x80\xe9\x6c\x5d\x10\x37\x14\x99\xd5\x83\x55\xb4\xf1\x0e\x7a\x2c\xed\x58\x92\x85\xcb\xe5\x98\x94\x6f\x15\x0f\xe5\x9a\x06\xb6\x63\xbe\xec\x4b\xdd\x56\x00\xc8\x98\xf8\x19\xb1\xdd\x3b\xed\x61\x96\x29\xd3\x2a\x7c\x03\x6d\xd3\xff\xb0\x7e\xd4\xbd\x32\x7f\x39\x1a\x89\xb2\x87\x17\x4c\x6c\x8a\xc4\xfd\x76\xfa\x4c\x39\x90\xe4\xed\xdd\x5a\xb0\x42\x1e\xc6\x5a\xd5\xbc\x73\xd4\xe7\xfb\x9f\x9a\xce\xe6\xb6\xb2\x7b\x74\x73\x3f\xf8\xce\x96\x61\x83\xd5\xcb\x6a\x10\x12\x0e\xec\x6c\x19\xfe\x7d\xa6\xf8\x15\x00\x00\xff\xff\x2d\x47\x59\xa0\x0b\x02\x00\x00")

func stashAppscodeComV1alpha1RecoveriesYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1alpha1RecoveriesYaml,
		"stash.appscode.com/v1alpha1/recoveries.yaml",
	)
}

func stashAppscodeComV1alpha1RecoveriesYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1alpha1RecoveriesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1alpha1/recoveries.yaml", size: 523, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1alpha1RepositoriesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x6e\x84\x30\x0c\x86\x77\x9e\xc2\x7b\x75\x44\xb7\x9d\x32\x77\xee\x50\x55\xdd\xdd\x60\x71\xd6\x25\xb1\x15\x07\x54\xde\xbe\x82\x16\x04\x3a\xa4\xae\xf1\x1f\x7f\xdf\x9f\xa0\xf2\x27\x15\x63\xc9\x1e\x12\x55\x6c\x51\xd5\x82\x74\xd4\x06\x49\x6e\xbc\x62\xd4\x3b\x5e\x9b\x07\xe7\xce\xc3\x3b\x99\x0c\x25\xd0\x2b\x59\x28\xac\x55\x4a\x33\xdf\xe9\xb0\xa2\x6f\x00\x42\x21\xac\x2c\xf9\x83\x13\x59\xc5\xa4\x1e\xf2\x10\x63\x03\x10\xf1\x8b\xa2\xcd\x19\x80\xc7\xcd\x5a\x16\xd7\x17\x19\xd4\x83\x55\xb4\xfb\x01\xba\x0f\xad\x58\x15\xe3\x2a\x65\xda\xcf\xca\x9f\x8c\x87\xb2\xce\x99\x6c\x9f\x18\xd7\x62\x5b\x0d\x80\x8c\x89\xce\xa8\x97\x35\x73\x39\x6c\x33\xa5\x30\x6b\x6f\xb0\x65\xff\x3f\xee\x67\xd2\xbf\xdc\x27\x53\x0b\xa2\xe4\xe1\x0d\x13\x99\x62\xa0\x6e\x39\x3d\x13\xe7\x20\x79\x79\xc1\x0b\x58\x09\x1e\xee\xb5\xaa\x79\xe7\x42\x97\x8f\x7f\xf6\xb8\x99\x5b\xc2\xee\xd9\xcf\x6d\x02\x53\x6b\x63\xbf\xc0\xea\x34\x1b\x70\xc2\x9e\x9c\x8d\xfd\xcb\x77\x8a\xcd\x4f\x00\x00\x00\xff\xff\xb0\x36\x6d\x43\x16\x02\x00\x00")

func stashAppscodeComV1alpha1RepositoriesYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1alpha1RepositoriesYaml,
		"stash.appscode.com/v1alpha1/repositories.yaml",
	)
}

func stashAppscodeComV1alpha1RepositoriesYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1alpha1RepositoriesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1alpha1/repositories.yaml", size: 534, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1alpha1ResticsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3d\x4f\xc4\x30\x0c\x86\xf7\xfe\x0a\xef\xa8\x8d\x6e\x3b\x65\x66\x66\x40\x88\xdd\x38\x56\x1b\x35\x1f\x56\x9c\x56\xf0\xef\x51\x73\xb4\xea\xc1\x49\xac\xf6\x9b\xf7\x79\x92\xa0\xf8\x77\x2e\xea\x73\xb2\x10\xb9\xe2\x80\x22\x4a\xd9\xf1\x40\x39\x9a\xf5\x82\x41\x26\xbc\x74\xb3\x4f\xce\xc2\x2b\x6b\x5e\x0a\xf1\x33\x2b\x15\x2f\x35\x97\x6e\x3b\xe3\xb0\xa2\xed\x00\xa8\x30\x56\x9f\xd3\x9b\x8f\xac\x15\xa3\x58\x48\x4b\x08\x1d\x40\xc0\x0f\x0e\xba\x65\x00\xe6\xab\x0e\x3e\x9b\xb1\xe4\x45\x2c\x68\x45\x9d\xee\xa0\xe7\xd0\x81\xad\x9e\xce\xf3\xf2\x23\x62\xa1\xb4\x9d\x9e\x97\xeb\x7e\x9f\xc3\x1e\x20\x61\xe4\x47\xb0\x7e\xcf\xf4\x7b\x91\x0a\xd3\x26\x7a\x20\x5a\xf5\x3f\xb6\xbf\x35\x6f\xb8\xb3\x9b\x52\x16\xb6\xf0\x82\x91\x55\x90\xd8\xb5\xe9\x23\x55\x4f\x39\xb5\xa7\xea\x41\x0b\x59\x98\x6a\x15\xb5\xc6\x90\x4b\xf7\x9f\x33\x5f\xd5\xb4\xb0\xf9\xab\x65\x6e\xec\x41\xd7\xb1\x81\xea\xd7\x46\xf7\x11\x47\x36\xba\x8e\x4f\x9f\x31\x74\xdf\x01\x00\x00\xff\xff\x46\x2e\x6e\xd5\xfb\x01\x00\x00")

func stashAppscodeComV1alpha1ResticsYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1alpha1ResticsYaml,
		"stash.appscode.com/v1alpha1/restics.yaml",
	)
}

func stashAppscodeComV1alpha1ResticsYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1alpha1ResticsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1alpha1/restics.yaml", size: 507, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1beta1BackupbatchesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3d\x6b\xc4\x30\x0c\x40\xf7\xfc\x0a\xed\xe5\x62\xb2\x1d\x1e\x8f\xce\x1d\x4a\xe9\xae\x28\x22\x31\xf1\x87\xb0\x9c\xd0\xfe\xfb\x12\xdf\xb5\x24\x5c\xa0\xab\xfd\xac\xf7\x6c\xa3\xb8\x4f\xce\xea\x52\xb4\x10\xb8\x60\x8b\x22\x4a\x69\xe0\x96\x52\x30\x6b\x87\x5e\x26\xec\x9a\xd9\xc5\xc1\xc2\x3b\x6b\x5a\x32\xf1\x2b\x2b\x65\x27\x25\xe5\x66\x3b\x33\x60\x41\xdb\x00\x50\x66\x2c\x2e\xc5\x0f\x17\x58\x0b\x06\xb1\x10\x17\xef\x1b\x00\x8f\x3d\x7b\xdd\x18\x80\xf9\xaa\xad\x4b\x66\xcc\x69\x11\x0b\x5a\x50\xa7\x83\x74\x0f\xdd\xb5\x37\xa4\x79\x91\x1b\x16\x9a\xf6\x9b\xf9\x51\x63\xa1\xaf\x40\xbf\x01\xac\x7b\x64\xfd\xbd\xda\xda\xf5\x5c\xb0\x6b\x00\x22\x06\x3e\xd3\x5e\x1e\xc8\xe5\x38\x4c\x85\x69\xeb\xfe\x93\xd5\xf1\xff\xc4\x9f\x56\xdf\xc5\xcf\xa9\x4a\x49\xd8\xc2\x1b\x06\x56\x41\xe2\xa1\xae\x9e\x94\x3b\x4a\xb1\xbe\xe1\x05\x34\x93\x85\xa9\x14\x51\x6b\x0c\x0d\xf1\xf8\x6b\xf3\x55\x4d\x85\xcd\x73\xa0\x39\x04\xb4\xba\x8e\x55\x57\xbe\xb7\x06\x17\x70\x64\xa3\xeb\xf8\xf2\x15\xfc\x4f\x00\x00\x00\xff\xff\x45\xcb\xd1\x93\x1a\x02\x00\x00")

func stashAppscodeComV1beta1BackupbatchesYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1beta1BackupbatchesYaml,
		"stash.appscode.com/v1beta1/backupbatches.yaml",
	)
}

func stashAppscodeComV1beta1BackupbatchesYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1beta1BackupbatchesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1beta1/backupbatches.yaml", size: 538, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1beta1BackupblueprintsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcd\x6a\xeb\x30\x10\x46\xf7\x7e\x8a\xd9\x5f\x62\xe1\x5d\xd0\x32\xb7\x4f\x50\x4a\xf7\x63\x79\x70\x84\xf5\x33\x68\x46\xa6\x7d\xfb\x62\x25\x29\x49\xe3\xd2\xad\x39\xd6\x39\x9f\x84\xec\xdf\xa9\x88\xcf\xc9\x42\x24\xc5\x1e\x99\xc5\xe5\x89\x7a\x97\xa3\x59\x07\x0c\x7c\xc6\xa1\x5b\x7c\x9a\x2c\xbc\x92\xe4\x5a\x1c\xbd\x90\xb8\xe2\x59\x73\xe9\xb6\x7f\x26\x54\xb4\x1d\x80\x2b\x84\xea\x73\x7a\xf3\x91\x44\x31\xb2\x85\x54\x43\xe8\x00\x02\x8e\x14\x64\x63\x00\x96\xa3\xf4\x3e\x9b\xb9\xe4\xca\x16\x44\x51\xce\x0f\xd2\x7b\xe8\xa2\x3d\xa1\x5b\x2a\x9f\x42\x25\x2e\x3e\xe9\x3d\x50\xae\x45\x16\xc6\x06\x8d\x37\x48\xee\xa9\xf5\xb6\x70\x1d\x46\x52\x1c\x3a\x80\x84\x91\xf6\xec\x87\x2b\x72\x78\x3a\x4f\x98\xdc\xb6\xe0\x5b\xd9\x0c\x7f\xcc\xf8\xb5\xff\xe2\xdf\x8d\x16\x97\x99\x2c\xfc\x0f\x55\x94\x4a\xfb\xb4\x33\xc0\xbb\x9c\xda\x8d\x1e\x40\x8a\xb3\x70\x56\x65\xb1\xc6\xb8\x29\x3d\xbe\xe1\x72\x14\xd3\x60\xf3\x1c\x69\x7e\x06\xf4\xb2\xce\xcd\xa8\x9f\x5b\x83\x8f\x38\x93\x91\x75\xfe\xf7\x11\xc3\x57\x00\x00\x00\xff\xff\xf6\x70\xc9\xfd\x2b\x02\x00\x00")

func stashAppscodeComV1beta1BackupblueprintsYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1beta1BackupblueprintsYaml,
		"stash.appscode.com/v1beta1/backupblueprints.yaml",
	)
}

func stashAppscodeComV1beta1BackupblueprintsYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1beta1BackupblueprintsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1beta1/backupblueprints.yaml", size: 555, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1beta1BackupconfigurationsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4f\x4f\x84\x30\x10\x47\xef\x7c\x8a\xb9\x9b\xa5\xe1\xb6\xe9\x51\x3d\x7b\x30\xc6\xfb\x30\x8c\xd0\xd0\x3f\x93\x4e\x21\xfa\xed\x0d\xdd\xd5\xb0\x11\xf5\x4a\x1e\xfd\xbd\xd7\xa2\xb8\x57\xce\xea\x52\xb4\x10\xb8\x60\x8b\x22\x4a\x69\xe0\x96\x52\x30\x6b\x87\x5e\x26\xec\x9a\xd9\xc5\xc1\xc2\x33\x6b\x5a\x32\xf1\x23\x2b\x65\x27\x25\xe5\x66\xfb\x67\xc0\x82\xb6\x01\xa0\xcc\x58\x5c\x8a\x2f\x2e\xb0\x16\x0c\x62\x21\x2e\xde\x37\x00\x1e\x7b\xf6\xba\x31\x00\xf3\x59\x5b\x97\xcc\x98\xd3\x22\x16\xb4\xa0\x4e\x37\xa3\x7b\xe8\x32\x7b\x8f\x34\x2f\xf2\x90\xe2\x9b\x1b\x97\x5c\x27\xf6\x50\xbe\x5a\x59\xe8\x2b\x48\x7b\x50\xf7\xe4\xfa\x55\xba\x76\x3d\x17\xec\x1a\x80\x88\x81\x8f\x2c\x4e\x57\xe4\x74\x78\xa6\x0a\xd3\x56\xf3\x3d\x5d\x57\xfe\x49\xfa\xb3\xe5\xe2\xf1\x6b\x80\x52\x12\xb6\xf0\x84\x81\x55\x90\x78\xa8\x5f\x0f\x7a\x1c\xa5\x58\x2f\xfa\x04\x9a\xc9\xc2\x54\x8a\xa8\x35\x86\x86\x78\xfb\xb4\xf3\x59\x4d\x85\xcd\x4f\x5f\x73\xe4\xd1\xea\x3a\xd6\xd5\xf2\xb1\xa9\xb8\x80\x23\x1b\x5d\xc7\xbb\xf7\xe0\x3f\x03\x00\x00\xff\xff\x56\xa5\x8b\xcf\x46\x02\x00\x00")

func stashAppscodeComV1beta1BackupconfigurationsYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1beta1BackupconfigurationsYaml,
		"stash.appscode.com/v1beta1/backupconfigurations.yaml",
	)
}

func stashAppscodeComV1beta1BackupconfigurationsYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1beta1BackupconfigurationsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1beta1/backupconfigurations.yaml", size: 582, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1beta1BackupsessionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbd\x6e\xb5\x30\x0c\x40\x77\x9e\xc2\xfb\xa7\x4b\xc4\x76\x95\xf1\x53\xe7\x0e\x6d\xd5\xdd\xd7\x58\x10\x91\x1f\x2b\x0e\xa8\x7d\xfb\x8a\x70\x5b\x41\x4b\xd5\x15\x4e\x7c\x8e\x13\x14\xf7\xca\x59\x5d\x8a\x16\x02\x17\x6c\x51\x44\x29\xf5\xdc\x52\x0a\x66\xe9\xd0\xcb\x88\x5d\x33\xb9\xd8\x5b\x78\x62\x4d\x73\x26\x7e\x60\xa5\xec\xa4\xa4\xdc\xac\x67\x7a\x2c\x68\x1b\x00\xca\x8c\xc5\xa5\xf8\xe2\x02\x6b\xc1\x20\x16\xe2\xec\x7d\x03\xe0\xf1\xc6\x5e\x57\x06\x60\xba\x6a\xeb\x92\x19\x72\x9a\xc5\x82\x16\xd4\xf1\x20\xdd\x43\x9b\xf6\x3f\xd2\x34\xcb\x33\xeb\x9a\xb9\xff\x9d\xef\x3d\x16\x6e\x15\xd1\x0d\xd1\x3d\xb3\x7c\x6e\xb7\x74\x37\x2e\xd8\x35\x00\x11\x03\x9f\x99\x2f\x77\xe4\xf2\x6d\x9a\x0a\xd3\xda\xfe\xa5\xab\xf3\xff\x58\xe0\x97\xf2\xcd\x7d\x92\xab\x94\x84\x2d\x3c\x62\x60\x15\x24\xee\xeb\xd7\x93\x7a\x47\x29\xd6\xab\xbc\x80\x66\xb2\x30\x96\x22\x6a\x8d\xa1\x3e\x1e\x1f\x6f\xba\xaa\xa9\xb0\xf9\xd9\x68\x8e\x05\xad\x2e\x43\xf5\x95\xf7\x35\xc2\x05\x1c\xd8\xe8\x32\xfc\x7b\x0b\xfe\x23\x00\x00\xff\xff\xc4\x4c\xd9\x9a\x22\x02\x00\x00")

func stashAppscodeComV1beta1BackupsessionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1beta1BackupsessionsYaml,
		"stash.appscode.com/v1beta1/backupsessions.yaml",
	)
}

func stashAppscodeComV1beta1BackupsessionsYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1beta1BackupsessionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1beta1/backupsessions.yaml", size: 546, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1beta1FunctionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4d\x6e\x83\x30\x10\x85\xf7\x9c\x62\xf6\x55\xb0\xd8\x45\xde\xb6\xea\x01\xaa\xaa\xfb\xc9\x30\x05\x0b\xff\xc9\x33\xa0\xf6\xf6\x15\x0e\x4d\x41\x89\xd4\x2d\xef\xf1\xbe\xcf\x36\x66\xf7\xc1\x45\x5c\x8a\x16\x02\x2b\xb6\x98\xb3\x50\xea\xb9\xa5\x14\xcc\xd2\xa1\xcf\x23\x76\xcd\xe4\x62\x6f\xe1\x8d\x25\xcd\x85\xf8\x85\x85\x8a\xcb\x9a\x4a\xb3\xfe\xd3\xa3\xa2\x6d\x00\xa8\x30\xaa\x4b\xf1\xdd\x05\x16\xc5\x90\x2d\xc4\xd9\xfb\x06\xc0\xe3\x85\xbd\xac\x1d\x80\xe9\x2c\xad\x4b\x66\x28\x69\xce\x16\x44\x51\xc6\x03\x74\x5f\xba\x62\x5f\xe7\x48\xeb\xee\x3e\x29\x9b\x8a\x85\xcf\x2d\x95\x7d\xbc\xfc\x9e\x69\xe9\x2e\xac\xd8\x35\x00\x11\x03\x3f\xe2\x9d\xb6\xca\xe9\x6f\x48\x32\xd3\x2a\x7b\x83\xd4\xe9\x7f\x8c\xef\x55\xaf\xc4\xa3\x9f\x50\xca\x6c\xe1\xd9\xcf\xa2\x5c\xea\xa7\x07\xae\x8e\x52\xac\xd7\x75\x02\x29\x64\x61\x54\xcd\x62\x8d\xa1\x3e\x1e\x1f\x68\x3a\x8b\xa9\x65\x73\xaf\x65\x6e\xe4\x56\x96\xa1\xa2\xf4\x7b\x85\xbb\x80\x03\x1b\x59\x86\xa7\xaf\xe0\x7f\x02\x00\x00\xff\xff\x5a\xe1\x05\x3f\x01\x02\x00\x00")

func stashAppscodeComV1beta1FunctionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1beta1FunctionsYaml,
		"stash.appscode.com/v1beta1/functions.yaml",
	)
}

func stashAppscodeComV1beta1FunctionsYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1beta1FunctionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1beta1/functions.yaml", size: 513, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1beta1RestoresessionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x4e\xc3\x30\x10\x40\xf7\x7c\xc5\xed\xa8\xb1\xb2\x55\x9e\x99\x19\x00\xb1\x5f\x9d\x53\x6a\xd5\xf6\x9d\x7c\x97\x08\xfe\x1e\x25\x29\x55\x5a\x82\x58\xed\x67\xbf\x77\x36\x4a\xfc\xa0\xaa\x91\x8b\x87\x4c\x86\x2d\x8a\x68\xe0\x9e\xda\xc0\xd9\x4d\x1d\x26\x39\x63\xd7\x5c\x62\xe9\x3d\xbc\x92\xf2\x58\x03\x3d\x93\x86\x1a\xc5\xb8\x36\xf3\x99\x1e\x0d\x7d\x03\x10\x2a\xa1\x45\x2e\xef\x31\x93\x1a\x66\xf1\x50\xc6\x94\x1a\x80\x84\x27\x4a\x3a\x33\x00\x97\xa3\xb6\x91\xdd\x50\x79\x14\x0f\x6a\xa8\xe7\x3b\xe9\x16\xba\x69\x8d\x2b\xbd\x91\xce\x9d\xdb\xfd\x7a\x0d\xf2\x50\x57\x46\x57\x46\xb7\xd0\xf4\x33\xdf\xd4\x9d\xc8\xb0\x6b\x00\x0a\x66\xda\x73\x1f\xae\xc8\xe1\xf1\x3a\x15\x0a\x73\xfe\x4d\xb8\x08\xfe\x99\xe1\xaf\xf8\xd5\xbe\x57\xac\x81\x85\x3c\xbc\x60\x26\x15\x0c\xd4\x2f\xab\x3b\x03\xc4\xc0\x65\x79\xcf\x03\x68\x0d\x1e\xce\x66\xa2\xde\xb9\xd0\x97\xfb\x1f\xbc\x1c\xd5\x2d\xb0\xfb\x5d\xe9\x1e\x12\x5a\x9d\x86\x45\x68\x5f\x73\x45\xcc\x38\x90\xd3\x69\x78\xfa\xcc\xe9\x3b\x00\x00\xff\xff\x1f\xca\xef\x69\x28\x02\x00\x00")

func stashAppscodeComV1beta1RestoresessionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1beta1RestoresessionsYaml,
		"stash.appscode.com/v1beta1/restoresessions.yaml",
	)
}

func stashAppscodeComV1beta1RestoresessionsYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1beta1RestoresessionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1beta1/restoresessions.yaml", size: 552, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashAppscodeComV1beta1TasksYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4d\x6e\x84\x30\x0c\x85\xf7\x9c\xc2\xfb\x0a\x22\x76\xa3\x6c\xdb\x13\x54\xa3\xee\x3d\xc1\x82\x88\xfc\x58\xb1\x41\xed\xed\x2b\xc2\xb4\x05\x75\xa4\xd9\x3a\x2f\xef\xfb\x12\x23\xfb\x0f\x2a\xe2\x73\xb2\x10\x49\xb1\x43\x66\x71\x79\xa0\xce\xe5\x68\xd6\x1e\x03\x4f\xd8\x37\xb3\x4f\x83\x85\x77\x92\xbc\x14\x47\x6f\x24\xae\x78\xd6\x5c\x9a\xed\xce\x80\x8a\xb6\x01\x70\x85\x50\x7d\x4e\x57\x1f\x49\x14\x23\x5b\x48\x4b\x08\x0d\x40\xc0\x1b\x05\xd9\x32\x00\xf3\x45\x3a\x9f\xcd\x58\xf2\xc2\x16\x44\x51\xa6\x13\xf4\x18\xda\xb1\x57\x94\xf9\x38\x2d\x77\x0d\x0b\x8a\x32\xcb\xf1\x68\xfd\x79\xcb\xda\xdf\x48\xb1\x6f\x00\x12\x46\x7a\xc4\x69\xef\x91\x76\x2f\x11\x26\xb7\x09\xfe\x96\xd7\xda\x27\x96\x67\xbd\x9d\xf4\xe7\x24\x2e\x33\x59\x78\x0d\x8b\x28\x95\x3a\x7a\xe0\xe7\x5d\x4e\xf5\x6b\x5a\x90\xe2\x2c\x4c\xaa\x2c\xd6\x18\x37\xa4\xf3\x32\xe6\x8b\x98\x1a\x36\xff\x75\x4c\xa5\x76\xb2\x8e\x15\xa3\x5f\x1b\xd8\x47\x1c\xc9\xc8\x3a\xbe\x7c\xc6\xf0\x1d\x00\x00\xff\xff\xc6\xc6\x0d\x2b\xe9\x01\x00\x00")

func stashAppscodeComV1beta1TasksYamlBytes() ([]byte, error) {
	return bindataRead(
		_stashAppscodeComV1beta1TasksYaml,
		"stash.appscode.com/v1beta1/tasks.yaml",
	)
}

func stashAppscodeComV1beta1TasksYaml() (*asset, error) {
	bytes, err := stashAppscodeComV1beta1TasksYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash.appscode.com/v1beta1/tasks.yaml", size: 489, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageK8sIoV1StorageclassesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\xf7\xa8\x8d\xba\x1b\x65\x3b\x9c\x00\x10\x7b\xe3\x5a\x9d\xa8\x49\x1c\xc5\x69\x04\xb7\x47\x6d\x61\xd4\x8c\x10\x5b\xfb\xfb\xbf\xd7\x06\x93\x7b\xe7\xac\x4e\xa2\x85\xc0\x05\x07\x4c\x49\x49\x26\x1e\x48\x82\xa9\x23\xfa\x74\xc3\xb1\x5b\x5c\x9c\x2c\xbc\xb0\xca\x9a\x89\x9f\x59\x29\xbb\x54\x24\x77\xdb\xcd\x84\x05\x6d\x07\x40\x99\xb1\x38\x89\x6f\x2e\xb0\x16\x0c\xc9\x42\x5c\xbd\xef\x00\x3c\x7e\xb0\xd7\x2d\x03\xb0\x5c\x74\x70\x62\xe6\x2c\x6b\xb2\xa0\x45\x32\xce\x3c\x1c\xd3\x73\xe0\x40\xbe\x1e\xfb\xab\x47\xd5\xf3\x36\xff\xa8\xdc\x1b\x68\x4b\x70\x93\xa9\xbf\x1f\x56\xc7\x0e\x20\x62\xe0\x47\x5e\x5f\xc7\xfe\xe1\x5e\x13\xd3\x26\x7a\x07\xec\x8d\xff\xd8\xfe\xad\xd9\xd0\xce\x6e\x4a\x92\xd8\xc2\xd5\xaf\x5a\x38\xef\xa3\xd6\xd3\x91\xc4\xfd\x57\xf5\xa0\x99\x2c\xdc\x4a\x49\x6a\x8d\xa1\x29\xb6\x8f\xb3\x5c\xd4\xec\x61\xd3\x6a\x19\xa5\x41\xeb\xbc\x57\x97\xaf\x0d\xe6\x02\xce\x6c\xb4\xce\x4f\x9f\xc1\x7f\x07\x00\x00\xff\xff\xe8\xaa\x20\x91\xf2\x01\x00\x00")

func storageK8sIoV1StorageclassesYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageK8sIoV1StorageclassesYaml,
		"storage.k8s.io/v1/storageclasses.yaml",
	)
}

func storageK8sIoV1StorageclassesYaml() (*asset, error) {
	bytes, err := storageK8sIoV1StorageclassesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "storage.k8s.io/v1/storageclasses.yaml", size: 498, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageK8sIoV1VolumeattachmentsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x4d\x6e\xeb\x30\x0c\x06\xf7\x3a\x05\x2f\x10\x07\xde\x3d\x68\xf7\xd0\x9e\xa0\x28\xb2\x67\x65\x22\x11\x22\x89\x04\x49\xe9\xfc\x85\xed\x36\x30\xfa\xb7\x25\x46\xdf\x8c\x50\xf2\x85\xd4\x32\xb7\x08\x95\x1c\x27\x14\xb1\xc4\x0b\x4d\x89\xeb\x79\xcc\x58\xe4\x86\x73\xb8\xe7\xb6\x44\x78\x21\xe3\xae\x89\x9e\xc9\x92\x66\x71\xd6\xb0\xbe\x59\xd0\x31\x06\x80\xa4\x84\x9e\xb9\xbd\xe6\x4a\xe6\x58\x25\x42\xeb\xa5\x04\x80\x82\x6f\x54\x6c\x65\x00\xee\xff\x6c\xca\x7c\xbe\x2a\x77\x89\x60\xce\x8a\x57\x9a\xf6\xeb\x11\xd8\x95\x17\x2e\xbd\xd2\x7f\x77\x4c\xb7\x4a\xcd\x8f\x84\x7e\xe4\x44\x18\x1b\x85\x0f\xca\x8e\xd8\xf8\xfc\xdf\x98\x03\x40\xc3\x4a\x5f\xb5\xa7\x31\x9f\xbe\x4f\x98\x50\x5a\x93\x1f\x9a\x6d\xf4\x8f\xee\xdf\x83\x77\xe9\xcf\x95\x96\x58\x28\xc2\x53\xe9\xe6\xa4\xdb\xe9\x58\xfc\x1e\x00\x00\xff\xff\xde\x1b\xe3\xbf\xa1\x01\x00\x00")

func storageK8sIoV1VolumeattachmentsYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageK8sIoV1VolumeattachmentsYaml,
		"storage.k8s.io/v1/volumeattachments.yaml",
	)
}

func storageK8sIoV1VolumeattachmentsYaml() (*asset, error) {
	bytes, err := storageK8sIoV1VolumeattachmentsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "storage.k8s.io/v1/volumeattachments.yaml", size: 417, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageK8sIoV1beta1CsidriversYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x17\x88\x03\x6f\x85\xd6\x64\xe9\xda\x16\xdd\x19\x99\x48\x89\x48\x22\x41\xca\x3e\x7f\xe1\xd8\x2d\x84\xb4\xc8\xaa\xff\xf5\xdf\x23\x2a\x7f\x92\x39\x4b\x8d\x50\xa8\xe1\x80\xaa\x9e\x64\xa2\x21\x49\x39\x2e\x23\x66\xfd\xc2\x31\xdc\xb8\x4e\x11\xde\xc8\x65\xb6\x44\x67\xf2\x64\xac\x4d\x2c\xac\x7f\x26\x6c\x18\x03\x40\x32\xc2\xc6\x52\x3f\xb8\x90\x37\x2c\x1a\xa1\xce\x39\x07\x80\x8c\x17\xca\xbe\x76\x00\x6e\x2f\x3e\xb0\x1c\xaf\x26\xb3\x46\xf0\x26\x86\x57\x1a\xb6\xd7\xbe\xb0\x21\x4f\xef\xaf\x67\xe3\x85\xac\x8f\x6c\xf7\x88\x90\x9c\xa7\x7b\xec\x7d\xbe\xfc\x5c\xb4\x8c\x17\x6a\x38\x06\x80\x8a\x85\x1e\x69\x87\x3d\x3e\x74\x2b\xae\x94\x56\xcf\x5f\xc4\x7d\xf7\x89\xec\x3f\x96\x1b\xeb\x41\xcd\x93\x28\x45\x38\xe5\xd9\xdb\xde\xfb\xa3\xf9\x1d\x00\x00\xff\xff\xad\x25\xed\x1d\x8d\x01\x00\x00")

func storageK8sIoV1beta1CsidriversYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageK8sIoV1beta1CsidriversYaml,
		"storage.k8s.io/v1beta1/csidrivers.yaml",
	)
}

func storageK8sIoV1beta1CsidriversYaml() (*asset, error) {
	bytes, err := storageK8sIoV1beta1CsidriversYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "storage.k8s.io/v1beta1/csidrivers.yaml", size: 397, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageK8sIoV1beta1CsinodesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x7f\x20\x0e\xbc\x15\x5a\xd3\xa5\x4b\x87\xb6\xe8\xce\x48\x87\x54\x88\x24\x0a\xa4\xec\xef\x2f\x1c\xa7\x81\x5b\x03\x5d\xef\x8e\x77\x8f\xdc\xd2\x27\xd4\x92\x54\x4f\x05\x9d\x07\x6e\xcd\x82\x44\x0c\x41\xca\x71\x1e\x39\xb7\x2f\x1e\xdd\x35\xd5\xe8\xe9\x0d\x26\x93\x06\x3c\xc3\x82\xa6\xd6\x45\xdd\x72\x13\xb9\xb3\x77\x44\x41\xc1\x3d\x49\xfd\x48\x05\xd6\xb9\x34\x4f\x75\xca\xd9\x11\x65\x3e\x23\xdb\x92\x21\xba\x3e\xd9\x90\xe4\x78\x51\x99\x9a\x27\xeb\xa2\x7c\xc1\xb0\xaa\xdb\xc0\x3a\x79\x7a\x7f\x79\x95\x88\xad\xa1\x77\x0a\x4f\xc1\x52\x95\x08\xdb\xba\xf3\xcf\x37\xf3\x78\x46\xe7\xd1\x11\x55\x2e\xf8\xbb\x74\xb8\xdb\x87\x47\x87\x35\x84\x85\xf0\x51\x7f\x6b\xfd\x07\x73\xc7\xb7\xee\xfc\x82\xb2\x20\x0d\x9e\x4e\x79\xb2\x0e\xbd\x49\x3b\xc0\xef\x00\x00\x00\xff\xff\x41\x3a\x26\x0a\x83\x01\x00\x00")

func storageK8sIoV1beta1CsinodesYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageK8sIoV1beta1CsinodesYaml,
		"storage.k8s.io/v1beta1/csinodes.yaml",
	)
}

func storageK8sIoV1beta1CsinodesYaml() (*asset, error) {
	bytes, err := storageK8sIoV1beta1CsinodesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "storage.k8s.io/v1beta1/csinodes.yaml", size: 387, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _voyagerAppscodeComV1beta1CertificatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbd\x6e\xf3\x30\x0c\x00\x77\x3d\x05\xf7\x0f\xb1\xe0\x2d\xd0\xfa\x75\xee\x50\x14\xdd\x19\x9a\x75\x04\xeb\x0f\x22\x2d\x34\x6f\x5f\xd8\x49\x5b\x1b\x35\xd0\x55\x3a\xf1\x4e\x12\x16\xff\xc6\x55\x7c\x4e\x0e\x22\x2b\x76\x58\x8a\x50\x1e\xb8\xa3\x1c\x6d\xeb\x31\x94\x2b\xf6\x66\xf2\x69\x70\xf0\xc2\x92\xe7\x4a\xfc\xc4\x42\xd5\x17\xcd\xd5\x2c\x67\x06\x54\x74\x06\x80\x2a\xa3\xfa\x9c\x5e\x7d\x64\x51\x8c\xc5\x41\x9a\x43\x30\x00\x01\x2f\x1c\x64\x61\x00\xa6\xb3\x74\x3e\xdb\xb1\xe6\xb9\x38\x68\xf9\x86\x23\xd7\x9d\x76\x8b\xdd\xc5\xff\xb9\xaa\x7f\xf7\x84\xca\xdb\xcd\xfa\xe8\x71\x40\x3f\x80\x6c\x89\xf6\x75\xb7\xd6\x5f\x58\xb1\x37\x00\x09\x23\x1f\x7b\x4f\x0f\xe8\xb4\x9b\x26\x85\x69\x29\xff\x96\xad\xf3\xff\xcc\x3f\xec\xbe\xbb\x7f\xc5\x0a\xe5\xc2\x0e\x9e\x31\xb2\x14\x24\x1e\xd6\xd5\x83\x76\x4f\x39\xad\xcf\x78\x02\xa9\xe4\xe0\xaa\x5a\xc4\x59\x4b\x43\xda\x7f\xdc\x74\x16\xbb\xc2\xf6\xa8\xd0\x6e\x0a\x3a\x69\xe3\xaa\xd3\xdb\xd2\xe0\x23\x8e\x6c\xa5\x8d\xff\x3e\x62\x30\x9f\x01\x00\x00\xff\xff\x61\x12\x7e\xa9\x1e\x02\x00\x00")

func voyagerAppscodeComV1beta1CertificatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_voyagerAppscodeComV1beta1CertificatesYaml,
		"voyager.appscode.com/v1beta1/certificates.yaml",
	)
}

func voyagerAppscodeComV1beta1CertificatesYaml() (*asset, error) {
	bytes, err := voyagerAppscodeComV1beta1CertificatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voyager.appscode.com/v1beta1/certificates.yaml", size: 542, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _voyagerAppscodeComV1beta1IngressesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbb\x4e\xc4\x30\x10\x45\x7b\x7f\xc5\xf4\x28\xb1\xd2\xad\x5c\xd3\xd0\x50\x20\x44\x3f\xeb\x8c\xbc\x56\xfc\x18\x79\x1c\x8b\xfd\x7b\x94\x07\xb0\x11\x91\x68\x7d\xaf\xe7\x1c\x7b\x90\xfd\x07\x15\xf1\x39\x19\x88\x54\xb1\x47\x66\xb1\x79\xa4\xde\xe6\xa8\xdb\x80\x81\x6f\x38\xa8\xc9\xa7\xd1\xc0\x1b\x49\x9e\x8b\xa5\x67\x12\x5b\x3c\xd7\x5c\xd4\x72\x67\xc4\x8a\x46\x01\xd8\x42\x58\x7d\x4e\xef\x3e\x92\x54\x8c\x6c\x20\xcd\x21\x28\x80\x80\x57\x0a\xb2\x74\x00\xa6\x8b\xf4\x3e\x6b\x57\xf2\xcc\x06\x5a\xbe\xa3\xa3\x72\xc0\x3e\xd6\x36\xf0\x4b\x72\x85\x44\x1e\x83\xb2\xbb\x18\xf0\x5b\x48\x87\xb8\x7d\x3f\xaa\x0d\x57\xaa\x38\x28\x80\x84\x91\xce\x81\xdd\x5e\xea\x7e\x47\x09\x93\x5d\x7c\x7f\x30\xeb\xf0\x7f\xa5\xff\xd8\x6e\xd0\xa3\xa2\xd8\xcc\x64\xe0\x15\x23\x09\xa3\xa5\x71\x3d\x3d\x31\xf6\x36\xa7\xf5\xd7\x3a\x90\x62\x0d\xdc\x6a\x65\x31\x5a\xdb\x31\x1d\xf7\x34\x5d\x44\xaf\x65\x7d\xa6\xa6\x77\x7c\x2f\xcd\xad\xa8\x7a\x5f\xf8\x3e\xa2\x23\x2d\xcd\x3d\x7d\xc6\xa0\xbe\x02\x00\x00\xff\xff\x16\xa9\x0a\xfb\x09\x02\x00\x00")

func voyagerAppscodeComV1beta1IngressesYamlBytes() ([]byte, error) {
	return bindataRead(
		_voyagerAppscodeComV1beta1IngressesYaml,
		"voyager.appscode.com/v1beta1/ingresses.yaml",
	)
}

func voyagerAppscodeComV1beta1IngressesYaml() (*asset, error) {
	bytes, err := voyagerAppscodeComV1beta1IngressesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voyager.appscode.com/v1beta1/ingresses.yaml", size: 521, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"acme.cert-manager.io/v1alpha2/challenges.yaml":                             acmeCertManagerIoV1alpha2ChallengesYaml,
	"acme.cert-manager.io/v1alpha2/orders.yaml":                                 acmeCertManagerIoV1alpha2OrdersYaml,
	"admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations.yaml":   admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml,
	"admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations.yaml": admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml,
	"apiextensions.k8s.io/v1beta1/customresourcedefinitions.yaml":               apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml,
	"apiregistration.k8s.io/v1/apiservices.yaml":                                apiregistrationK8sIoV1ApiservicesYaml,
	"appcatalog.appscode.com/v1alpha1/appbindings.yaml":                         appcatalogAppscodeComV1alpha1AppbindingsYaml,
	"apps/v1/controllerrevisions.yaml":                                          appsV1ControllerrevisionsYaml,
	"apps/v1/daemonsets.yaml":                                                   appsV1DaemonsetsYaml,
	"apps/v1/deployments.yaml":                                                  appsV1DeploymentsYaml,
	"apps/v1/replicasets.yaml":                                                  appsV1ReplicasetsYaml,
	"apps/v1/statefulsets.yaml":                                                 appsV1StatefulsetsYaml,
	"authentication.k8s.io/v1/tokenreviews.yaml":                                authenticationK8sIoV1TokenreviewsYaml,
	"authorization.k8s.io/v1/localsubjectaccessreviews.yaml":                    authorizationK8sIoV1LocalsubjectaccessreviewsYaml,
	"authorization.k8s.io/v1/selfsubjectaccessreviews.yaml":                     authorizationK8sIoV1SelfsubjectaccessreviewsYaml,
	"authorization.k8s.io/v1/selfsubjectrulesreviews.yaml":                      authorizationK8sIoV1SelfsubjectrulesreviewsYaml,
	"authorization.k8s.io/v1/subjectaccessreviews.yaml":                         authorizationK8sIoV1SubjectaccessreviewsYaml,
	"autoscaling/v1/horizontalpodautoscalers.yaml":                              autoscalingV1HorizontalpodautoscalersYaml,
	"autoscaling/v2beta2/horizontalpodautoscalers.yaml":                         autoscalingV2beta2HorizontalpodautoscalersYaml,
	"batch/v1/jobs.yaml":                                                        batchV1JobsYaml,
	"batch/v1beta1/cronjobs.yaml":                                               batchV1beta1CronjobsYaml,
	"catalog.kubedb.com/v1alpha1/elasticsearchversions.yaml":                    catalogKubedbComV1alpha1ElasticsearchversionsYaml,
	"catalog.kubedb.com/v1alpha1/etcdversions.yaml":                             catalogKubedbComV1alpha1EtcdversionsYaml,
	"catalog.kubedb.com/v1alpha1/memcachedversions.yaml":                        catalogKubedbComV1alpha1MemcachedversionsYaml,
	"catalog.kubedb.com/v1alpha1/mongodbversions.yaml":                          catalogKubedbComV1alpha1MongodbversionsYaml,
	"catalog.kubedb.com/v1alpha1/mysqlversions.yaml":                            catalogKubedbComV1alpha1MysqlversionsYaml,
	"catalog.kubedb.com/v1alpha1/perconaxtradbversions.yaml":                    catalogKubedbComV1alpha1PerconaxtradbversionsYaml,
	"catalog.kubedb.com/v1alpha1/pgbouncerversions.yaml":                        catalogKubedbComV1alpha1PgbouncerversionsYaml,
	"catalog.kubedb.com/v1alpha1/postgresversions.yaml":                         catalogKubedbComV1alpha1PostgresversionsYaml,
	"catalog.kubedb.com/v1alpha1/proxysqlversions.yaml":                         catalogKubedbComV1alpha1ProxysqlversionsYaml,
	"catalog.kubedb.com/v1alpha1/redisversions.yaml":                            catalogKubedbComV1alpha1RedisversionsYaml,
	"catalog.kubevault.com/v1alpha1/vaultserverversions.yaml":                   catalogKubevaultComV1alpha1VaultserverversionsYaml,
	"cert-manager.io/v1alpha2/certificaterequests.yaml":                         certManagerIoV1alpha2CertificaterequestsYaml,
	"cert-manager.io/v1alpha2/certificates.yaml":                                certManagerIoV1alpha2CertificatesYaml,
	"cert-manager.io/v1alpha2/clusterissuers.yaml":                              certManagerIoV1alpha2ClusterissuersYaml,
	"cert-manager.io/v1alpha2/issuers.yaml":                                     certManagerIoV1alpha2IssuersYaml,
	"certificates.k8s.io/v1beta1/certificatesigningrequests.yaml":               certificatesK8sIoV1beta1CertificatesigningrequestsYaml,
	"cluster.k8s.io/v1alpha1/machines.yaml":                                     clusterK8sIoV1alpha1MachinesYaml,
	"cluster.k8s.io/v1alpha1/machinesets.yaml":                                  clusterK8sIoV1alpha1MachinesetsYaml,
	"coordination.k8s.io/v1/leases.yaml":                                        coordinationK8sIoV1LeasesYaml,
	"core/v1/bindings.yaml":                                                     coreV1BindingsYaml,
	"core/v1/componentstatuses.yaml":                                            coreV1ComponentstatusesYaml,
	"core/v1/configmaps.yaml":                                                   coreV1ConfigmapsYaml,
	"core/v1/endpoints.yaml":                                                    coreV1EndpointsYaml,
	"core/v1/events.yaml":                                                       coreV1EventsYaml,
	"core/v1/limitranges.yaml":                                                  coreV1LimitrangesYaml,
	"core/v1/namespaces.yaml":                                                   coreV1NamespacesYaml,
	"core/v1/nodes.yaml":                                                        coreV1NodesYaml,
	"core/v1/persistentvolumeclaims.yaml":                                       coreV1PersistentvolumeclaimsYaml,
	"core/v1/persistentvolumes.yaml":                                            coreV1PersistentvolumesYaml,
	"core/v1/pods.yaml":                                                         coreV1PodsYaml,
	"core/v1/replicationcontrollers.yaml":                                       coreV1ReplicationcontrollersYaml,
	"core/v1/resourcequotas.yaml":                                               coreV1ResourcequotasYaml,
	"core/v1/secrets.yaml":                                                      coreV1SecretsYaml,
	"core/v1/serviceaccounts.yaml":                                              coreV1ServiceaccountsYaml,
	"core/v1/services.yaml":                                                     coreV1ServicesYaml,
	"engine.kubevault.com/v1alpha1/awsaccesskeyrequests.yaml":                   engineKubevaultComV1alpha1AwsaccesskeyrequestsYaml,
	"engine.kubevault.com/v1alpha1/awsroles.yaml":                               engineKubevaultComV1alpha1AwsrolesYaml,
	"engine.kubevault.com/v1alpha1/azureaccesskeyrequests.yaml":                 engineKubevaultComV1alpha1AzureaccesskeyrequestsYaml,
	"engine.kubevault.com/v1alpha1/azureroles.yaml":                             engineKubevaultComV1alpha1AzurerolesYaml,
	"engine.kubevault.com/v1alpha1/databaseaccessrequests.yaml":                 engineKubevaultComV1alpha1DatabaseaccessrequestsYaml,
	"engine.kubevault.com/v1alpha1/gcpaccesskeyrequests.yaml":                   engineKubevaultComV1alpha1GcpaccesskeyrequestsYaml,
	"engine.kubevault.com/v1alpha1/gcproles.yaml":                               engineKubevaultComV1alpha1GcprolesYaml,
	"engine.kubevault.com/v1alpha1/mongodbroles.yaml":                           engineKubevaultComV1alpha1MongodbrolesYaml,
	"engine.kubevault.com/v1alpha1/mysqlroles.yaml":                             engineKubevaultComV1alpha1MysqlrolesYaml,
	"engine.kubevault.com/v1alpha1/postgresroles.yaml":                          engineKubevaultComV1alpha1PostgresrolesYaml,
	"engine.kubevault.com/v1alpha1/secretengines.yaml":                          engineKubevaultComV1alpha1SecretenginesYaml,
	"events.k8s.io/v1beta1/events.yaml":                                         eventsK8sIoV1beta1EventsYaml,
	"extensions/v1beta1/ingresses.yaml":                                         extensionsV1beta1IngressesYaml,
	"extensions/v1beta1/networkpolicies.yaml":                                   extensionsV1beta1NetworkpoliciesYaml,
	"extensions/v1beta1/podsecuritypolicies.yaml":                               extensionsV1beta1PodsecuritypoliciesYaml,
	"kubedb.com/v1alpha1/dormantdatabases.yaml":                                 kubedbComV1alpha1DormantdatabasesYaml,
	"kubedb.com/v1alpha1/elasticsearches.yaml":                                  kubedbComV1alpha1ElasticsearchesYaml,
	"kubedb.com/v1alpha1/etcds.yaml":                                            kubedbComV1alpha1EtcdsYaml,
	"kubedb.com/v1alpha1/mariadbs.yaml":                                         kubedbComV1alpha1MariadbsYaml,
	"kubedb.com/v1alpha1/memcacheds.yaml":                                       kubedbComV1alpha1MemcachedsYaml,
	"kubedb.com/v1alpha1/mongodbs.yaml":                                         kubedbComV1alpha1MongodbsYaml,
	"kubedb.com/v1alpha1/mysqls.yaml":                                           kubedbComV1alpha1MysqlsYaml,
	"kubedb.com/v1alpha1/perconaxtradbs.yaml":                                   kubedbComV1alpha1PerconaxtradbsYaml,
	"kubedb.com/v1alpha1/pgbouncers.yaml":                                       kubedbComV1alpha1PgbouncersYaml,
	"kubedb.com/v1alpha1/postgreses.yaml":                                       kubedbComV1alpha1PostgresesYaml,
	"kubedb.com/v1alpha1/proxysqls.yaml":                                        kubedbComV1alpha1ProxysqlsYaml,
	"kubedb.com/v1alpha1/redises.yaml":                                          kubedbComV1alpha1RedisesYaml,
	"kubedb.com/v1alpha1/snapshots.yaml":                                        kubedbComV1alpha1SnapshotsYaml,
	"kubevault.com/v1alpha1/vaultservers.yaml":                                  kubevaultComV1alpha1VaultserversYaml,
	"meta.appscode.com/v1alpha1/resourcedescriptors.yaml":                       metaAppscodeComV1alpha1ResourcedescriptorsYaml,
	"monitoring.coreos.com/v1/alertmanagers.yaml":                               monitoringCoreosComV1AlertmanagersYaml,
	"monitoring.coreos.com/v1/podmonitors.yaml":                                 monitoringCoreosComV1PodmonitorsYaml,
	"monitoring.coreos.com/v1/prometheuses.yaml":                                monitoringCoreosComV1PrometheusesYaml,
	"monitoring.coreos.com/v1/prometheusrules.yaml":                             monitoringCoreosComV1PrometheusrulesYaml,
	"monitoring.coreos.com/v1/servicemonitors.yaml":                             monitoringCoreosComV1ServicemonitorsYaml,
	"networking.k8s.io/v1/networkpolicies.yaml":                                 networkingK8sIoV1NetworkpoliciesYaml,
	"networking.k8s.io/v1beta1/ingresses.yaml":                                  networkingK8sIoV1beta1IngressesYaml,
	"node.k8s.io/v1beta1/runtimeclasses.yaml":                                   nodeK8sIoV1beta1RuntimeclassesYaml,
	"policy/v1beta1/poddisruptionbudgets.yaml":                                  policyV1beta1PoddisruptionbudgetsYaml,
	"policy/v1beta1/podsecuritypolicies.yaml":                                   policyV1beta1PodsecuritypoliciesYaml,
	"policy.kubevault.com/v1alpha1/vaultpolicies.yaml":                          policyKubevaultComV1alpha1VaultpoliciesYaml,
	"policy.kubevault.com/v1alpha1/vaultpolicybindings.yaml":                    policyKubevaultComV1alpha1VaultpolicybindingsYaml,
	"rbac.authorization.k8s.io/v1/clusterrolebindings.yaml":                     rbacAuthorizationK8sIoV1ClusterrolebindingsYaml,
	"rbac.authorization.k8s.io/v1/clusterroles.yaml":                            rbacAuthorizationK8sIoV1ClusterrolesYaml,
	"rbac.authorization.k8s.io/v1/rolebindings.yaml":                            rbacAuthorizationK8sIoV1RolebindingsYaml,
	"rbac.authorization.k8s.io/v1/roles.yaml":                                   rbacAuthorizationK8sIoV1RolesYaml,
	"scheduling.k8s.io/v1/priorityclasses.yaml":                                 schedulingK8sIoV1PriorityclassesYaml,
	"stash.appscode.com/v1alpha1/recoveries.yaml":                               stashAppscodeComV1alpha1RecoveriesYaml,
	"stash.appscode.com/v1alpha1/repositories.yaml":                             stashAppscodeComV1alpha1RepositoriesYaml,
	"stash.appscode.com/v1alpha1/restics.yaml":                                  stashAppscodeComV1alpha1ResticsYaml,
	"stash.appscode.com/v1beta1/backupbatches.yaml":                             stashAppscodeComV1beta1BackupbatchesYaml,
	"stash.appscode.com/v1beta1/backupblueprints.yaml":                          stashAppscodeComV1beta1BackupblueprintsYaml,
	"stash.appscode.com/v1beta1/backupconfigurations.yaml":                      stashAppscodeComV1beta1BackupconfigurationsYaml,
	"stash.appscode.com/v1beta1/backupsessions.yaml":                            stashAppscodeComV1beta1BackupsessionsYaml,
	"stash.appscode.com/v1beta1/functions.yaml":                                 stashAppscodeComV1beta1FunctionsYaml,
	"stash.appscode.com/v1beta1/restoresessions.yaml":                           stashAppscodeComV1beta1RestoresessionsYaml,
	"stash.appscode.com/v1beta1/tasks.yaml":                                     stashAppscodeComV1beta1TasksYaml,
	"storage.k8s.io/v1/storageclasses.yaml":                                     storageK8sIoV1StorageclassesYaml,
	"storage.k8s.io/v1/volumeattachments.yaml":                                  storageK8sIoV1VolumeattachmentsYaml,
	"storage.k8s.io/v1beta1/csidrivers.yaml":                                    storageK8sIoV1beta1CsidriversYaml,
	"storage.k8s.io/v1beta1/csinodes.yaml":                                      storageK8sIoV1beta1CsinodesYaml,
	"voyager.appscode.com/v1beta1/certificates.yaml":                            voyagerAppscodeComV1beta1CertificatesYaml,
	"voyager.appscode.com/v1beta1/ingresses.yaml":                               voyagerAppscodeComV1beta1IngressesYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"acme.cert-manager.io": &bintree{nil, map[string]*bintree{
		"v1alpha2": &bintree{nil, map[string]*bintree{
			"challenges.yaml": &bintree{acmeCertManagerIoV1alpha2ChallengesYaml, map[string]*bintree{}},
			"orders.yaml":     &bintree{acmeCertManagerIoV1alpha2OrdersYaml, map[string]*bintree{}},
		}},
	}},
	"admissionregistration.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"mutatingwebhookconfigurations.yaml":   &bintree{admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml, map[string]*bintree{}},
			"validatingwebhookconfigurations.yaml": &bintree{admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml, map[string]*bintree{}},
		}},
	}},
	"apiextensions.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"customresourcedefinitions.yaml": &bintree{apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml, map[string]*bintree{}},
		}},
	}},
	"apiregistration.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"apiservices.yaml": &bintree{apiregistrationK8sIoV1ApiservicesYaml, map[string]*bintree{}},
		}},
	}},
	"appcatalog.appscode.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"appbindings.yaml": &bintree{appcatalogAppscodeComV1alpha1AppbindingsYaml, map[string]*bintree{}},
		}},
	}},
	"apps": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"controllerrevisions.yaml": &bintree{appsV1ControllerrevisionsYaml, map[string]*bintree{}},
			"daemonsets.yaml":          &bintree{appsV1DaemonsetsYaml, map[string]*bintree{}},
			"deployments.yaml":         &bintree{appsV1DeploymentsYaml, map[string]*bintree{}},
			"replicasets.yaml":         &bintree{appsV1ReplicasetsYaml, map[string]*bintree{}},
			"statefulsets.yaml":        &bintree{appsV1StatefulsetsYaml, map[string]*bintree{}},
		}},
	}},
	"authentication.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"tokenreviews.yaml": &bintree{authenticationK8sIoV1TokenreviewsYaml, map[string]*bintree{}},
		}},
	}},
	"authorization.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"localsubjectaccessreviews.yaml": &bintree{authorizationK8sIoV1LocalsubjectaccessreviewsYaml, map[string]*bintree{}},
			"selfsubjectaccessreviews.yaml":  &bintree{authorizationK8sIoV1SelfsubjectaccessreviewsYaml, map[string]*bintree{}},
			"selfsubjectrulesreviews.yaml":   &bintree{authorizationK8sIoV1SelfsubjectrulesreviewsYaml, map[string]*bintree{}},
			"subjectaccessreviews.yaml":      &bintree{authorizationK8sIoV1SubjectaccessreviewsYaml, map[string]*bintree{}},
		}},
	}},
	"autoscaling": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"horizontalpodautoscalers.yaml": &bintree{autoscalingV1HorizontalpodautoscalersYaml, map[string]*bintree{}},
		}},
		"v2beta2": &bintree{nil, map[string]*bintree{
			"horizontalpodautoscalers.yaml": &bintree{autoscalingV2beta2HorizontalpodautoscalersYaml, map[string]*bintree{}},
		}},
	}},
	"batch": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"jobs.yaml": &bintree{batchV1JobsYaml, map[string]*bintree{}},
		}},
		"v1beta1": &bintree{nil, map[string]*bintree{
			"cronjobs.yaml": &bintree{batchV1beta1CronjobsYaml, map[string]*bintree{}},
		}},
	}},
	"catalog.kubedb.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"elasticsearchversions.yaml": &bintree{catalogKubedbComV1alpha1ElasticsearchversionsYaml, map[string]*bintree{}},
			"etcdversions.yaml":          &bintree{catalogKubedbComV1alpha1EtcdversionsYaml, map[string]*bintree{}},
			"memcachedversions.yaml":     &bintree{catalogKubedbComV1alpha1MemcachedversionsYaml, map[string]*bintree{}},
			"mongodbversions.yaml":       &bintree{catalogKubedbComV1alpha1MongodbversionsYaml, map[string]*bintree{}},
			"mysqlversions.yaml":         &bintree{catalogKubedbComV1alpha1MysqlversionsYaml, map[string]*bintree{}},
			"perconaxtradbversions.yaml": &bintree{catalogKubedbComV1alpha1PerconaxtradbversionsYaml, map[string]*bintree{}},
			"pgbouncerversions.yaml":     &bintree{catalogKubedbComV1alpha1PgbouncerversionsYaml, map[string]*bintree{}},
			"postgresversions.yaml":      &bintree{catalogKubedbComV1alpha1PostgresversionsYaml, map[string]*bintree{}},
			"proxysqlversions.yaml":      &bintree{catalogKubedbComV1alpha1ProxysqlversionsYaml, map[string]*bintree{}},
			"redisversions.yaml":         &bintree{catalogKubedbComV1alpha1RedisversionsYaml, map[string]*bintree{}},
		}},
	}},
	"catalog.kubevault.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"vaultserverversions.yaml": &bintree{catalogKubevaultComV1alpha1VaultserverversionsYaml, map[string]*bintree{}},
		}},
	}},
	"cert-manager.io": &bintree{nil, map[string]*bintree{
		"v1alpha2": &bintree{nil, map[string]*bintree{
			"certificaterequests.yaml": &bintree{certManagerIoV1alpha2CertificaterequestsYaml, map[string]*bintree{}},
			"certificates.yaml":        &bintree{certManagerIoV1alpha2CertificatesYaml, map[string]*bintree{}},
			"clusterissuers.yaml":      &bintree{certManagerIoV1alpha2ClusterissuersYaml, map[string]*bintree{}},
			"issuers.yaml":             &bintree{certManagerIoV1alpha2IssuersYaml, map[string]*bintree{}},
		}},
	}},
	"certificates.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"certificatesigningrequests.yaml": &bintree{certificatesK8sIoV1beta1CertificatesigningrequestsYaml, map[string]*bintree{}},
		}},
	}},
	"cluster.k8s.io": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"machines.yaml":    &bintree{clusterK8sIoV1alpha1MachinesYaml, map[string]*bintree{}},
			"machinesets.yaml": &bintree{clusterK8sIoV1alpha1MachinesetsYaml, map[string]*bintree{}},
		}},
	}},
	"coordination.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"leases.yaml": &bintree{coordinationK8sIoV1LeasesYaml, map[string]*bintree{}},
		}},
	}},
	"core": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"bindings.yaml":               &bintree{coreV1BindingsYaml, map[string]*bintree{}},
			"componentstatuses.yaml":      &bintree{coreV1ComponentstatusesYaml, map[string]*bintree{}},
			"configmaps.yaml":             &bintree{coreV1ConfigmapsYaml, map[string]*bintree{}},
			"endpoints.yaml":              &bintree{coreV1EndpointsYaml, map[string]*bintree{}},
			"events.yaml":                 &bintree{coreV1EventsYaml, map[string]*bintree{}},
			"limitranges.yaml":            &bintree{coreV1LimitrangesYaml, map[string]*bintree{}},
			"namespaces.yaml":             &bintree{coreV1NamespacesYaml, map[string]*bintree{}},
			"nodes.yaml":                  &bintree{coreV1NodesYaml, map[string]*bintree{}},
			"persistentvolumeclaims.yaml": &bintree{coreV1PersistentvolumeclaimsYaml, map[string]*bintree{}},
			"persistentvolumes.yaml":      &bintree{coreV1PersistentvolumesYaml, map[string]*bintree{}},
			"pods.yaml":                   &bintree{coreV1PodsYaml, map[string]*bintree{}},
			"replicationcontrollers.yaml": &bintree{coreV1ReplicationcontrollersYaml, map[string]*bintree{}},
			"resourcequotas.yaml":         &bintree{coreV1ResourcequotasYaml, map[string]*bintree{}},
			"secrets.yaml":                &bintree{coreV1SecretsYaml, map[string]*bintree{}},
			"serviceaccounts.yaml":        &bintree{coreV1ServiceaccountsYaml, map[string]*bintree{}},
			"services.yaml":               &bintree{coreV1ServicesYaml, map[string]*bintree{}},
		}},
	}},
	"engine.kubevault.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"awsaccesskeyrequests.yaml":   &bintree{engineKubevaultComV1alpha1AwsaccesskeyrequestsYaml, map[string]*bintree{}},
			"awsroles.yaml":               &bintree{engineKubevaultComV1alpha1AwsrolesYaml, map[string]*bintree{}},
			"azureaccesskeyrequests.yaml": &bintree{engineKubevaultComV1alpha1AzureaccesskeyrequestsYaml, map[string]*bintree{}},
			"azureroles.yaml":             &bintree{engineKubevaultComV1alpha1AzurerolesYaml, map[string]*bintree{}},
			"databaseaccessrequests.yaml": &bintree{engineKubevaultComV1alpha1DatabaseaccessrequestsYaml, map[string]*bintree{}},
			"gcpaccesskeyrequests.yaml":   &bintree{engineKubevaultComV1alpha1GcpaccesskeyrequestsYaml, map[string]*bintree{}},
			"gcproles.yaml":               &bintree{engineKubevaultComV1alpha1GcprolesYaml, map[string]*bintree{}},
			"mongodbroles.yaml":           &bintree{engineKubevaultComV1alpha1MongodbrolesYaml, map[string]*bintree{}},
			"mysqlroles.yaml":             &bintree{engineKubevaultComV1alpha1MysqlrolesYaml, map[string]*bintree{}},
			"postgresroles.yaml":          &bintree{engineKubevaultComV1alpha1PostgresrolesYaml, map[string]*bintree{}},
			"secretengines.yaml":          &bintree{engineKubevaultComV1alpha1SecretenginesYaml, map[string]*bintree{}},
		}},
	}},
	"events.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"events.yaml": &bintree{eventsK8sIoV1beta1EventsYaml, map[string]*bintree{}},
		}},
	}},
	"extensions": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"ingresses.yaml":           &bintree{extensionsV1beta1IngressesYaml, map[string]*bintree{}},
			"networkpolicies.yaml":     &bintree{extensionsV1beta1NetworkpoliciesYaml, map[string]*bintree{}},
			"podsecuritypolicies.yaml": &bintree{extensionsV1beta1PodsecuritypoliciesYaml, map[string]*bintree{}},
		}},
	}},
	"kubedb.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"dormantdatabases.yaml": &bintree{kubedbComV1alpha1DormantdatabasesYaml, map[string]*bintree{}},
			"elasticsearches.yaml":  &bintree{kubedbComV1alpha1ElasticsearchesYaml, map[string]*bintree{}},
			"etcds.yaml":            &bintree{kubedbComV1alpha1EtcdsYaml, map[string]*bintree{}},
			"mariadbs.yaml":         &bintree{kubedbComV1alpha1MariadbsYaml, map[string]*bintree{}},
			"memcacheds.yaml":       &bintree{kubedbComV1alpha1MemcachedsYaml, map[string]*bintree{}},
			"mongodbs.yaml":         &bintree{kubedbComV1alpha1MongodbsYaml, map[string]*bintree{}},
			"mysqls.yaml":           &bintree{kubedbComV1alpha1MysqlsYaml, map[string]*bintree{}},
			"perconaxtradbs.yaml":   &bintree{kubedbComV1alpha1PerconaxtradbsYaml, map[string]*bintree{}},
			"pgbouncers.yaml":       &bintree{kubedbComV1alpha1PgbouncersYaml, map[string]*bintree{}},
			"postgreses.yaml":       &bintree{kubedbComV1alpha1PostgresesYaml, map[string]*bintree{}},
			"proxysqls.yaml":        &bintree{kubedbComV1alpha1ProxysqlsYaml, map[string]*bintree{}},
			"redises.yaml":          &bintree{kubedbComV1alpha1RedisesYaml, map[string]*bintree{}},
			"snapshots.yaml":        &bintree{kubedbComV1alpha1SnapshotsYaml, map[string]*bintree{}},
		}},
	}},
	"kubevault.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"vaultservers.yaml": &bintree{kubevaultComV1alpha1VaultserversYaml, map[string]*bintree{}},
		}},
	}},
	"meta.appscode.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"resourcedescriptors.yaml": &bintree{metaAppscodeComV1alpha1ResourcedescriptorsYaml, map[string]*bintree{}},
		}},
	}},
	"monitoring.coreos.com": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"alertmanagers.yaml":   &bintree{monitoringCoreosComV1AlertmanagersYaml, map[string]*bintree{}},
			"podmonitors.yaml":     &bintree{monitoringCoreosComV1PodmonitorsYaml, map[string]*bintree{}},
			"prometheuses.yaml":    &bintree{monitoringCoreosComV1PrometheusesYaml, map[string]*bintree{}},
			"prometheusrules.yaml": &bintree{monitoringCoreosComV1PrometheusrulesYaml, map[string]*bintree{}},
			"servicemonitors.yaml": &bintree{monitoringCoreosComV1ServicemonitorsYaml, map[string]*bintree{}},
		}},
	}},
	"networking.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"networkpolicies.yaml": &bintree{networkingK8sIoV1NetworkpoliciesYaml, map[string]*bintree{}},
		}},
		"v1beta1": &bintree{nil, map[string]*bintree{
			"ingresses.yaml": &bintree{networkingK8sIoV1beta1IngressesYaml, map[string]*bintree{}},
		}},
	}},
	"node.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"runtimeclasses.yaml": &bintree{nodeK8sIoV1beta1RuntimeclassesYaml, map[string]*bintree{}},
		}},
	}},
	"policy": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"poddisruptionbudgets.yaml": &bintree{policyV1beta1PoddisruptionbudgetsYaml, map[string]*bintree{}},
			"podsecuritypolicies.yaml":  &bintree{policyV1beta1PodsecuritypoliciesYaml, map[string]*bintree{}},
		}},
	}},
	"policy.kubevault.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"vaultpolicies.yaml":       &bintree{policyKubevaultComV1alpha1VaultpoliciesYaml, map[string]*bintree{}},
			"vaultpolicybindings.yaml": &bintree{policyKubevaultComV1alpha1VaultpolicybindingsYaml, map[string]*bintree{}},
		}},
	}},
	"rbac.authorization.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"clusterrolebindings.yaml": &bintree{rbacAuthorizationK8sIoV1ClusterrolebindingsYaml, map[string]*bintree{}},
			"clusterroles.yaml":        &bintree{rbacAuthorizationK8sIoV1ClusterrolesYaml, map[string]*bintree{}},
			"rolebindings.yaml":        &bintree{rbacAuthorizationK8sIoV1RolebindingsYaml, map[string]*bintree{}},
			"roles.yaml":               &bintree{rbacAuthorizationK8sIoV1RolesYaml, map[string]*bintree{}},
		}},
	}},
	"scheduling.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"priorityclasses.yaml": &bintree{schedulingK8sIoV1PriorityclassesYaml, map[string]*bintree{}},
		}},
	}},
	"stash.appscode.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"recoveries.yaml":   &bintree{stashAppscodeComV1alpha1RecoveriesYaml, map[string]*bintree{}},
			"repositories.yaml": &bintree{stashAppscodeComV1alpha1RepositoriesYaml, map[string]*bintree{}},
			"restics.yaml":      &bintree{stashAppscodeComV1alpha1ResticsYaml, map[string]*bintree{}},
		}},
		"v1beta1": &bintree{nil, map[string]*bintree{
			"backupbatches.yaml":        &bintree{stashAppscodeComV1beta1BackupbatchesYaml, map[string]*bintree{}},
			"backupblueprints.yaml":     &bintree{stashAppscodeComV1beta1BackupblueprintsYaml, map[string]*bintree{}},
			"backupconfigurations.yaml": &bintree{stashAppscodeComV1beta1BackupconfigurationsYaml, map[string]*bintree{}},
			"backupsessions.yaml":       &bintree{stashAppscodeComV1beta1BackupsessionsYaml, map[string]*bintree{}},
			"functions.yaml":            &bintree{stashAppscodeComV1beta1FunctionsYaml, map[string]*bintree{}},
			"restoresessions.yaml":      &bintree{stashAppscodeComV1beta1RestoresessionsYaml, map[string]*bintree{}},
			"tasks.yaml":                &bintree{stashAppscodeComV1beta1TasksYaml, map[string]*bintree{}},
		}},
	}},
	"storage.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"storageclasses.yaml":    &bintree{storageK8sIoV1StorageclassesYaml, map[string]*bintree{}},
			"volumeattachments.yaml": &bintree{storageK8sIoV1VolumeattachmentsYaml, map[string]*bintree{}},
		}},
		"v1beta1": &bintree{nil, map[string]*bintree{
			"csidrivers.yaml": &bintree{storageK8sIoV1beta1CsidriversYaml, map[string]*bintree{}},
			"csinodes.yaml":   &bintree{storageK8sIoV1beta1CsinodesYaml, map[string]*bintree{}},
		}},
	}},
	"voyager.appscode.com": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"certificates.yaml": &bintree{voyagerAppscodeComV1beta1CertificatesYaml, map[string]*bintree{}},
			"ingresses.yaml":    &bintree{voyagerAppscodeComV1beta1IngressesYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
