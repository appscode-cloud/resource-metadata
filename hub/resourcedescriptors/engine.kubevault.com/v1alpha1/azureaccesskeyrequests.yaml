apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: engine.kubevault.com
    k8s.io/kind: AzureAccessKeyRequest
    k8s.io/resource: azureaccesskeyrequests
    k8s.io/version: v1alpha1
  name: engine.kubevault.com-v1alpha1-azureaccesskeyrequests
spec:
  icons:
  - src: https://cdn.appscode.com/k8s/icons/engine.kubevault.com/azureaccesskeyrequests.svg
    type: image/svg+xml
  - src: https://cdn.appscode.com/k8s/icons/engine.kubevault.com/azureaccesskeyrequests.png
    type: image/png
  resource:
    group: engine.kubevault.com
    kind: AzureAccessKeyRequest
    name: azureaccesskeyrequests
    scope: Namespaced
    version: v1alpha1
  ui:
    editor:
      name: enginekubevaultcom-azureaccesskeyrequest-editor
      url: https://bundles.byte.builders/ui/
      version: v0.1.0
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
          type: object
        spec:
          properties:
            roleRef:
              description: Contains vault azure role info
              properties:
                apiGroup:
                  description: APIGroup is the group for the resource being referenced
                  type: string
                kind:
                  description: Kind is the type of resource being referenced
                  type: string
                name:
                  description: Name is the name of resource being referenced
                  type: string
                namespace:
                  description: Namespace is the namespace of the resource being referenced
                  type: string
              required:
              - name
              - namespace
              type: object
            subjects:
              description: Contains a reference to the object or user identities the
                role binding is applied to
              items:
                description: Subject contains a reference to the object or user identities
                  a role binding applies to.  This can either hold a direct API object
                  reference, or a value for non-objects such as user and group names.
                properties:
                  apiGroup:
                    description: APIGroup holds the API group of the referenced subject.
                      Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io"
                      for User and Group subjects.
                    type: string
                  kind:
                    description: Kind of object being referenced. Values defined by
                      this API group are "User", "Group", and "ServiceAccount". If
                      the Authorizer does not recognized the kind value, the Authorizer
                      should report an error.
                    type: string
                  name:
                    description: Name of the object being referenced.
                    type: string
                  namespace:
                    description: Namespace of the referenced object.  If the object
                      kind is non-namespace, such as "User" or "Group", and this value
                      is not empty the Authorizer should report an error.
                    type: string
                required:
                - kind
                - name
                type: object
              type: array
          required:
          - roleRef
          - subjects
          type: object
        status:
          properties:
            conditions:
              description: Conditions applied to the request, such as approval or
                denial.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another. This should be when the underlying condition changed.  If
                      that is not known, then using the time when the API field changed
                      is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition. This field may be empty.
                    type: string
                  observedGeneration:
                    description: If set, this represents the .metadata.generation
                      that the condition was set based upon. For instance, if .metadata.generation
                      is currently 12, but the .status.condition[x].observedGeneration
                      is 9, the condition is out of date with respect to the current
                      state of the instance.
                    format: int64
                    type: integer
                  reason:
                    description: The reason for the condition's last transition in
                      CamelCase. The specific API may choose whether or not this field
                      is considered a guaranteed API. This field may not be empty.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important.
                    type: string
                required:
                - lastTransitionTime
                - message
                - reason
                - status
                - type
                type: object
              type: array
            lease:
              description: Contains lease info
              properties:
                duration:
                  description: lease duration
                  type: string
                id:
                  description: lease id
                  type: string
                renewable:
                  description: Specifies whether this lease is renewable
                  type: boolean
              type: object
            observedGeneration:
              description: observedGeneration is the most recent generation observed
                for this resource. It corresponds to the resource's generation, which
                is updated on mutation by the API Server.
              format: int64
              type: integer
            phase:
              description: Specifies the phase of AzureAccessKeyRequestStatus object
              type: string
            secret:
              description: Name of the secret containing AzureCredential
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
          type: object
      type: object
