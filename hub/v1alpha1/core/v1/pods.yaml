apiVersion: meta.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: ""
    k8s.io/kind: Pod
    k8s.io/resource: pods
    k8s.io/version: v1
  name: core-v1-pods
spec:
  resource:
    group: ""
    kind: Pod
    name: pods
    scope: Namespaced
    version: v1
  columns:
    - jsonPath: .metadata.name
      name: Name
      type: string
    - jsonPath: .metadata.namespace
      name: Namespace
      type: string
    - jsonPath: .metadata.labels
      name: Labels
      type: object
    - jsonPath: .metadata.annotations
      name: Annotations
      type: object
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    # custom columns
    - jsonPath:
      name: Ready
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath:
      name: Restarts
      type: string
    - jsonPath: .status.podIP
      name: IP
      type: string
    - jsonPath: .spec.nodeName
      name: Node
      type: string
    - jsonPath: .spec.nominatedNodeName
      name: Nominated Node
      type: string
    - jsonPath: .spec.readinessGates
      name: Readiness Gates
      type: object
  keyTargets:
    - apiVersion: v1
      kind: Service
    - apiVersion: v1
      kind: PersistentVolumeClaim
  connections:
    - target:
        apiVersion: apps/v1
        kind: StatefulSet
      type: OwnedBy
      level: Controller
    - target:
        apiVersion: apps/v1
        kind: ReplicaSet
      type: OwnedBy
      level: Controller
    - target:
        apiVersion: v1
        kind: Node
      type: MatchRef
      references:
      - '{.spec.nodeName}'
    - target:
        apiVersion: v1
        kind: PersistentVolumeClaim
      type: MatchRef
      namespacePath: "metadata.namespace"
      references:
      - '{range .spec.volumes[*]}{.persistentVolumeClaim.claimName}{"\n"}{end}'
    - target:
        apiVersion: v1
        kind: ConfigMap
      type: MatchRef
      namespacePath: "metadata.namespace"
      references:
      - '{range .spec.containers[*].envFrom[*]}{.configMapRef.name}{"\n"}{end}'
      - '{range .spec.containers[*].env[*]}{.valueFrom.configMapKeyRef.name}{"\n"}{end}'
      - '{range .spec.volumes[*]}{.configMap.name}{"\n"}{end}'
    - target:
        apiVersion: v1
        kind: Secret
      type: MatchRef
      namespacePath: "metadata.namespace"
      references:
      - '{range .spec.containers[*].envFrom[*]}{.secretRef.name}{"\n"}{end}'
      - '{range .spec.containers[*].env[*]}{.valueFrom.secretKeyRef.name}{"\n"}{end}'
      - '{range .spec.volumes[*]}{.secret.secretName}{"\n"}{end}'
