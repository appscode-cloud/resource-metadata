// Package v1alpha1 Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations.yaml
// admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations.yaml
// apiextensions.k8s.io/v1beta1/customresourcedefinitions.yaml
// apiregistration.k8s.io/v1/apiservices.yaml
// appcatalog.appscode.com/v1alpha1/appbindings.yaml
// apps/v1/controllerrevisions.yaml
// apps/v1/daemonsets.yaml
// apps/v1/deployments.yaml
// apps/v1/replicasets.yaml
// apps/v1/statefulsets.yaml
// authentication.k8s.io/v1/tokenreviews.yaml
// authorization.k8s.io/v1/localsubjectaccessreviews.yaml
// authorization.k8s.io/v1/selfsubjectaccessreviews.yaml
// authorization.k8s.io/v1/selfsubjectrulesreviews.yaml
// authorization.k8s.io/v1/subjectaccessreviews.yaml
// autoscaling/v1/horizontalpodautoscalers.yaml
// batch/v1/jobs.yaml
// batch/v1beta1/cronjobs.yaml
// certificates.k8s.io/v1beta1/certificatesigningrequests.yaml
// coordination.k8s.io/v1/leases.yaml
// core/v1/bindings.yaml
// core/v1/componentstatuses.yaml
// core/v1/configmaps.yaml
// core/v1/endpoints.yaml
// core/v1/events.yaml
// core/v1/limitranges.yaml
// core/v1/namespaces.yaml
// core/v1/nodes.yaml
// core/v1/persistentvolumeclaims.yaml
// core/v1/persistentvolumes.yaml
// core/v1/pods.yaml
// core/v1/podtemplates.yaml
// core/v1/replicationcontrollers.yaml
// core/v1/resourcequotas.yaml
// core/v1/secrets.yaml
// core/v1/serviceaccounts.yaml
// core/v1/services.yaml
// events.k8s.io/v1beta1/events.yaml
// extensions/v1beta1/daemonsets.yaml
// extensions/v1beta1/deployments.yaml
// extensions/v1beta1/ingresses.yaml
// extensions/v1beta1/networkpolicies.yaml
// extensions/v1beta1/podsecuritypolicies.yaml
// extensions/v1beta1/replicasets.yaml
// extensions/v1beta1/replicationcontrollers.yaml
// kubedb.com/v1alpha1/postgreses.yaml
// meta.appscode.com/v1alpha1/resourcedescriptors.yaml
// monitoring.coreos.com/v1/prometheuses.yaml
// monitoring.coreos.com/v1/servicemonitors.yaml
// networking.k8s.io/v1/networkpolicies.yaml
// networking.k8s.io/v1beta1/ingresses.yaml
// node.k8s.io/v1beta1/runtimeclasses.yaml
// policy/v1beta1/poddisruptionbudgets.yaml
// policy/v1beta1/podsecuritypolicies.yaml
// rbac.authorization.k8s.io/v1/clusterrolebindings.yaml
// rbac.authorization.k8s.io/v1/clusterroles.yaml
// rbac.authorization.k8s.io/v1/rolebindings.yaml
// rbac.authorization.k8s.io/v1/roles.yaml
// scheduling.k8s.io/v1/priorityclasses.yaml
// storage.k8s.io/v1/storageclasses.yaml
// storage.k8s.io/v1/volumeattachments.yaml
// storage.k8s.io/v1beta1/csidrivers.yaml
// storage.k8s.io/v1beta1/csinodes.yaml
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\x2f\x30\x1d\x75\x87\xb2\x1d\xb6\x6c\x10\x82\xb5\x27\x35\x1d\xab\x49\x1c\xc5\x4e\xb9\x3e\x6a\x53\x50\x25\xa4\x61\xb6\xd1\x7f\xf9\xef\x1b\x33\xbf\x53\x51\x96\xe4\x20\x92\x61\x8f\x39\xab\x97\x91\x7a\x2f\xf1\xbc\x0c\x18\xf2\x0d\x87\x6e\xe6\x34\x3a\x78\x25\x95\x5a\x3c\x3d\x93\xfa\xc2\xd9\xa4\x74\x2b\x33\xa2\xa1\xeb\x00\x7c\x21\x34\x96\xf4\xc6\x91\xd4\x30\x66\x07\xa9\x86\xd0\x01\x04\xbc\x52\xd0\x35\x03\x30\x3f\x69\xcf\x72\x9e\x8a\xd4\xec\x00\xc7\xc8\xba\xd6\x17\x9a\x58\xad\x6c\x1f\xf4\x2d\x73\x8c\x37\x81\x97\x6a\x68\x9c\xa6\x0f\xba\xde\x44\xe6\x8b\xa4\x4f\x9e\x6a\x83\x8e\xe9\xb2\x8b\x3a\x88\x3b\xf1\xd5\x08\x7f\x24\xf4\x88\x2c\x3f\x57\x58\x86\x2b\x19\x0e\x1d\x40\xc2\x48\xf7\x0d\x4f\x7b\xf8\x74\xbf\x46\x33\xf9\x75\xfc\xaf\xd6\x56\xfc\xf0\x05\x1e\x9b\xde\x6c\xff\xdf\xab\x5e\x32\x39\xb8\x84\xaa\x46\x65\x7b\xfa\xb3\xfd\x3b\x00\x00\xff\xff\x12\xd7\x08\x70\x16\x02\x00\x00")

func admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYamlBytes() ([]byte, error) {
	return bindataRead(
		_admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml,
		"admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations.yaml",
	)
}

func admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml() (*asset, error) {
	bytes, err := admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations.yaml", size: 534, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x6a\xc3\x30\x10\x45\xf7\x3e\xc5\x5c\x20\x0e\xde\x15\x6d\xd3\x13\x94\x92\xae\x27\xf2\xd4\x19\x2c\x69\xc4\x8c\xe4\x5e\xbf\xd8\x4a\x83\xa1\xd0\x7a\x2b\xfe\xd3\xff\xf3\x30\xf3\x95\xd4\x58\x92\x83\x48\x05\x7b\xcc\xd9\xbc\x8c\xd4\x7b\x89\xe7\x65\xc0\x90\xef\x38\x74\x33\xa7\xd1\xc1\x1b\x99\x54\xf5\xf4\x4a\xe6\x95\x73\x11\xed\x56\x66\xc4\x82\xae\x03\xf0\x4a\x58\x58\xd2\x3b\x47\xb2\x82\x31\x3b\x48\x35\x84\x0e\x20\xe0\x8d\x82\xad\x19\x80\xf9\xc5\x7a\x96\xf3\xa4\x52\xb3\x03\x1c\x23\xdb\x5a\xaf\x34\xb1\x15\xdd\x3e\xe8\x5b\x66\x1f\x6f\x03\xae\x18\x78\xc4\xc2\x69\xfa\xa0\xdb\x5d\x64\xbe\x48\xfa\xe4\xa9\x36\x6c\x9f\xd7\xc7\x54\x07\xcb\x93\xf9\x6a\x8c\xdf\x33\xb6\x87\x96\x1f\x13\xcb\x70\xa3\x82\x43\x07\x90\x30\xd2\xdf\x2b\x4f\x8f\xf0\xe9\xbf\x22\xcb\xe4\x57\x05\xcf\x69\x5b\xf5\x61\x0f\x47\x05\xb4\xc5\x47\xae\x36\x2f\x99\x1c\x5c\x42\xb5\x42\xba\x3d\xfd\x32\xf0\x1d\x00\x00\xff\xff\x8c\x1a\x6e\x9b\x20\x02\x00\x00")

func admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYamlBytes() ([]byte, error) {
	return bindataRead(
		_admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml,
		"admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations.yaml",
	)
}

func admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml() (*asset, error) {
	bytes, err := admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations.yaml", size: 544, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x5c\xa0\xa9\xb2\x43\xde\x96\x13\x20\xc4\x7e\xea\x0c\x30\xaa\xed\x19\x79\xec\x88\xe3\x23\x27\x6d\x89\x04\x34\x4b\xfb\x3f\xfb\xff\x87\xca\x6f\x54\x8c\x25\x7b\x48\x54\x71\x40\x55\x0b\x32\xd1\x10\x24\x1d\xe7\x11\xa3\x7e\xe2\xe8\x2e\x9c\x27\x0f\x2f\x64\xd2\x4a\xa0\x67\xb2\x50\x58\xab\x14\xd7\xdf\x4c\x58\xd1\x3b\x80\x50\x08\x2b\x4b\x7e\xe5\x44\x56\x31\xa9\x87\xdc\x62\x74\x00\x11\xcf\x14\xad\x33\x00\x97\x27\x1b\x58\x8e\x1f\x45\x9a\x7a\x40\x65\xfa\xaa\x94\xfb\x02\x1b\xd6\x6c\x8b\xad\xc5\xa7\x66\x55\xd2\x4f\xfd\x3b\x67\xee\x4d\x5b\xb2\x5c\x53\x0f\x61\xa1\x6f\xe7\xe9\x4e\xdb\x16\x9f\x6f\xd6\xf3\x78\xa6\x8a\xa3\x03\xc8\x98\xe8\xef\x45\x87\x2b\x74\xf8\xff\x6b\x53\x0a\x5d\xf0\x3e\x63\x29\xdb\xb5\xdc\xd7\x5b\x57\x3d\x76\xb2\x20\x4a\x1e\x4e\xb1\x59\xa5\xb2\x5c\xfd\xf2\xfb\x0e\x00\x00\xff\xff\xc5\xe4\x3b\x2e\xea\x01\x00\x00")

func apiextensionsK8sIoV1beta1CustomresourcedefinitionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml,
		"apiextensions.k8s.io/v1beta1/customresourcedefinitions.yaml",
	)
}

func apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml() (*asset, error) {
	bytes, err := apiextensionsK8sIoV1beta1CustomresourcedefinitionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apiextensions.k8s.io/v1beta1/customresourcedefinitions.yaml", size: 490, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiregistrationK8sIoV1ApiservicesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\x2c\x31\x0c\x45\xfb\x7c\x85\x7f\x60\x67\x35\xdd\x53\xba\x27\x68\xe8\x10\x20\x7a\x93\xb1\x16\x6b\x93\xd8\xb2\x33\xf9\x7e\x34\x33\xb0\x0a\x12\x48\xb4\xb9\xd7\xf7\x9c\xa0\xf2\x2b\x99\xb3\xd4\x08\x85\x1a\x4e\xa8\xea\x49\x16\x9a\x92\x94\x73\x9f\x31\xeb\x3b\xce\xe1\xca\x75\x89\xf0\x44\x2e\xab\x25\xba\x27\x4f\xc6\xda\xc4\xc2\x76\xb3\x60\xc3\x18\x00\x92\x11\x36\x96\xfa\xc2\x85\xbc\x61\xd1\x08\x75\xcd\x39\x00\x64\x7c\xa3\xec\x5b\x07\xe0\xfa\xcf\x27\x96\xf3\xc5\x64\xd5\x08\xa8\x6c\x74\x61\x6f\xb6\x9f\x4e\x47\x3a\x16\x0f\xf4\xff\xc7\x87\x67\xb2\xce\x89\xc6\xcc\x3e\x85\xf6\x1d\x3f\x72\x1f\x0b\xfd\xeb\x6f\x7d\x0e\x00\x15\x0b\xfd\x86\x3c\xf5\xf9\x34\x8e\xb8\x52\xda\x84\x6f\x88\x7d\xf6\x0f\xd6\x3f\xe9\xde\xc0\xdf\x1c\x3d\x89\x52\x84\xbb\xbc\x7a\x23\xdb\x9f\x46\xdf\x8f\x00\x00\x00\xff\xff\x37\x1a\x6d\xdd\x9b\x01\x00\x00")

func apiregistrationK8sIoV1ApiservicesYamlBytes() ([]byte, error) {
	return bindataRead(
		_apiregistrationK8sIoV1ApiservicesYaml,
		"apiregistration.k8s.io/v1/apiservices.yaml",
	)
}

func apiregistrationK8sIoV1ApiservicesYaml() (*asset, error) {
	bytes, err := apiregistrationK8sIoV1ApiservicesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apiregistration.k8s.io/v1/apiservices.yaml", size: 411, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appcatalogAppscodeComV1alpha1AppbindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x6e\xc3\x30\x0c\x45\x77\x9f\x82\x17\x88\x83\x6c\x85\xb6\x16\x9d\x3b\x14\x45\x77\x86\x22\x5c\x22\x92\x48\x88\x72\xce\x5f\xd8\x69\x0c\x19\x6d\x81\xac\xe2\xd7\x7f\xef\xa3\xc9\x27\x57\x17\x2d\x01\x32\x37\x1c\xd1\xcc\x49\x23\x8f\xa4\xf9\x78\x3d\x61\xb2\x2f\x3c\x0d\x17\x29\x31\xc0\x3b\xbb\xce\x95\xf8\x95\x9d\xaa\x58\xd3\x3a\x2c\x7f\x22\x36\x0c\x03\x00\x55\xc6\x26\x5a\x3e\x24\xb3\x37\xcc\x16\xa0\xcc\x29\x0d\x00\x09\xcf\x9c\x7c\xc9\x00\x5c\x9e\x7c\x14\x3d\x4e\x55\x67\x0b\x80\x66\x84\x0d\x93\x4e\x3b\x72\x9f\xbc\xb1\x9f\xcd\x5e\xa4\x44\x29\x53\x7f\xab\x3f\x46\x6b\xd1\xf9\x76\xf7\x3e\x70\xbd\x8f\xdb\xa6\x00\x14\xcc\xfc\x2f\xf9\x70\x0f\x1e\xfa\x46\x37\xa6\x45\x7f\xe3\xad\x8c\x47\x36\xfc\x25\xbf\x09\xec\x8c\x9d\xd4\x38\xc0\x1b\x66\x76\x43\xe2\xb8\xbe\xfe\x1e\xf0\x1d\x00\x00\xff\xff\xa5\x0b\x1a\x4c\xb3\x01\x00\x00")

func appcatalogAppscodeComV1alpha1AppbindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appcatalogAppscodeComV1alpha1AppbindingsYaml,
		"appcatalog.appscode.com/v1alpha1/appbindings.yaml",
	)
}

func appcatalogAppscodeComV1alpha1AppbindingsYaml() (*asset, error) {
	bytes, err := appcatalogAppscodeComV1alpha1AppbindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "appcatalog.appscode.com/v1alpha1/appbindings.yaml", size: 435, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1ControllerrevisionsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xbd\x4e\xc4\x30\x0c\x80\xf7\x3c\x85\x5f\xe0\x7a\xea\x86\xb2\xc2\xcc\x70\x42\xec\xc6\xb5\x20\xba\x24\xb6\xec\x34\xcf\x8f\x72\x3d\xaa\x22\x7e\x56\xeb\xb3\xbf\xcf\xa8\xe9\x95\xcd\x93\xd4\x08\x85\x1b\x4e\xa8\xea\x24\x0b\x4f\x24\xe5\xdc\x67\xcc\xfa\x81\x73\xb8\xa6\xba\x44\xb8\xb0\xcb\x6a\xc4\x4f\xec\x64\x49\x9b\x58\x18\x3b\x0b\x36\x8c\x01\x80\x8c\xb1\x25\xa9\x2f\xa9\xb0\x37\x2c\x1a\xa1\xae\x39\x07\x80\x8c\x6f\x9c\x7d\x30\x00\xd7\x07\x9f\x92\x9c\xdf\x4d\x56\x8d\x30\x74\xc7\xf1\x26\x7a\x94\xda\x4c\x72\x66\xbb\x70\x4f\xa3\xee\xc8\xd8\x3d\x23\x02\xed\x9c\xdd\xb9\x6f\xc7\xfa\xd7\x67\x7d\x0e\x00\x15\x0b\x6f\xc2\x53\x9f\x4f\xbf\xad\xba\x32\x8d\xc8\x5d\x70\x3b\xf6\xa3\xf4\xbf\xc4\x4d\xf2\x57\x97\x93\x28\x47\x78\xc6\xc2\xae\x48\xbc\xdc\xa6\xc7\xcc\xcf\x00\x00\x00\xff\xff\x74\x7d\xa3\xc6\x90\x01\x00\x00")

func appsV1ControllerrevisionsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1ControllerrevisionsYaml,
		"apps/v1/controllerrevisions.yaml",
	)
}

func appsV1ControllerrevisionsYaml() (*asset, error) {
	bytes, err := appsV1ControllerrevisionsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/controllerrevisions.yaml", size: 400, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1DaemonsetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x4e\xc4\x30\x10\x44\x7b\x7f\xc5\xfe\xc0\xe5\x94\x0e\xb9\xbe\x9a\x02\x10\xfd\x62\x8f\xc0\x8a\xed\x5d\x79\x9d\x7c\x3f\x4a\x02\xc8\xc0\xb5\x3b\x9e\x79\xcf\xac\xe9\x15\xcd\x92\x54\x4f\x05\x9d\x27\x56\xb5\x20\x11\x53\x90\x72\xdd\x66\xce\xfa\xc1\xb3\x5b\x52\x8d\x9e\x9e\x60\xb2\xb6\x80\x1b\x2c\xb4\xa4\x5d\x9a\xdb\x3b\x91\x3b\x7b\x47\x14\x1a\xb8\x27\xa9\x2f\xa9\xc0\x3a\x17\xf5\x54\xd7\x9c\x1d\x51\xe6\x37\x64\xdb\xdf\x10\x2d\x0f\x36\x25\xb9\xbe\x37\x59\xd5\xd3\x8e\x1b\xcf\x27\xe8\xc6\x28\x52\x9f\xd1\xc7\xa8\x7d\xd1\x3d\xc5\x23\x36\xf4\x5f\xd5\xed\xfb\x1f\xdb\xec\x88\x2a\x17\x9c\xf3\x97\x6d\xbe\x0c\x0d\x53\x84\xdd\xe4\x67\xee\xd8\xf8\xa7\x73\xc7\xe3\x9c\xfc\x03\xb7\x20\x0a\x4f\x8f\x5c\x60\xca\x01\xf1\xb8\x8e\x2e\x9f\x01\x00\x00\xff\xff\xfe\x28\xba\xcc\x63\x01\x00\x00")

func appsV1DaemonsetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1DaemonsetsYaml,
		"apps/v1/daemonsets.yaml",
	)
}

func appsV1DaemonsetsYaml() (*asset, error) {
	bytes, err := appsV1DaemonsetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/daemonsets.yaml", size: 355, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1DeploymentsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x31\x6f\xe3\x30\x0c\x85\x77\xff\x0a\x22\x7b\x1c\x78\x3b\x68\xbd\xac\x77\x38\x5c\x83\xee\xac\xfc\x90\x08\x91\x45\x41\x54\x0c\xe4\xdf\x17\x8a\x2d\x37\xa9\x53\xa0\xf5\x66\x92\x1f\xdf\x7b\x14\x47\xf7\x8a\xa4\x4e\x82\xa1\x01\x99\x5b\x8e\x51\xad\xf4\x68\xad\x0c\xbb\xb1\x63\x1f\x4f\xdc\x35\x67\x17\x7a\x43\xff\xa1\x72\x49\x16\x7b\xa8\x4d\x2e\x66\x49\x4d\x61\x7a\xce\x6c\x1a\x22\x9b\xc0\xd9\x49\x38\xb8\x01\x9a\x79\x88\x86\xc2\xc5\xfb\x86\xc8\xf3\x1b\xbc\x96\x19\xa2\xf3\x2f\x6d\x9d\xec\x8e\x49\x2e\xd1\x50\x91\xbb\x2f\x4f\x42\x7b\x44\x2f\xd7\x01\x21\xdf\xf7\xd2\x2c\x6f\xa8\x5f\xfa\x0f\xf0\x58\x93\x8c\x5d\x43\x14\x78\xc0\x24\xb0\x1d\xbb\xed\x3d\xa2\x11\xb6\x98\x59\x16\xde\x96\xac\x1c\x3d\xb3\x32\x2d\xfd\xac\xaf\x56\x22\x0c\xfd\xe5\x01\x1a\xd9\xa2\xbf\x55\x1f\xed\x58\x09\x01\xb6\xdc\x67\x3e\xc4\x96\x32\xa7\x23\xf2\xf4\xf7\xcc\xc1\x7a\xc9\xf4\x7d\x1c\x22\x21\x7a\x67\x59\x91\x2b\x91\xaf\xc5\xc9\x1f\xce\xf6\xf4\x02\x0f\x5b\x1e\x69\xea\x84\xea\xee\x1f\xe7\x93\xa1\x4d\x7d\xba\x76\x69\x6c\xe6\x49\x9d\xc1\x79\xb0\x9c\xab\xad\xb5\x3a\xe3\x31\xc2\x1b\xfa\x2d\x21\x27\xf1\x1e\x45\xe5\x8c\xeb\xe1\x16\x69\x49\xb8\x4e\xb4\xce\xf3\x75\x9a\xca\x7f\x03\x8d\xd2\xff\x98\x51\xa4\xd1\x59\x68\xf3\x1e\x00\x00\xff\xff\xe7\x1e\xef\xb6\x05\x03\x00\x00")

func appsV1DeploymentsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1DeploymentsYaml,
		"apps/v1/deployments.yaml",
	)
}

func appsV1DeploymentsYaml() (*asset, error) {
	bytes, err := appsV1DeploymentsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/deployments.yaml", size: 773, mode: os.FileMode(420), modTime: time.Unix(1565764398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1ReplicasetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x4b\x6f\xe3\x30\x0c\x84\xef\xfe\x15\x44\xee\x71\xe0\xdb\x42\xc7\xdd\xbd\xf6\x81\x26\xe8\x9d\x95\x07\x89\x10\xbd\x20\x2a\x2e\xfc\xef\x0b\xc5\x8f\xc4\x4d\x90\xa2\xbe\x99\xe4\xf0\x1b\x8e\x38\x9a\x77\x24\x31\xc1\x2b\x72\xc8\x5c\x73\x8c\xa2\x43\x8b\x5a\x07\xb7\xe9\x1a\xb6\xf1\xc0\x4d\x75\x34\xbe\x55\xf4\x06\x09\xa7\xa4\xf1\x1f\xa2\x93\x89\x39\xa4\xaa\x68\x5a\xce\xac\x2a\x22\x9d\xc0\xd9\x04\xbf\x33\x0e\x92\xd9\x45\x45\xfe\x64\x6d\x45\x64\xf9\x03\x56\xca\x0c\xd1\xf1\x8f\xd4\x26\x6c\xf6\x29\x9c\xa2\xa2\x82\xbb\x2e\x4f\xa0\x68\x8d\xe6\x2d\xf2\x75\x2f\x8d\x78\x45\x69\xe8\x0b\xf2\x42\xdc\x4d\x97\x74\x4d\x45\xe4\xd9\x61\x00\xac\xbb\x66\x7d\x2d\x91\x08\x5d\xcc\xcc\x0b\xcf\x4b\x6e\x1c\xdd\xb3\x32\x2c\xfd\xce\x17\x1d\x22\x14\x3d\xb3\x83\x44\xd6\x68\xcf\xd5\xa5\x1d\x1d\xbc\x87\x2e\xf9\x8c\x41\xac\x29\x73\xda\x23\x0f\x7f\x17\x07\xf3\xef\x52\x3f\x7c\x97\x0c\x62\x68\x65\x2c\xe7\xbe\xd0\x9f\x38\xeb\xc3\x16\x16\xba\x3c\xcc\xd0\xf1\x93\xa3\x57\xce\x07\x45\xab\xe9\xb9\xea\xb9\xb1\x1a\x27\x65\x14\x8e\x83\x25\xa2\x7a\xaa\x4d\x33\x16\x1d\xac\xa2\x7f\xc1\xe7\x14\xac\x45\x7a\x78\xc7\x25\xc9\x9f\x8f\x69\x11\x6d\xe8\x1d\x7c\x5e\xde\xf4\xf2\xe9\xd1\xfe\xed\x1f\xf0\x8f\xe8\x77\x67\xfc\x9c\xea\x22\xc5\x5b\xec\x9d\x04\x7f\xa1\x11\xa4\xce\x68\x48\xf5\x15\x00\x00\xff\xff\x7a\x3d\x29\x5e\x39\x03\x00\x00")

func appsV1ReplicasetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1ReplicasetsYaml,
		"apps/v1/replicasets.yaml",
	)
}

func appsV1ReplicasetsYaml() (*asset, error) {
	bytes, err := appsV1ReplicasetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/replicasets.yaml", size: 825, mode: os.FileMode(420), modTime: time.Unix(1565764398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appsV1StatefulsetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xbf\x6e\xf3\x30\x0c\xc4\x77\x3f\x05\x91\x3d\x0e\xbc\x7d\xd0\xfa\x75\x6d\x51\x34\x45\x77\x56\xbe\x26\x42\x64\x51\x10\x69\x03\x7d\xfb\x42\xb1\x9d\xc6\x48\xbd\xf9\xf8\xe7\x7e\x3a\x72\x0e\x1f\x28\x1a\x24\x39\x1a\x60\xdc\x72\xce\xea\xa5\x47\xeb\x65\x38\x4c\x1d\xc7\x7c\xe6\xae\xb9\x84\xd4\x3b\x7a\x83\xca\x58\x3c\x9e\xa0\xbe\x84\x6c\x52\x9a\x3a\xd3\xb3\xb1\x6b\x88\x7c\x01\x5b\x90\xf4\x1e\x06\xa8\xf1\x90\x1d\xa5\x31\xc6\x86\x28\xf2\x27\xa2\xd6\x1e\xa2\xcb\x3f\x6d\x83\x1c\x4e\x45\xc6\xec\xa8\xda\xdd\xcb\xb3\xd1\xd1\xd8\xf0\x35\xc6\x23\xec\xbe\x58\x16\x7f\x47\xba\x34\x28\x6c\x33\x3e\xad\x6f\x99\xba\x86\x28\xf1\x80\xd9\x62\x3f\x75\xfb\xcd\x8c\x66\xf8\xca\x73\x5b\x79\xdd\xf2\x00\xf5\x27\xcd\xbc\xf6\x01\x41\xbd\x64\x38\x7a\xe1\x01\x9a\xd9\xa3\xbf\xaa\x5b\x22\x2f\x29\xc1\xd7\x90\x96\x34\xf6\x64\x5c\x4e\xb0\xf9\xef\x8e\x61\xb7\xbb\x29\xdb\x15\xf3\xf7\x1b\x45\x96\x5e\x17\xd9\xbe\x2b\xc0\x33\x9b\x3f\x1f\x11\xe1\xeb\x81\xe6\x4a\x5a\xa1\x5e\xd9\xce\x8e\x76\xeb\xd9\xda\x5b\x61\xb5\xd3\x65\x70\x69\xac\x39\xb5\xab\xb6\xf6\x44\x4c\x88\x8e\xfe\x4b\xb2\x22\x31\xa2\x34\x3f\x01\x00\x00\xff\xff\x21\x2d\x71\x04\x47\x02\x00\x00")

func appsV1StatefulsetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appsV1StatefulsetsYaml,
		"apps/v1/statefulsets.yaml",
	)
}

func appsV1StatefulsetsYaml() (*asset, error) {
	bytes, err := appsV1StatefulsetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apps/v1/statefulsets.yaml", size: 583, mode: os.FileMode(420), modTime: time.Unix(1565764398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authenticationK8sIoV1TokenreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\xc4\x30\x0c\x00\xef\x79\x85\x3f\xb0\x5d\xf5\x86\x72\x85\x17\xac\x56\xdc\x4d\xd6\x62\xa3\x26\xb1\x65\x3b\xe1\xfb\xa8\x2d\xa0\x22\x40\x5c\xe3\xb1\x67\x82\x92\x9f\x49\x2d\x73\x8b\x50\xc9\x71\x42\x11\x4b\x7c\xa3\x29\x71\x3d\x8f\x19\x8b\xdc\x71\x0e\x4b\x6e\xb7\x08\x17\x32\xee\x9a\xe8\x89\x2c\x69\x16\x67\x0d\xeb\xce\x0d\x1d\x63\x00\x48\x4a\xe8\x99\xdb\x35\x57\x32\xc7\x2a\x11\x5a\x2f\x25\x00\x14\x7c\xa1\x62\x2b\x03\xb0\x3c\xd8\x94\xf9\xfc\xaa\xdc\x25\x02\x76\xbf\x53\xf3\x9c\xb6\xcd\x69\x1f\x1e\xb9\xdd\x7c\xe5\x85\xda\x85\x46\xa6\xb7\xe3\x50\x3f\x82\x22\xf8\x0a\xe8\x06\xd8\x91\x18\x9f\x9f\x1b\x73\x00\x68\x58\xe9\x0f\xe7\x69\xcc\xa7\x6f\x47\x4c\x28\xad\xc5\x5f\x8e\xed\xec\xff\xd9\xbf\xf6\xee\xe2\x1f\x91\x96\x58\x28\xc2\x63\xe9\xe6\xa4\xdb\xd3\x31\xf8\x3d\x00\x00\xff\xff\xca\xd3\xd1\x68\x9d\x01\x00\x00")

func authenticationK8sIoV1TokenreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authenticationK8sIoV1TokenreviewsYaml,
		"authentication.k8s.io/v1/tokenreviews.yaml",
	)
}

func authenticationK8sIoV1TokenreviewsYaml() (*asset, error) {
	bytes, err := authenticationK8sIoV1TokenreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authentication.k8s.io/v1/tokenreviews.yaml", size: 413, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authorizationK8sIoV1LocalsubjectaccessreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\x2c\x31\x0c\x45\xfb\x7c\x85\x7f\x60\x67\x35\xdd\x53\xba\x27\x51\x22\x8a\x05\xd1\x7b\x3d\x16\x1b\x36\x89\xad\x38\x09\x12\x5f\x8f\x26\x03\x68\x0a\x60\xdb\xe4\x5c\xdf\x7b\x50\xc3\x33\x17\x0b\x92\x3d\x24\xae\x38\xa1\xaa\x91\x2c\x3c\x91\xa4\x63\x9f\x31\xea\x05\x67\x77\x0d\x79\xf1\x70\x62\x93\x56\x88\xef\xd8\xa8\x04\xad\x52\xdc\x9a\x59\xb0\xa2\x77\x00\x54\x18\x6b\x90\xfc\x14\x12\x5b\xc5\xa4\x1e\x72\x8b\xd1\x01\x44\x3c\x73\xb4\x95\x01\xb8\xfe\xb3\x29\xc8\xf1\xa5\x48\x53\x0f\xd8\xea\x45\x4a\x78\x1f\xc1\x69\xfb\xdb\x63\x5b\xf1\xbd\x10\xc6\xc7\x76\x7e\x65\xaa\xff\x89\xd8\xec\xc4\x3d\xf0\xdb\x9e\x2c\x9f\xe3\x3c\xc4\x95\xb6\x8d\xc6\x41\x97\x41\xdb\x1e\xef\x5f\xd6\x7d\x76\x00\x19\x13\xff\x3c\xe6\xd0\xe7\xc3\xef\x07\x4d\x99\x56\xad\xef\xf2\x51\x71\xd3\xed\xb6\xd4\x36\xe8\x6f\x13\x23\x51\xf6\xf0\x80\x89\x4d\x91\x78\x19\xaf\x7b\xb1\x8f\x00\x00\x00\xff\xff\x0e\xe4\xf0\xae\xde\x01\x00\x00")

func authorizationK8sIoV1LocalsubjectaccessreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authorizationK8sIoV1LocalsubjectaccessreviewsYaml,
		"authorization.k8s.io/v1/localsubjectaccessreviews.yaml",
	)
}

func authorizationK8sIoV1LocalsubjectaccessreviewsYaml() (*asset, error) {
	bytes, err := authorizationK8sIoV1LocalsubjectaccessreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authorization.k8s.io/v1/localsubjectaccessreviews.yaml", size: 478, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authorizationK8sIoV1SelfsubjectaccessreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\x03\x31\x0c\x45\xf7\x73\x0a\x5f\xa0\x53\xcd\x0e\x65\x87\xe0\x04\x2d\x62\xef\x7a\x5c\x1a\x9a\xc4\x91\x9d\x04\x89\xd3\xa3\xc9\x00\x9a\x05\xb4\xdb\xe4\x7d\xff\xff\x30\xfb\x57\x56\xf3\x92\x1c\x44\x2e\x38\x62\xce\x46\x32\xf3\x48\x12\xf7\x6d\xc2\x90\x2f\x38\x0d\x57\x9f\x66\x07\x07\x36\xa9\x4a\xfc\xcc\x46\xea\x73\x11\x1d\x96\xcc\x8c\x05\xdd\x00\x40\xca\x58\xbc\xa4\x17\x1f\xd9\x0a\xc6\xec\x20\xd5\x10\x06\x80\x80\x27\x0e\xb6\x30\x00\xd7\x07\x1b\xbd\xec\xdf\x54\x6a\x76\x80\xb5\x5c\x44\xfd\x67\x0f\x8e\xeb\xdf\x16\x5b\x8b\x8f\x1c\xce\xc7\x7a\x7a\x67\x2a\x8f\x44\x6c\x76\xe0\xe6\xf9\x63\x0b\xea\xf7\x36\x07\xc6\xe1\x6c\x2b\x8c\x1d\xd6\x0e\xdb\x96\x6e\x3f\xce\x6d\x1a\x00\x12\x46\xfe\x7b\xca\xae\x4d\xbb\x7f\xef\x59\x66\x5a\x9c\x7e\xab\x7b\xc3\x5d\xb1\xbb\x46\xeb\x9c\x9b\x1a\x46\x92\xd9\xc1\x53\xa8\x56\x58\xfb\xd3\x56\xe9\x2b\x00\x00\xff\xff\x77\xcf\x90\x04\xd6\x01\x00\x00")

func authorizationK8sIoV1SelfsubjectaccessreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authorizationK8sIoV1SelfsubjectaccessreviewsYaml,
		"authorization.k8s.io/v1/selfsubjectaccessreviews.yaml",
	)
}

func authorizationK8sIoV1SelfsubjectaccessreviewsYaml() (*asset, error) {
	bytes, err := authorizationK8sIoV1SelfsubjectaccessreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authorization.k8s.io/v1/selfsubjectaccessreviews.yaml", size: 470, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authorizationK8sIoV1SelfsubjectrulesreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x39\xc5\x5c\xa0\xa9\xb2\x43\xde\xc2\x09\x52\xc4\x7e\xea\xfc\x52\x53\xc7\x63\xcd\xd8\x46\xe2\xf4\x28\x09\xa0\x2c\x80\x6e\xed\xf7\xe7\xff\xc7\x39\xbc\x40\x2d\x48\x72\x34\xa3\x70\xcf\x39\x9b\x97\x09\xbd\x97\xf9\xd8\x06\x8e\xf9\xca\x43\x77\x0b\x69\x72\x34\xc2\xa4\xaa\xc7\x13\xcc\x6b\xc8\x45\xb4\x5b\x32\x13\x17\x76\x1d\x91\x57\x70\x09\x92\x9e\xc3\x0c\x2b\x3c\x67\x47\xa9\xc6\xd8\x11\x45\x3e\x23\xda\xc2\x10\xdd\x1e\xac\x0f\x72\x7c\x55\xa9\xd9\x11\xd7\x72\x15\x0d\x1f\x6b\xb0\xdf\xfe\xf6\xd8\x56\x7c\x42\xbc\x9c\xea\xf9\x0d\xbe\x8c\x35\xc2\x46\xb4\x80\xf7\x3d\xa7\x5f\xd3\x1c\x19\xe2\xc5\x36\x56\x17\x56\x57\xd6\xf6\x70\xfb\x36\x6e\x43\x47\x94\x78\xc6\xef\x43\x0e\x6d\x38\xfc\x75\xce\x32\xfc\x22\xf4\x53\xbc\x16\xdc\xb5\xba\xa7\xb3\x8d\xf9\xcf\xc1\xbc\x64\x38\x7a\x8c\xd5\x0a\x74\x7d\xda\xfb\x7c\x06\x00\x00\xff\xff\x22\x51\x4e\x2a\xd1\x01\x00\x00")

func authorizationK8sIoV1SelfsubjectrulesreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authorizationK8sIoV1SelfsubjectrulesreviewsYaml,
		"authorization.k8s.io/v1/selfsubjectrulesreviews.yaml",
	)
}

func authorizationK8sIoV1SelfsubjectrulesreviewsYaml() (*asset, error) {
	bytes, err := authorizationK8sIoV1SelfsubjectrulesreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authorization.k8s.io/v1/selfsubjectrulesreviews.yaml", size: 465, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _authorizationK8sIoV1SubjectaccessreviewsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4e\x03\x31\x0c\x00\xef\x79\x85\x3f\xd0\xad\xf6\x86\x72\x43\xf0\x82\x82\xb8\xbb\x5e\x8b\x86\x26\x71\x64\x27\x41\xe2\xf5\x68\xb3\x80\xf6\x50\xe0\x9a\x8c\xed\x19\x2c\xe1\x85\xd5\x82\x64\x0f\x89\x2b\x4e\x58\x8a\x91\x2c\x3c\x91\xa4\x63\x9f\x31\x96\x0b\xce\xee\x1a\xf2\xe2\xe1\xc4\x26\x4d\x89\x1f\xd9\x48\x43\xa9\xa2\x6e\x9d\x59\xb0\xa2\x77\x00\xa4\x8c\x35\x48\x7e\x0e\x89\xad\x62\x2a\x1e\x72\x8b\xd1\x01\x44\x3c\x73\xb4\x95\x01\xb8\xde\xd9\x14\xe4\xf8\xaa\xd2\x8a\x07\x6c\xf5\x22\x1a\x3e\xc6\xe0\xb4\xfd\xed\xb1\xed\xf0\x53\x3b\xbf\x31\xd5\x7b\x22\x36\x3b\x71\x0f\xfc\xbe\x87\xf4\xcb\xcb\x83\x6d\x20\x0e\x50\x07\x68\x7b\xb2\x7f\xb7\xf6\xd9\x01\x64\x4c\x7c\x5b\xe1\xd0\xe7\xc3\xcd\x5d\x56\x98\xd6\x8e\x9f\x93\x63\xfb\xbf\x31\x7f\x56\x6c\x1a\xbf\xaa\x1b\x49\x61\x0f\x0f\xb1\x59\x65\x1d\x4f\xfb\x8c\xcf\x00\x00\x00\xff\xff\x66\x64\x1a\x13\xc2\x01\x00\x00")

func authorizationK8sIoV1SubjectaccessreviewsYamlBytes() ([]byte, error) {
	return bindataRead(
		_authorizationK8sIoV1SubjectaccessreviewsYaml,
		"authorization.k8s.io/v1/subjectaccessreviews.yaml",
	)
}

func authorizationK8sIoV1SubjectaccessreviewsYaml() (*asset, error) {
	bytes, err := authorizationK8sIoV1SubjectaccessreviewsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "authorization.k8s.io/v1/subjectaccessreviews.yaml", size: 450, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _autoscalingV1HorizontalpodautoscalersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\x03\x31\x0c\x86\xf7\x3c\x85\x5f\xa0\x57\xdd\x86\xb2\x21\x31\x30\x21\x84\x10\xbb\x49\xac\xd6\x6a\x12\x5b\x76\xee\x06\x9e\x1e\x5d\x5b\x4e\xc7\x70\xb0\x26\x9f\xff\xff\xff\x50\xf9\x83\xcc\x59\x5a\x84\x4a\x1d\x07\x54\xf5\x24\x99\x86\x24\xf5\x38\x8f\x58\xf4\x8c\x63\xb8\x70\xcb\x11\xde\xc8\x65\xb2\x44\x4f\xe4\xc9\x58\xbb\x58\x58\x6e\x32\x76\x8c\x01\x20\x19\x61\x67\x69\xef\x5c\xc9\x3b\x56\x8d\xd0\xa6\x52\x02\x40\xc1\x4f\x2a\xbe\x30\x00\x97\x07\x1f\x58\x8e\x27\x93\x49\x23\xe0\xd4\xc5\x13\x16\x6e\xa7\xed\xef\xad\xef\x59\x8c\xbf\xa4\x75\x2c\xaf\x92\x1f\xef\x24\xd9\x16\xb4\xfb\xa4\x08\xe7\x15\x56\xc9\xb8\xc2\xbe\xa5\xe7\x1f\xd5\x79\x0c\x00\x0d\x2b\xfd\x5a\x70\x98\xc7\xc3\x6e\x8c\x2b\xa5\xc5\x60\x6d\xbc\x06\xef\x69\xfc\xbb\xff\x56\xfe\xe7\x68\x4f\xa2\x14\xe1\x05\x2b\xb9\x62\xa2\x7c\x7d\xdd\x3a\x7c\x07\x00\x00\xff\xff\xfc\x83\xcd\x5c\xbe\x01\x00\x00")

func autoscalingV1HorizontalpodautoscalersYamlBytes() ([]byte, error) {
	return bindataRead(
		_autoscalingV1HorizontalpodautoscalersYaml,
		"autoscaling/v1/horizontalpodautoscalers.yaml",
	)
}

func autoscalingV1HorizontalpodautoscalersYaml() (*asset, error) {
	bytes, err := autoscalingV1HorizontalpodautoscalersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "autoscaling/v1/horizontalpodautoscalers.yaml", size: 446, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _batchV1JobsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\xb1\x6e\x03\x21\x0c\x06\xe0\x9d\xa7\xf0\x0b\xe4\xa2\xdb\x2a\xe6\x4e\x1d\x3a\x54\x55\x77\x63\xac\x86\x06\xb0\x85\x39\x9e\xbf\xba\x4b\x1a\x51\x65\xfd\xf1\xff\x7f\xa0\xa6\x2f\x6e\x96\xa4\x7a\x28\xdc\x71\x41\x55\x23\x89\xbc\x90\x94\xf3\x58\x31\xeb\x05\x57\x77\x4d\x35\x7a\xf8\x60\x93\xad\x11\xbf\xb2\x51\x4b\xda\xa5\xb9\xbd\x13\xb1\xa3\x77\x00\xd4\x18\x7b\x92\xfa\x99\x0a\x5b\xc7\xa2\x1e\xea\x96\xb3\x03\xc8\x18\x38\xdb\x7e\x03\x70\x7d\xb1\x25\xc9\xf9\xbb\xc9\xa6\x1e\x02\x76\xba\xcc\xf9\x4d\x7a\x93\x30\x87\xed\x0e\x7b\xf8\x91\x60\xf3\xcb\xf8\xfb\xfc\x58\x1d\x40\xc5\xc2\xf7\xcd\xd3\x58\x4f\xc7\xb1\x29\xd3\x2e\x3f\x36\x8e\xfa\x33\xff\xcf\xbd\x0d\x3d\x30\x23\x51\xf6\xf0\x8e\x85\x4d\x91\x38\x1e\xe9\x6c\xff\x06\x00\x00\xff\xff\x68\x76\xcd\xd1\x48\x01\x00\x00")

func batchV1JobsYamlBytes() ([]byte, error) {
	return bindataRead(
		_batchV1JobsYaml,
		"batch/v1/jobs.yaml",
	)
}

func batchV1JobsYaml() (*asset, error) {
	bytes, err := batchV1JobsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "batch/v1/jobs.yaml", size: 328, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _batchV1beta1CronjobsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x7f\x20\x0e\xbc\x15\x5a\xdb\xa9\x43\x87\xa2\xe8\x4e\xd1\x44\xa3\x46\x12\x09\x52\xf6\xf7\x17\x4e\xdc\xc0\x81\xd7\x3b\xde\xdd\x23\x6a\xfe\x66\xf3\x2c\x2d\x42\xe5\x8e\x03\xaa\x3a\xc9\xc4\x03\x49\x3d\x2f\x23\x16\xbd\xe0\x18\xae\xb9\x4d\x11\x3e\xd9\x65\x36\xe2\x37\x76\xb2\xac\x5d\x2c\xac\x99\x09\x3b\xc6\x00\x40\xc6\xd8\xb3\xb4\xaf\x5c\xd9\x3b\x56\x8d\xd0\xe6\x52\x02\x40\xc1\xc4\xc5\xd7\x1b\x80\xeb\x8b\x0f\x59\xce\x3f\x26\xb3\x46\x48\xd8\xe9\xb2\xd7\xef\x4b\xaf\x26\xed\x5d\xd2\xde\xb0\x6d\x3c\x02\x99\xb4\x5f\x49\xbe\x77\x97\xff\x27\x96\x31\x71\xc7\x31\x00\x34\xac\xbc\x0d\x9c\x36\xf5\xf4\x88\xba\x32\xad\x3c\x8f\xd6\x5b\xd9\x11\xea\x40\x73\x6f\x7d\x42\x70\x12\xe5\x08\x1f\x58\xd9\x15\x89\xa7\x9b\x7a\x20\xfa\x0b\x00\x00\xff\xff\xf7\xe6\x71\x95\x6b\x01\x00\x00")

func batchV1beta1CronjobsYamlBytes() ([]byte, error) {
	return bindataRead(
		_batchV1beta1CronjobsYaml,
		"batch/v1beta1/cronjobs.yaml",
	)
}

func batchV1beta1CronjobsYaml() (*asset, error) {
	bytes, err := batchV1beta1CronjobsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "batch/v1beta1/cronjobs.yaml", size: 363, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _certificatesK8sIoV1beta1CertificatesigningrequestsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x4b\x4e\xc3\x40\x0c\x40\xf7\x39\x85\x2f\xd0\x54\xd9\xa1\xd9\x96\x13\x14\xc4\xde\x9d\x98\x60\x75\x3e\xc6\xf6\xe4\xfc\x28\x4d\x81\xa0\x56\xc0\x76\xe6\xd9\x7e\x0f\x85\x5f\x48\x8d\x6b\x09\x90\xc9\xb1\x47\x11\x8b\x75\xa4\x3e\xd6\xbc\x9f\x07\x4c\xf2\x86\x43\x77\xe6\x32\x06\x38\x92\xd5\xa6\x91\x1e\xc9\xa2\xb2\x78\xd5\x6e\x99\x19\xd1\x31\x74\x00\x51\x09\x9d\x6b\x79\xe6\x4c\xe6\x98\x25\x40\x69\x29\x75\x00\x09\x4f\x94\x6c\x61\x00\xce\x0f\xd6\x73\xdd\x4f\x5a\x9b\x04\x88\xa4\xce\xaf\x1c\xd1\xc9\xfa\xf5\x6b\x4b\xad\x77\x0f\xdf\xd0\x13\x4f\x85\xcb\x74\xa4\xf7\x46\xe6\x5b\x54\xaf\x72\x3f\x77\xae\xb8\xae\xb8\x6d\xf9\xf9\x33\x7b\x1e\x4e\xe4\x38\x74\x00\x05\x33\xdd\x55\xda\x5d\x99\xdd\x2f\xab\x4d\x28\x2e\x85\x5f\x1e\x97\x63\x7f\x65\xfe\xa3\xef\xd6\xea\x4e\x94\xc5\x2a\x14\xe0\x90\x9a\x39\xe9\xe5\xe9\x26\xf0\x23\x00\x00\xff\xff\x57\xe2\xa5\xb6\xec\x01\x00\x00")

func certificatesK8sIoV1beta1CertificatesigningrequestsYamlBytes() ([]byte, error) {
	return bindataRead(
		_certificatesK8sIoV1beta1CertificatesigningrequestsYaml,
		"certificates.k8s.io/v1beta1/certificatesigningrequests.yaml",
	)
}

func certificatesK8sIoV1beta1CertificatesigningrequestsYaml() (*asset, error) {
	bytes, err := certificatesK8sIoV1beta1CertificatesigningrequestsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "certificates.k8s.io/v1beta1/certificatesigningrequests.yaml", size: 492, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coordinationK8sIoV1LeasesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xcd\x4a\x04\x31\x0c\xc7\xef\x7d\x8a\xbc\xc0\xce\x32\x37\xe9\xd9\xa3\x78\x10\xf1\x1e\xd3\xa0\x65\xdb\x26\x24\x9d\x79\x7e\xe9\xcc\x2a\x45\x04\xaf\xf9\x7f\xfd\x82\x9a\xdf\xd8\x3c\x4b\x8b\x50\xb9\xe3\x82\xaa\x4e\x92\x78\x21\xa9\xd7\x7d\xc5\xa2\x9f\xb8\x86\x5b\x6e\x29\xc2\x0b\xbb\x6c\x46\xfc\xc8\x4e\x96\xb5\x8b\x85\x91\x49\xd8\x31\x06\x00\x32\xc6\x9e\xa5\xbd\xe6\xca\xde\xb1\x6a\x84\xb6\x95\x12\x00\x0a\xbe\x73\xf1\xe1\x01\xb8\x3d\xf8\x92\xe5\xfa\x61\xb2\x69\x04\x12\xb1\x94\xdb\x91\x5b\x4e\x69\x76\x9d\xbb\x4f\x8c\xce\xf3\xd9\xee\x20\x11\xca\x90\x7c\xd6\xf6\xef\x77\xf6\x35\x00\x34\xac\xfc\xe7\xca\x65\x5f\x2f\xf7\xb0\x2b\xd3\x60\xfb\x69\x3d\xea\xfe\x03\xfc\x45\x76\x0e\x4d\x38\x4e\xa2\x1c\xe1\x19\x2b\xbb\x22\x71\x3a\xae\x33\xdd\x57\x00\x00\x00\xff\xff\x1a\xb7\x40\xa1\x7c\x01\x00\x00")

func coordinationK8sIoV1LeasesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coordinationK8sIoV1LeasesYaml,
		"coordination.k8s.io/v1/leases.yaml",
	)
}

func coordinationK8sIoV1LeasesYaml() (*asset, error) {
	bytes, err := coordinationK8sIoV1LeasesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "coordination.k8s.io/v1/leases.yaml", size: 380, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1BindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xb1\x4e\x04\x31\x0c\x44\xfb\x7c\x85\x75\xfd\xed\x69\x3b\x94\x12\x51\x53\x20\x44\xef\x73\xac\xc3\xba\x24\xb6\xe2\xec\x7e\x3f\xda\x5b\x58\x05\x68\x67\xc6\xf3\xc6\x68\xf2\xc1\xcd\x45\x6b\x84\xc2\x1d\x27\x34\x73\xd2\xc4\x13\x69\xb9\xac\x33\x66\xfb\xc4\x39\xdc\xa5\xa6\x08\x6f\xec\xba\x34\xe2\x17\x76\x6a\x62\x5d\x5b\xd8\x6e\x12\x76\x8c\x01\x80\x1a\x63\x17\xad\xef\x52\xd8\x3b\x16\x8b\x50\x97\x9c\x03\x40\xc6\x2b\x67\xdf\x32\x00\xf7\x27\x9f\x44\x2f\xb7\xa6\x8b\x45\x38\x9d\x46\x71\xc7\x3c\x4b\x4d\x52\x6f\xa3\xd1\xbe\xc9\x11\xae\xbb\xe9\xa3\xbb\xfe\x7c\xb0\xce\x01\xa0\x62\xe1\x08\xa4\x8d\xcf\xeb\x7c\x3e\xf2\x6e\x4c\xdb\x82\xa3\xea\xd1\xf0\x67\xc6\x3f\xfe\x5e\xf6\x0b\xea\xa4\xc6\x11\x5e\xb1\xb0\x1b\x12\xa7\x87\x3a\x6e\xf8\x0a\x00\x00\xff\xff\xa1\x6e\x20\x48\x55\x01\x00\x00")

func coreV1BindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1BindingsYaml,
		"core/v1/bindings.yaml",
	)
}

func coreV1BindingsYaml() (*asset, error) {
	bytes, err := coreV1BindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/bindings.yaml", size: 341, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ComponentstatusesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4d\x4e\xc4\x30\x0c\x85\xf7\x39\x85\x35\xfb\xe9\xa8\x3b\x94\xed\x70\x02\x40\xec\x4d\x6a\x41\x34\x49\x6c\xd9\x4e\xcf\x8f\x1a\x28\x2a\x7f\xdb\xa7\xef\x3d\x7f\x46\xc9\xcf\xa4\x96\xb9\x45\xa8\xe4\x38\xa1\x88\x25\x5e\x68\x4a\x5c\x2f\xeb\x8c\x45\xde\x70\x0e\xb7\xdc\x96\x08\x0f\x64\xdc\x35\xd1\x3d\x59\xd2\x2c\xce\x1a\xb6\xce\x82\x8e\x31\x00\x24\x25\xf4\xcc\xed\x29\x57\x32\xc7\x2a\x11\x5a\x2f\x25\x00\x14\x7c\xa1\x62\x1b\x03\x70\xbb\xb3\x29\xf3\xe5\x55\xb9\x4b\x84\xd3\xe9\x18\x7e\x9c\xb9\x72\x15\x6e\xd4\xfc\xd1\xd1\xbb\x1d\x01\xfd\x34\x88\x90\x76\xc8\x06\x44\xdf\xb0\x75\x7f\x69\x9d\x03\x40\xc3\x3a\x0a\x4a\xe7\x75\x3e\xff\x2e\x9a\x50\xda\xdc\xbe\xc6\xc7\xd4\x0f\xc1\x7f\xcd\xf6\xf5\xbf\x74\x2c\xb1\x50\x84\x6b\xe9\xe6\xa4\x23\x3a\xaa\xbd\x07\x00\x00\xff\xff\x21\xa4\xec\xb6\x7d\x01\x00\x00")

func coreV1ComponentstatusesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ComponentstatusesYaml,
		"core/v1/componentstatuses.yaml",
	)
}

func coreV1ComponentstatusesYaml() (*asset, error) {
	bytes, err := coreV1ComponentstatusesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/componentstatuses.yaml", size: 381, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ConfigmapsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x4e\xc4\x30\x0c\xc7\xf7\x3c\x85\x75\xfb\xf5\xd4\x0d\x65\x85\x15\x06\x84\xd8\x8d\x6b\x8e\xe8\x92\xd8\xb2\xd3\x3e\x3f\x6a\xa0\x28\x20\x56\xff\xbf\x7e\x46\x4d\xaf\x6c\x9e\xa4\x46\x28\xdc\x70\x42\x55\x27\x59\x78\x22\x29\x97\x6d\xc6\xac\x1f\x38\x87\x5b\xaa\x4b\x84\x67\x76\x59\x8d\xf8\x81\x9d\x2c\x69\x13\x0b\x7b\x66\xc1\x86\x31\x00\x90\x31\xb6\x24\xf5\x25\x15\xf6\x86\x45\x23\xd4\x35\xe7\x00\x90\xf1\x8d\xb3\xef\x1e\x80\xdb\x9d\x4f\x49\x2e\x57\x93\x55\x23\x9c\x4e\xe3\xf1\x6b\xe6\x5e\xea\x7b\xba\x3e\xa2\x8e\x92\x7d\x6f\x47\xa0\x2e\x17\x54\x1f\xf5\xed\xf8\x62\x9b\x03\x40\xc5\xd2\x9d\xc6\xe7\x6d\x3e\x0f\x09\x57\xa6\x9d\xe3\xa7\xae\x77\xfc\x81\xf9\x87\xe2\x28\xfc\x35\xed\x24\xca\x11\x9e\xb0\xb0\x2b\x12\x2f\xfd\x3a\x92\x7c\x06\x00\x00\xff\xff\x21\xca\x82\x86\x5f\x01\x00\x00")

func coreV1ConfigmapsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ConfigmapsYaml,
		"core/v1/configmaps.yaml",
	)
}

func coreV1ConfigmapsYaml() (*asset, error) {
	bytes, err := coreV1ConfigmapsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/configmaps.yaml", size: 351, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1EndpointsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\x05\x91\x3d\x0e\xbc\x15\x9a\xdb\xb5\x43\x51\x74\x67\xa9\x43\x2b\x44\x12\x09\x51\xf6\xf3\x17\x4e\xfa\xe3\x06\x59\xef\x78\x77\x1f\xd9\xf2\x1b\xba\x67\x6d\x91\x2a\x06\x4f\x6c\xe6\xa2\x09\x93\x68\x3d\xad\x33\x17\xfb\xe4\x39\x9c\x73\x4b\x91\x5e\xe0\xba\x74\xc1\x23\x5c\x7a\xb6\xa1\x3d\x6c\x99\xc4\x83\x63\x20\x92\x0e\x1e\x59\xdb\x6b\xae\xf0\xc1\xd5\x22\xb5\xa5\x94\x40\x54\xf8\x1d\xc5\xb7\x1b\xa2\xf3\x83\x4f\x59\x4f\x1f\x5d\x17\x8b\x74\x38\xec\xc5\xeb\xcc\x53\x4b\xa6\xb9\x0d\xdf\x5b\xfd\x7b\x3b\x12\xee\xd9\xeb\xcf\x13\xeb\x1c\x88\x1a\x57\x44\x12\xed\x38\xae\xf3\xf1\x2f\xe0\x06\xd9\x28\x7e\xcb\x2e\x15\x37\x28\x77\x18\xae\x7d\xff\x87\x5d\xd4\x10\xe9\x99\x2b\xdc\x58\x90\x2e\xea\x9e\xe3\x2b\x00\x00\xff\xff\x11\xec\xab\x41\x5c\x01\x00\x00")

func coreV1EndpointsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1EndpointsYaml,
		"core/v1/endpoints.yaml",
	)
}

func coreV1EndpointsYaml() (*asset, error) {
	bytes, err := coreV1EndpointsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/endpoints.yaml", size: 348, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1EventsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xbd\x4e\x2b\x31\x10\x85\x7b\x3f\xc5\x28\x7d\x36\xda\xee\xca\xf5\xa5\xa5\x40\x88\x7e\x98\x3d\x02\x2b\xb6\x67\xe4\xf1\xfa\xf9\xd1\x26\x01\x59\x69\xcf\xdf\x77\xd8\xd2\x07\x9a\x27\xad\x91\x0a\x3a\x2f\x6c\xe6\xa2\x1b\x16\xd1\x72\x19\x2b\x67\xfb\xe6\x35\x5c\x53\xdd\x22\xbd\xc1\x75\x6f\x82\xff\x70\x69\xc9\xba\xb6\x70\x74\x36\xee\x1c\x03\x91\x34\x70\x4f\x5a\xdf\x53\x81\x77\x2e\x16\xa9\xee\x39\x07\xa2\xcc\x9f\xc8\x7e\x64\x88\xae\xff\x7c\x49\x7a\xf9\x6a\xba\x5b\xa4\xd3\x69\x16\xef\x98\x97\x81\xda\x67\xb9\x3d\xb8\x91\x70\x58\x3e\x7b\xe3\xf7\xfd\x58\x03\x51\xe5\x82\x48\xa2\x0d\xe7\xb1\x9e\x1f\x69\x37\xc8\xc1\xfe\x9b\xb9\xf5\x9f\x0e\x3c\x91\xef\x43\x13\xce\x45\x0d\x91\x5e\xb9\xc0\x8d\x05\xdb\x4d\x9d\xe9\x3f\x01\x00\x00\xff\xff\xdf\x3a\x26\xbe\x4b\x01\x00\x00")

func coreV1EventsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1EventsYaml,
		"core/v1/events.yaml",
	)
}

func coreV1EventsYaml() (*asset, error) {
	bytes, err := coreV1EventsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/events.yaml", size: 331, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1LimitrangesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x6a\x03\x31\x0c\xc7\xf7\x7b\x0a\x91\x3d\x17\x6e\x2b\x9e\x3b\x96\x0e\xa1\x74\x57\x75\x22\x15\xb1\x2d\x21\xf9\xee\xf9\x8b\x93\xb6\x98\x90\x55\xff\xaf\x9f\xd0\xe4\x93\x3d\x44\x6b\x82\xc2\x0d\x67\x34\x0b\xd2\x95\x67\xd2\x72\xda\x17\xcc\xf6\x8d\xcb\x74\x95\xba\x26\x38\x73\xe8\xe6\xc4\xaf\x1c\xe4\x62\x4d\x7d\xea\x99\x15\x1b\xa6\x09\x80\x9c\xb1\x89\xd6\x0f\x29\x1c\x0d\x8b\x25\xa8\x5b\xce\x13\x40\xc6\x2f\xce\xd1\x3d\x00\xd7\x97\x98\x45\x4f\x17\xd7\xcd\x12\x1c\x0e\xe3\xf1\x3e\xf3\x26\x45\xda\x19\xeb\x85\x47\xcd\x7f\xc7\x13\xe4\xae\x7b\xd7\x63\x34\xec\x7f\x7f\xec\xcb\x04\x50\xb1\x70\x02\x52\xe7\xe3\xbe\x1c\xc7\x48\x18\x53\x47\xf9\x2f\xbc\x95\x3c\xf0\x3c\x03\xb9\x57\x3e\xae\x07\xa9\x71\x82\x77\x2c\x1c\x86\xc4\xeb\xed\x3a\xc2\xfc\x04\x00\x00\xff\xff\xf1\x64\x2e\xfb\x64\x01\x00\x00")

func coreV1LimitrangesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1LimitrangesYaml,
		"core/v1/limitranges.yaml",
	)
}

func coreV1LimitrangesYaml() (*asset, error) {
	bytes, err := coreV1LimitrangesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/limitranges.yaml", size: 356, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1NamespacesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x4e\xc3\x40\x0c\xc7\xf7\x7b\x0a\xab\x7b\x53\x65\x43\x5e\x61\x66\x40\x88\xdd\x38\x16\x9c\x7a\x77\xb6\xec\x4b\x9e\x1f\x25\xa5\xe8\x54\xb1\xfa\xff\xf5\x33\x59\xfe\x10\x8f\xac\x0d\xa1\x4a\xa7\x89\xcc\x82\x75\x91\x89\xb5\x5e\xb6\x99\x8a\x7d\xd3\x9c\xae\xb9\x2d\x08\x6f\x12\xba\x3a\xcb\x8b\x04\x7b\xb6\xae\x9e\xf6\xcc\x42\x9d\x30\x01\xb0\x0b\xf5\xac\xed\x3d\x57\x89\x4e\xd5\x10\xda\x5a\x4a\x02\x28\xf4\x29\x25\x76\x0f\xc0\xf5\x29\xa6\xac\x97\x2f\xd7\xd5\x10\x4e\xa7\xf1\x78\x9b\x79\xa5\x2a\x61\xc4\x32\x4a\xfe\xbb\x8d\xd0\xee\x72\x8c\xfa\x76\xff\x62\x9b\x13\x1c\x1e\x04\x56\x97\xf3\x36\x9f\x87\x44\x98\xf0\xce\xf1\x57\x77\x74\x3c\xc0\xfc\x43\x71\x2b\x7c\x98\x0e\x56\x13\x84\xe7\xb2\x46\x17\x3f\x4e\x23\xc6\x4f\x00\x00\x00\xff\xff\x5f\xd0\xb2\x4d\x5c\x01\x00\x00")

func coreV1NamespacesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1NamespacesYaml,
		"core/v1/namespaces.yaml",
	)
}

func coreV1NamespacesYaml() (*asset, error) {
	bytes, err := coreV1NamespacesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/namespaces.yaml", size: 348, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1NodesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xce\xbd\x4e\xc4\x30\x10\x04\xe0\xde\x4f\xb1\xba\xfe\x72\x4a\x87\xdc\x42\x4d\x81\x10\xfd\x62\x8f\xc0\x3a\xdb\xbb\xda\x75\xf2\xfc\x28\x17\x7e\xc2\xb5\xe3\x9d\xf9\xcc\x5a\xde\x60\x5e\xa4\x47\x6a\x18\x3c\xb1\xaa\x27\xc9\x98\x92\xb4\xcb\x3a\x73\xd5\x4f\x9e\xc3\xb5\xf4\x1c\xe9\x05\x2e\x8b\x25\x3c\xc1\x93\x15\x1d\x62\x61\xeb\x64\x1e\x1c\x03\x51\x32\xf0\x28\xd2\x5f\x4b\x83\x0f\x6e\x1a\xa9\x2f\xb5\x06\xa2\xca\xef\xa8\xbe\xdd\x10\x5d\x1f\x7c\x2a\x72\xf9\x30\x59\x34\xd2\xe9\x74\x0c\x77\xe6\x59\x32\x8e\xa9\x7d\xb3\x91\xba\x64\xf8\xf1\x69\xfd\xf9\xfb\x3a\x07\xa2\xce\x0d\x91\x92\x18\xce\xeb\x7c\xde\x8f\x5d\x91\x36\xf8\x77\xe4\x56\xbf\xd3\xff\xb3\xfb\xcc\x9f\xe5\x49\x14\x91\x1e\xeb\xe2\x03\x76\x8b\x8e\xee\x57\x00\x00\x00\xff\xff\x03\xca\x41\xb9\x43\x01\x00\x00")

func coreV1NodesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1NodesYaml,
		"core/v1/nodes.yaml",
	)
}

func coreV1NodesYaml() (*asset, error) {
	bytes, err := coreV1NodesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/nodes.yaml", size: 323, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1PersistentvolumeclaimsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x41\x4b\x04\x31\x0c\x85\xef\xfd\x15\x61\xef\x3b\xcb\xdc\xa4\x57\x3d\x8b\x88\xec\x3d\x66\x82\x96\x6d\x9b\x90\x74\xfa\xfb\xa5\xb3\xba\x0c\x82\xee\xf5\xf1\xbd\xbc\x2f\xa8\xe9\xcc\xe6\x49\x6a\x84\xc2\x0d\x27\x54\x75\x92\x85\x27\x92\x72\xea\x33\x66\xfd\xc4\x39\x5c\x52\x5d\x22\xbc\xb2\xcb\x6a\xc4\x4f\xec\x64\x49\x9b\x58\x18\x9d\x05\x1b\xc6\x00\x40\xc6\xd8\x92\xd4\xb7\x54\xd8\x1b\x16\x8d\x50\xd7\x9c\x03\x40\xc6\x77\xce\x3e\x18\x80\xcb\x83\x4f\x49\x4e\x1f\x26\xab\x46\x38\x1c\xf6\xe1\x75\xe6\x65\x08\x79\xe3\xda\xce\x92\xd7\xc2\x8f\x19\x53\xd9\x63\xf6\xed\x11\x41\x6f\x68\xdf\x50\x1a\xa8\xef\xd9\xfe\xf3\x5d\x9f\x03\x40\xc5\xc2\x11\x48\x8c\x8f\x7d\x3e\xfe\xd1\x76\x65\x1a\xae\xb7\x99\xed\xde\x2f\xe1\x3b\xa6\xd7\xa1\x7f\xf4\x9c\x44\x39\xc2\x33\x16\x76\x45\xe2\x65\x4b\xf7\xb6\x5f\x01\x00\x00\xff\xff\x23\x6c\xa9\xd7\x9b\x01\x00\x00")

func coreV1PersistentvolumeclaimsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1PersistentvolumeclaimsYaml,
		"core/v1/persistentvolumeclaims.yaml",
	)
}

func coreV1PersistentvolumeclaimsYaml() (*asset, error) {
	bytes, err := coreV1PersistentvolumeclaimsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/persistentvolumeclaims.yaml", size: 411, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1PersistentvolumesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4d\x4e\xc4\x30\x0c\x85\xf7\x39\x85\x35\xfb\xe9\xa8\x3b\x94\x2d\x1c\x00\x21\x34\x7b\x93\x5a\x10\x4d\x12\x5b\xb6\x93\xf3\xa3\x76\xa0\xaa\xf8\xd9\x3e\x7d\xef\xf9\x33\x4a\xbe\x92\x5a\xe6\x16\xa1\x92\xe3\x84\x22\x96\x78\xa1\x29\x71\xbd\x8c\x19\x8b\x7c\xe0\x1c\x6e\xb9\x2d\x11\x5e\xc8\xb8\x6b\xa2\x27\xb2\xa4\x59\x9c\x35\xac\x9d\x05\x1d\x63\x00\x48\x4a\xe8\x99\xdb\x6b\xae\x64\x8e\x55\x22\xb4\x5e\x4a\x00\x28\xf8\x46\xc5\x56\x06\xe0\xf6\x60\x53\xe6\xcb\xbb\x72\x97\x08\xa7\xd3\x31\xbc\x9f\x79\x5e\x85\xcc\xa9\xf9\x95\x4b\xaf\x74\x24\xf4\x4b\x21\x82\xec\xd4\xd8\x28\x3b\x62\xe3\xfb\xa7\x31\x07\x80\x86\x95\x22\x24\x56\x3a\x8f\xf9\xfc\xbb\x68\x42\x69\x95\xdb\xc7\xb7\xa9\x1f\x86\xff\xab\xdd\xe7\xff\xf6\xb1\xc4\x42\x11\x1e\x4b\x37\x27\xdd\xa2\xa3\xdb\x67\x00\x00\x00\xff\xff\xdc\x79\xef\xb5\x7f\x01\x00\x00")

func coreV1PersistentvolumesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1PersistentvolumesYaml,
		"core/v1/persistentvolumes.yaml",
	)
}

func coreV1PersistentvolumesYaml() (*asset, error) {
	bytes, err := coreV1PersistentvolumesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/persistentvolumes.yaml", size: 383, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1PodsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x53\xcd\x8a\xdb\x30\x10\xbe\xfb\x29\x06\x5f\x16\x0a\xf1\x92\x5b\xd1\xb1\x5b\x7a\x29\xdb\x2e\xa1\xec\xa5\xed\x61\x2a\x4f\x12\xb1\xd2\x8c\x90\x64\x97\x10\xf2\xee\x45\x56\x9c\xc4\xbb\x74\xdb\xb2\xa6\xeb\x8b\xf1\x68\xe6\xfb\xd1\xe7\x41\x6f\xee\x29\x44\x23\xac\xc0\x51\xc2\x06\xbd\x8f\x5a\x5a\x6a\xb4\xb8\xeb\x7e\x89\xd6\x6f\x71\x59\x3d\x18\x6e\x15\xac\x28\x4a\x17\x34\xbd\xa7\xa8\x83\xf1\x49\x42\x95\x67\x5a\x4c\xa8\x2a\x00\x1d\x08\x93\x11\xfe\x62\x1c\xc5\x84\xce\x2b\xe0\xce\xda\x0a\xc0\xe2\x0f\xb2\x31\xf7\x00\x3c\xbc\x8d\x8d\x91\xeb\x4d\x90\xce\x2b\xa8\xeb\xcb\x62\xa1\xb9\x93\xf6\xb2\x18\x8e\xac\x0a\xbc\xb4\xf1\xf2\xa4\x1f\x95\xf7\xcb\x0a\x80\xd1\x91\x02\x2d\x81\x16\xfd\x72\x31\xf4\x46\x4f\x3a\xb3\x9e\x20\x86\xe9\x47\xd4\x13\xce\x02\x72\x22\x8a\x5a\x3c\x29\xf8\x84\x8e\xa2\x47\x4d\xa5\x69\xca\xab\x85\x99\x74\x36\x7e\x74\xb8\x80\x84\x61\x43\xa9\x7c\x5d\x30\xe6\xbb\x3d\xd5\xa6\x20\xe5\x39\x5b\x8d\x09\x13\xad\x3b\x1b\x29\x8d\x23\x69\x97\xa5\x7c\xfe\xc9\xd4\xbe\xdb\x1d\x6b\x96\x7a\xb2\x0a\x6e\x84\x53\x10\x6b\x29\xcc\x26\x20\x90\xb7\x46\xe3\xbc\xfc\xc7\x2b\xff\x33\x3b\x4b\x4b\x53\xde\x5b\x4c\x7a\xbb\xa2\x75\x35\xb6\xae\x29\x10\x6b\x8a\x23\xc9\x02\xae\xf6\x4d\x0e\xbc\xc9\xc3\x39\xb1\xc3\xd5\x4c\x6a\x7c\x3e\x8d\x89\x38\xf5\x62\x3b\x47\xda\xa2\x71\xcf\xca\xe3\xf1\x87\xb9\xc3\xb4\x55\x50\x8f\x6b\xd2\x9c\x0e\xea\x67\x8d\x04\xe4\x0d\x41\xb1\x53\x38\xe3\xd7\x37\xdf\x0f\xfb\xe6\x2c\xe5\x7e\x28\xdf\x64\x29\xcd\x20\x68\xb0\xbc\xaf\xbf\x71\x7d\xd8\x13\xb7\xb3\xb9\xd7\xc2\x6b\xb3\x71\xe8\xff\x9b\x63\x2d\x9c\xd0\x30\x85\x6c\xba\x21\xee\x3f\x04\x71\xc5\x7f\x11\x73\x8b\x7e\x45\xeb\x01\xfa\xa9\xe3\xbf\xc0\x2b\x58\x3d\xda\x8e\x32\xf4\x19\xf5\x23\xed\xfe\x05\x78\x12\xcd\x09\xe4\x37\xe3\x2f\x4f\x22\x92\x0e\x8f\xf7\xf1\x75\x62\x28\x4a\x66\xcd\xa0\x40\xbe\x24\x80\x82\x70\x7c\x3d\xdd\x86\x5f\x01\x00\x00\xff\xff\x31\xad\x7e\xba\xeb\x06\x00\x00")

func coreV1PodsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1PodsYaml,
		"core/v1/pods.yaml",
	)
}

func coreV1PodsYaml() (*asset, error) {
	bytes, err := coreV1PodsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/pods.yaml", size: 1771, mode: os.FileMode(420), modTime: time.Unix(1565764398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1PodtemplatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcd\x4e\x03\x31\x0c\x84\xef\x79\x0a\xab\xf7\x6e\xb5\x37\x94\x33\x67\x84\x50\xc5\xdd\x38\x23\x88\x9a\xc4\x56\x9c\xdd\xe7\x47\xdb\x16\xb4\xfc\x5c\xc7\xf3\xf3\x99\x2d\xbf\xa2\x7b\xd6\x16\xa9\x62\xf0\xc4\x66\x2e\x9a\x30\x89\xd6\xd3\x3a\x73\xb1\x0f\x9e\xc3\x25\xb7\x14\xe9\x05\xae\x4b\x17\x3c\xc2\xa5\x67\x1b\xda\xc3\x96\x49\x3c\x38\x06\x22\xe9\xe0\x91\xb5\x9d\x73\x85\x0f\xae\x16\xa9\x2d\xa5\x04\xa2\xc2\x6f\x28\xbe\x79\x88\x2e\x0f\x3e\x65\x3d\xbd\x77\x5d\x2c\xd2\xe1\xb0\x17\x6f\x33\xcf\x9a\xce\xa8\x56\x78\x60\x7f\xec\xf7\xf5\x48\xa6\x69\xdc\x0d\xbe\x77\xac\x5f\x9f\xac\x73\x20\x6a\x5c\x11\x49\xb4\xe3\xb8\xce\xc7\x1f\x19\x37\xc8\x46\xf3\x5d\x79\x6d\xf9\x85\xf4\x2f\xcb\xad\xf4\x0f\x80\x8b\x1a\x22\x3d\x71\x85\x1b\x0b\xd2\x55\xdd\xf3\x7c\x06\x00\x00\xff\xff\xae\x1c\x42\x09\x69\x01\x00\x00")

func coreV1PodtemplatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1PodtemplatesYaml,
		"core/v1/podtemplates.yaml",
	)
}

func coreV1PodtemplatesYaml() (*asset, error) {
	bytes, err := coreV1PodtemplatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/podtemplates.yaml", size: 361, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ReplicationcontrollersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x0a\xeb\xfa\xcb\x29\x1d\xda\x16\x6a\x0a\x84\xe8\x8d\x63\xc1\xea\xbc\x6b\xcb\xde\xe4\xfb\x51\x02\x17\x22\x24\xa0\xb5\xde\xcc\x3c\xa3\x95\x17\xf6\x28\xda\x32\x54\xee\x38\xa0\x59\x90\x4e\x3c\x90\xd6\xcb\x32\xa2\xd8\x3b\x8e\xe9\x5a\xda\x94\xe1\x89\x43\x67\x27\x7e\xe0\x20\x2f\xd6\xd5\xd3\x9a\x99\xb0\x63\x4e\x00\xe4\x8c\xbd\x68\x7b\x2e\x95\xa3\x63\xb5\x0c\x6d\x16\x49\x00\x82\xaf\x2c\xb1\x32\x00\xd7\xbb\x18\x8a\x5e\xde\x5c\x67\xcb\x70\x3a\x1d\x8f\xb7\x19\x93\x42\x5b\xd5\xbd\xb6\xee\x2a\xc2\x7e\xc4\xfc\xcb\x23\x83\x7f\xa3\xb4\xa3\x71\x64\x97\xdb\x77\xcb\x98\x00\x1a\x56\xce\x40\xea\x7c\x5e\xc6\xf3\x2f\xe9\x30\xa6\xd5\x75\x9f\xd9\xfa\x7e\x08\xff\x63\xfa\x39\xf4\x87\x5e\x90\x1a\x67\x78\xc4\xca\x61\x48\x3c\x6d\xd7\xa3\xed\x47\x00\x00\x00\xff\xff\xcc\xc5\xdd\x44\x9b\x01\x00\x00")

func coreV1ReplicationcontrollersYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ReplicationcontrollersYaml,
		"core/v1/replicationcontrollers.yaml",
	)
}

func coreV1ReplicationcontrollersYaml() (*asset, error) {
	bytes, err := coreV1ReplicationcontrollersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/replicationcontrollers.yaml", size: 411, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ResourcequotasYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xbd\x4e\x03\x31\x0c\xc7\xf7\x3c\x85\xd5\xbd\x57\xdd\x86\x3c\x33\x23\x81\x10\xbb\xf1\x59\x10\x35\x89\x8d\x9d\xbb\xe7\x47\x57\x28\x0a\x15\x6c\xd1\xff\x2b\x3f\x93\xe5\x17\xf1\xc8\xda\x10\xaa\x74\x9a\xc8\x2c\x58\x17\x99\x58\xeb\x69\x9b\xa9\xd8\x3b\xcd\xe9\x9c\xdb\x82\xf0\x24\xa1\xab\xb3\xdc\x4b\xb0\x67\xeb\xea\x69\xef\x2c\xd4\x09\x13\x00\xbb\x50\xcf\xda\x9e\x73\x95\xe8\x54\x0d\xa1\xad\xa5\x24\x80\x42\xaf\x52\x62\xcf\x00\x9c\xef\x62\xca\x7a\x7a\x73\x5d\x0d\xe1\x70\x18\xc5\xdf\xdf\x3c\xae\xda\x69\xb4\xfd\xdb\x40\xb8\xbe\x3e\xf6\x48\x8c\x99\xed\x7a\xcd\x36\x27\x80\x46\x55\x10\x58\x5d\x8e\xdb\x7c\xbc\x69\x85\x09\xef\x4c\x3f\xb3\x97\x9d\x1b\xb0\x7f\x88\xbe\x86\xff\xc0\x08\x56\x13\x84\x07\xaa\x12\x46\x2c\xcb\x45\x1d\xa9\x3e\x03\x00\x00\xff\xff\x01\xdf\x33\xda\x73\x01\x00\x00")

func coreV1ResourcequotasYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ResourcequotasYaml,
		"core/v1/resourcequotas.yaml",
	)
}

func coreV1ResourcequotasYaml() (*asset, error) {
	bytes, err := coreV1ResourcequotasYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/resourcequotas.yaml", size: 371, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1SecretsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x91\x3d\x0e\xbc\x15\x9a\x3b\x77\x68\x8b\xee\x2c\x7d\x68\x85\x48\x22\x21\xca\xfe\xfe\xc2\x4e\x13\x08\x59\x8f\xc7\x7b\x8f\x2d\x7d\xa1\x79\xd2\x1a\xa9\xa0\xf3\xc4\x66\x2e\xba\x60\x12\x2d\x97\x6d\xe6\x6c\xbf\x3c\x87\x6b\xaa\x4b\xa4\x77\xb8\xae\x4d\xf0\x0a\x97\x96\xac\x6b\x0b\xfb\xcf\xc2\x9d\x63\x20\x92\x06\xee\x49\xeb\x67\x2a\xf0\xce\xc5\x22\xd5\x35\xe7\x40\x94\xf9\x1b\xd9\xf7\x0e\xd1\xf5\xc5\xa7\xa4\x97\x9f\xa6\xab\x45\x3a\x9d\xc6\xf0\x86\xf9\x80\x34\xf4\x31\x6f\xff\xe0\x48\x7e\xdc\x7c\x3c\x6e\x77\xff\x6d\x0e\x44\x95\x0b\x22\x89\x36\x9c\xb7\xf9\x7c\xaf\xbb\x41\x76\xfc\x63\xe8\x18\x78\x72\x78\x86\xdf\xa6\x46\xa2\x8b\x1a\x22\xbd\x71\x81\x1b\x0b\x96\x23\x1d\x05\xfe\x02\x00\x00\xff\xff\x52\x78\xbe\xec\x50\x01\x00\x00")

func coreV1SecretsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1SecretsYaml,
		"core/v1/secrets.yaml",
	)
}

func coreV1SecretsYaml() (*asset, error) {
	bytes, err := coreV1SecretsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/secrets.yaml", size: 336, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ServiceaccountsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x31\x4f\xc4\x30\x0c\x85\xf7\xfc\x0a\xeb\xf6\xeb\xa9\x1b\xca\x86\xc4\xcc\x00\x88\xdd\xb8\x16\x44\x97\xc4\x96\x9d\xe6\xf7\xa3\x5e\x01\x45\x15\xb7\xbe\x7c\xef\xe5\x33\x6a\x7a\x67\xf3\x24\x35\x42\xe1\x86\x13\xaa\x3a\xc9\xc2\x13\x49\xb9\xf4\x19\xb3\x7e\xe1\x1c\xae\xa9\x2e\x11\x5e\xd8\x65\x35\xe2\x27\x76\xb2\xa4\x4d\x2c\x6c\x9d\x05\x1b\xc6\x00\x40\xc6\xd8\x92\xd4\xb7\x54\xd8\x1b\x16\x8d\x50\xd7\x9c\x03\x40\xc6\x0f\xce\xbe\x31\x00\xd7\x07\x9f\x92\x5c\x3e\x4d\x56\x8d\x70\x3a\x8d\xe1\xfe\xcd\x2b\x5b\x4f\xc4\x8f\x44\xb2\xd6\x36\xbe\xdb\x8f\x40\x04\xdf\x19\xdc\x19\x1f\xa1\xfe\x7b\x4f\x9f\x03\x40\xc5\xc2\x11\x48\x8c\xcf\x7d\x3e\x1f\x6b\xae\x4c\x9b\xd6\xdf\xf0\x6d\xe8\xe0\x76\x4f\x6a\x9f\xfe\xcf\xc4\x49\x94\x23\x3c\x63\x61\x57\x24\x5e\x6e\xe9\x28\xf6\x1d\x00\x00\xff\xff\x3e\x3b\x1a\xf4\x78\x01\x00\x00")

func coreV1ServiceaccountsYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ServiceaccountsYaml,
		"core/v1/serviceaccounts.yaml",
	)
}

func coreV1ServiceaccountsYaml() (*asset, error) {
	bytes, err := coreV1ServiceaccountsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/serviceaccounts.yaml", size: 376, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _coreV1ServicesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\xbd\x6e\xf3\x30\x0c\xdc\xfd\x14\x84\xf7\x38\xf0\xf6\x41\xf3\x37\xb6\x45\xd1\x04\xdd\x59\x9a\x48\x84\xe8\x0f\xa2\x62\x20\x6f\x5f\xc8\x92\x1d\x3b\x01\x8a\x4e\xf5\x66\xf2\x8e\x77\xd4\x11\x83\xfe\xe4\x28\xda\x3b\x05\x96\x13\x76\x18\x82\x90\x1f\xb8\x23\x6f\xf7\x63\x8f\x26\x9c\xb1\x6f\x2e\xda\x0d\x0a\x3e\x58\xfc\x35\x12\xff\x67\xa1\xa8\x43\xf2\xb1\xc9\x9c\x01\x13\xaa\x06\x80\x22\x63\xd2\xde\x1d\xb5\x65\x49\x68\x83\x02\x77\x35\xa6\x01\x30\xf8\xc5\x46\x32\x06\xe0\xf2\x4f\x3a\xed\xf7\xa7\xe8\xaf\x41\x41\xdb\xae\x8b\x45\xe6\xc0\x71\xd4\xc4\xeb\x46\xac\xca\x0a\xa4\x34\x65\xdd\x1d\xe7\x0d\xc6\xbe\x01\x70\x68\x59\x01\xf9\xc8\xbb\xb1\xdf\x2d\x78\x09\x4c\xd9\xc1\x32\x6a\x9a\xf0\x60\xe3\x49\xbf\x0c\xdb\x88\x0a\xf9\xc0\x0a\xde\xd0\xb2\x04\x24\x1e\xa6\xea\xd6\x03\x79\xe7\x98\xf2\x63\xd4\xad\x77\x90\x30\x9e\x38\x95\xbf\xbb\xf2\xf2\xbb\xe5\x97\xef\xbe\x75\xf0\x83\xd4\x72\xba\x65\xf5\x57\x4c\x74\x3e\xb0\x61\xca\x29\x94\x8e\x9b\x1d\xbd\x63\x3a\x2b\x68\xe7\x6c\xba\xa5\xd1\x56\xa4\x54\x62\x05\xe6\xa7\xe9\xe6\x5a\xfb\xa3\x5f\xc8\xf7\xf1\x4b\xd3\x03\x07\xe3\x6f\x96\x5d\xfa\x5b\xef\x50\xbd\xbf\xe4\xab\x5b\xc3\x12\xdb\x60\x30\x71\xb7\x4c\x2f\x87\x99\x69\x17\xbe\x1d\x27\xd6\x12\xd8\x26\xa0\xe7\x4d\x1f\xc2\xf9\x0e\x00\x00\xff\xff\xc7\x92\xe0\x41\x49\x03\x00\x00")

func coreV1ServicesYamlBytes() ([]byte, error) {
	return bindataRead(
		_coreV1ServicesYaml,
		"core/v1/services.yaml",
	)
}

func coreV1ServicesYaml() (*asset, error) {
	bytes, err := coreV1ServicesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "core/v1/services.yaml", size: 841, mode: os.FileMode(420), modTime: time.Unix(1565764398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _eventsK8sIoV1beta1EventsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x7f\x20\x0e\xbc\x15\x9a\xdb\xb5\x43\x51\x74\x67\xe8\x43\x2b\x44\x12\x09\x51\xf6\xf7\x17\x76\x9c\xc2\x48\x91\xf5\x9e\x78\xf7\xc4\x96\xbe\xd0\x3c\x69\x8d\x54\xd0\x79\x60\x33\x17\x9d\x30\x88\x96\xf3\x32\x72\xb6\x1f\x1e\xc3\x35\xd5\x29\xd2\x07\x5c\xe7\x26\x78\x85\x4b\x4b\xd6\xb5\x85\xf5\x66\xe2\xce\x31\x10\x49\x03\xf7\xa4\xf5\x33\x15\x78\xe7\x62\x91\xea\x9c\x73\x20\xca\x7c\x41\xf6\xf5\x0d\xd1\xf5\xc5\x87\xa4\xe7\xef\xa6\xb3\x45\xc2\x82\xda\x7d\xb8\x85\x47\x7e\x5b\x7c\x5b\xf1\x31\x6e\xbb\xc2\xfd\xf2\xc8\x96\xfb\x47\x96\xf1\x82\xce\x63\x20\xaa\x5c\xf0\x30\x72\xda\xe9\x69\x2f\x70\x83\xac\x66\x7f\xcd\x5b\xe5\x73\xbd\x07\xaf\xe3\xc2\x16\xb8\xa8\x21\xd2\x3b\x17\xb8\xb1\x60\xda\xd2\x7f\x6e\xbf\x01\x00\x00\xff\xff\x2a\x6a\x43\xa0\x79\x01\x00\x00")

func eventsK8sIoV1beta1EventsYamlBytes() ([]byte, error) {
	return bindataRead(
		_eventsK8sIoV1beta1EventsYaml,
		"events.k8s.io/v1beta1/events.yaml",
	)
}

func eventsK8sIoV1beta1EventsYaml() (*asset, error) {
	bytes, err := eventsK8sIoV1beta1EventsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "events.k8s.io/v1beta1/events.yaml", size: 377, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1DaemonsetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xbd\x6e\xc3\x30\x0c\x84\x77\x3f\x05\x5f\x20\x0e\xbc\x15\x9a\x33\x77\x68\x8b\xee\x8c\x74\x68\x85\x48\x22\x21\xd2\x46\x1f\xbf\xb0\x93\x16\xee\x4f\x56\x9d\xee\xbe\x8f\xac\xf9\x15\xdd\xb2\xb4\x40\x15\xce\x23\xab\x5a\x94\x84\x31\x4a\x3d\x2e\x13\x17\x7d\xe7\x69\xb8\xe4\x96\x02\x3d\xc1\x64\xee\x11\x27\x58\xec\x59\x5d\xfa\xb0\x76\x12\x3b\x87\x81\x28\x76\xb0\x67\x69\x2f\xb9\xc2\x9c\xab\x06\x6a\x73\x29\x03\x51\xe1\x33\x8a\xad\x7f\x88\x2e\x0f\x36\x66\x39\xbe\x75\x99\x35\x10\x3e\x1c\x6d\xc5\xdb\x3e\xbc\xe2\x4e\x8c\x2a\xed\x19\xbe\x8f\xfa\xcd\x21\x50\xda\x62\x83\xff\xa8\x2e\x5f\xd7\x2c\xd3\x19\xce\xd3\x40\xd4\xb8\x62\x4f\x3a\xdc\xa2\xc3\x6e\xc1\x14\x71\xf5\xfb\x9e\xdf\x36\xef\x48\xfe\x63\x77\x65\xfc\x52\xb2\x28\x8a\x40\x8f\x5c\x61\xca\x11\x69\x7b\xfd\x63\xf8\x19\x00\x00\xff\xff\x2a\x1b\x7e\x1d\x84\x01\x00\x00")

func extensionsV1beta1DaemonsetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1DaemonsetsYaml,
		"extensions/v1beta1/daemonsets.yaml",
	)
}

func extensionsV1beta1DaemonsetsYaml() (*asset, error) {
	bytes, err := extensionsV1beta1DaemonsetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/daemonsets.yaml", size: 388, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1DeploymentsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4d\x6e\x03\x21\x0c\x46\xf7\x9c\xc2\x17\xc8\x44\xb3\xab\x58\x67\xdd\x45\x55\x75\xef\xc0\xa7\x16\x05\xb0\x85\x99\x51\x7b\xfb\x6a\x92\x74\x44\xff\xb6\x3c\xec\xf7\xcc\x9a\x5e\xd0\x2c\x49\xf5\x54\xd0\x79\x62\x55\x0b\x12\x31\x05\x29\xc7\x75\xe6\xac\x6f\x3c\xbb\x4b\xaa\xd1\xd3\x13\x4c\x96\x16\x70\x82\x85\x96\xb4\x4b\x73\xdb\x4c\xe4\xce\xde\x11\x85\x06\xee\x49\xea\x73\x2a\xb0\xce\x45\x3d\xd5\x25\x67\x47\x94\xf9\x8c\x6c\xdb\x1f\xa2\xcb\x83\x4d\x49\x8e\xaf\x4d\x16\xf5\x84\xf7\x8e\xba\xe9\x6d\x84\x37\xdd\x09\x9a\xe5\xa3\xa0\xf6\x91\xb5\x7b\x84\xa7\xb8\xf3\x6f\xc3\xeb\xd7\x3d\xeb\x7c\x46\xe7\xd9\x11\x55\x2e\x18\x5d\x87\x3b\x3a\x8c\x2b\x4c\x11\xb6\xc4\x5d\x70\x5d\xfa\x4f\xe7\x5f\x81\x37\xcb\xcf\x2a\x0b\xa2\xf0\xf4\xc8\x05\xa6\x1c\x10\xaf\xaf\xbf\x22\x3f\x03\x00\x00\xff\xff\x04\x5d\xcd\xbe\x89\x01\x00\x00")

func extensionsV1beta1DeploymentsYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1DeploymentsYaml,
		"extensions/v1beta1/deployments.yaml",
	)
}

func extensionsV1beta1DeploymentsYaml() (*asset, error) {
	bytes, err := extensionsV1beta1DeploymentsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/deployments.yaml", size: 393, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1IngressesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x4e\xc3\x30\x10\x86\x77\x3f\xc5\xbd\x40\x53\x65\x43\x9e\x59\x58\x18\x10\x62\xbf\x3a\xbf\x8a\x55\xdb\x77\xba\x73\x22\x1e\x1f\xa5\x29\xd0\xa8\x62\xf5\x67\xff\xdf\x67\xd6\xfc\x01\xf3\x2c\x2d\x52\x45\xe7\x81\x55\x3d\xc9\x84\x21\x49\x3d\x2e\x23\x17\xfd\xe4\x31\x5c\x72\x9b\x22\xbd\xc1\x65\xb6\x84\x67\x78\xb2\xac\x5d\x2c\xac\x6f\x26\xee\x1c\x03\x51\x32\x70\xcf\xd2\xde\x73\x85\x77\xae\x1a\xa9\xcd\xa5\x04\xa2\xc2\x27\x14\x5f\xef\x10\x5d\x9e\x7c\xc8\x72\x3c\x9b\xcc\x1a\x09\x5f\x1d\x6d\xd5\xfb\x3d\xdc\x74\x2f\xed\x6c\xf0\x1d\xb0\x5b\x41\xa4\xbc\x41\xec\xf0\xf2\xf3\x95\x65\x3c\xa1\xf3\x18\x88\x1a\x57\xdc\x6b\x0e\x37\x74\xf8\x1b\x70\x45\x5a\xdb\x7e\xc7\xaf\x93\xff\x04\x3e\x94\x6d\x82\x7d\x8e\x27\x51\x44\x7a\xe5\x0a\x57\x4e\x98\xae\xa7\x0f\x75\xdf\x01\x00\x00\xff\xff\xc2\x34\x55\xf1\x7d\x01\x00\x00")

func extensionsV1beta1IngressesYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1IngressesYaml,
		"extensions/v1beta1/ingresses.yaml",
	)
}

func extensionsV1beta1IngressesYaml() (*asset, error) {
	bytes, err := extensionsV1beta1IngressesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/ingresses.yaml", size: 381, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1NetworkpoliciesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x8a\x7d\x81\xa6\xca\x0d\xf9\xcc\xb9\x42\x08\x71\xdf\x3a\x23\xb0\x62\x7b\x57\x5e\x27\xc0\xdb\x23\x37\x05\x85\x9f\x5e\x3d\xe3\xf9\xbe\x65\x8d\xcf\xa8\x16\xa5\x78\xca\x68\x3c\xb0\xaa\x05\x99\x30\x04\xc9\xc7\x75\xe4\xa4\xaf\x3c\xba\x39\x96\xc9\xd3\x23\x4c\x96\x1a\x70\x0f\x0b\x35\x6a\x93\xea\xfa\x9f\x89\x1b\x7b\x47\x14\x2a\xb8\x45\x29\x4f\x31\xc3\x1a\x67\xf5\x54\x96\x94\x1c\x51\xe2\x33\x92\xf5\x0e\xd1\x7c\x67\x43\x94\xe3\x4b\x95\x45\x3d\xe1\xbd\xa1\x74\xbc\xed\xc3\x0d\x77\x42\x7b\x93\x3a\x3f\x48\x8a\xe1\x63\x1f\xd7\xab\x87\xa7\xb2\x55\xb4\x57\x22\x7e\x6c\xac\x5f\x67\xad\xe3\x19\x8d\x47\x47\x54\x38\x63\x8f\x3c\x5c\xa3\xc3\xef\x19\x53\x84\x6e\xfb\x0d\xba\x0c\xdf\x50\xbe\xe1\xba\xc1\xfe\x13\xb4\x20\x0a\x4f\x27\xce\x30\xe5\x80\xe9\xf2\xfa\xc7\xf7\x33\x00\x00\xff\xff\x8c\x62\x72\xac\x9b\x01\x00\x00")

func extensionsV1beta1NetworkpoliciesYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1NetworkpoliciesYaml,
		"extensions/v1beta1/networkpolicies.yaml",
	)
}

func extensionsV1beta1NetworkpoliciesYaml() (*asset, error) {
	bytes, err := extensionsV1beta1NetworkpoliciesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/networkpolicies.yaml", size: 411, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1PodsecuritypoliciesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x41\x4e\x03\x31\x0c\x45\xf7\x39\x85\x2f\xd0\xa9\x66\x87\xb2\x85\x03\x54\x80\xd8\xbb\x89\x05\x56\x93\xd8\x8a\x93\x11\xbd\x3d\x4a\x3b\xa0\x41\xd0\x6e\xf3\x7f\xfe\x7b\x46\xe5\x37\xaa\xc6\x52\x3c\x64\x6a\x38\xa1\xaa\x05\x89\x34\x05\xc9\xfb\x65\xc6\xa4\x1f\x38\xbb\x13\x97\xe8\xe1\x99\x4c\x7a\x0d\xf4\x44\x16\x2a\x6b\x93\xea\xc6\x9f\x88\x0d\xbd\x03\x08\x95\xb0\xb1\x94\x57\xce\x64\x0d\xb3\x7a\x28\x3d\x25\x07\x90\xf0\x48\xc9\x46\x07\xe0\xf4\x60\x13\xcb\xfe\xbd\x4a\x57\x0f\xf4\xd9\xa8\x0c\xbc\x6d\xc3\x2b\xee\x20\xf1\x85\x42\xaf\xdc\xce\x07\x49\x1c\xce\xdb\x4a\x5d\x5d\x3c\xa8\x44\x5b\x6b\x3a\x6a\x4c\xbf\xb6\x96\xef\xf3\x96\xf9\x48\x0d\x67\x07\x50\x30\xd3\x16\xbd\x5b\xa3\xdd\x7f\x53\xa6\x14\x86\xf9\x0f\xf0\x32\x7e\x43\xff\x8e\xf7\x15\x7a\x4b\xd6\x82\x28\x79\x78\x4c\xdd\x1a\xd5\xcb\xd3\x1f\xf1\xaf\x00\x00\x00\xff\xff\xf2\x74\xa4\x4d\xac\x01\x00\x00")

func extensionsV1beta1PodsecuritypoliciesYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1PodsecuritypoliciesYaml,
		"extensions/v1beta1/podsecuritypolicies.yaml",
	)
}

func extensionsV1beta1PodsecuritypoliciesYaml() (*asset, error) {
	bytes, err := extensionsV1beta1PodsecuritypoliciesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/podsecuritypolicies.yaml", size: 428, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1ReplicasetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x3d\x6e\xc3\x30\x0c\x46\x77\x9d\x82\x17\x88\x03\x6f\x85\xe6\xce\x1d\xda\xa2\x3b\x23\x7f\x68\x85\x48\x22\x21\xd2\x46\x8f\x5f\x38\x89\x0b\xf7\x27\xab\x9e\xc8\xf7\xc8\x9a\xdf\xd0\x2d\x4b\x8b\x54\xe1\x3c\xb0\xaa\x25\x99\x30\x24\xa9\xc7\x65\xe4\xa2\x1f\x3c\x86\x73\x6e\x53\xa4\x67\x98\xcc\x3d\xe1\x11\x96\x7a\x56\x97\x1e\xd6\x99\x89\x9d\x63\x20\x4a\x1d\xec\x59\xda\x6b\xae\x30\xe7\xaa\x91\xda\x5c\x4a\x20\x2a\x7c\x42\xb1\xf5\x0f\xd1\xf9\xc1\x86\x2c\xc7\xf7\x2e\xb3\x46\xc2\xa7\xa3\xad\x7a\xdb\xc3\x4d\xa7\x25\x27\x7e\x81\xef\x59\xbf\x45\x44\xea\x57\x6e\xf0\x1f\xc3\xcb\x76\xcf\x32\x9e\xe0\x3c\x06\xa2\xc6\x15\x7b\xd7\xe1\x86\x0e\xfb\x15\xa6\x48\x6b\xe2\xb7\xe0\xb2\xf4\x4e\xe7\x7f\x81\x57\xcb\xef\x2a\x4b\xa2\x88\xf4\xc4\x15\xa6\x9c\x30\x5d\x5e\xff\x44\x7e\x05\x00\x00\xff\xff\x36\x4f\xbc\x78\x89\x01\x00\x00")

func extensionsV1beta1ReplicasetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1ReplicasetsYaml,
		"extensions/v1beta1/replicasets.yaml",
	)
}

func extensionsV1beta1ReplicasetsYaml() (*asset, error) {
	bytes, err := extensionsV1beta1ReplicasetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/replicasets.yaml", size: 393, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _extensionsV1beta1ReplicationcontrollersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x41\x4e\x03\x31\x0c\x45\xf7\x39\x85\x2f\xd0\xa9\x66\x87\xb2\xa5\x6b\x16\x08\xb1\x77\x3d\x16\x44\x4d\x62\xcb\xce\x8c\xe0\xf6\x28\x43\x5b\x06\xa1\xa2\x6e\xe3\x9f\xff\xdf\x43\x4d\xaf\x6c\x9e\xa4\x46\x28\xdc\x70\x40\x55\x27\x99\x78\x20\x29\xfb\x65\xc4\xac\xef\x38\x86\x53\xaa\x53\x84\x67\x76\x99\x8d\xf8\xc0\x4e\x96\xb4\x89\x85\xfe\x67\xc2\x86\x31\x00\x90\x31\xb6\x24\xf5\x25\x15\xf6\x86\x45\x23\xd4\x39\xe7\x00\x90\xf1\xc8\xd9\x7b\x06\xe0\xf4\xe0\x43\x92\xfd\x9b\xc9\xac\x11\xf8\xa3\x71\xed\xf3\xbe\x3d\x5e\xe6\x34\x27\x5a\x2b\x1f\xa5\x36\x93\x9c\xd9\x0e\x73\x29\x9f\xdb\xac\x9d\xa1\x22\xd8\x4f\x9e\xae\xf9\x5f\xbd\xcb\x45\x75\x19\x8f\xdc\x70\x0c\x00\x15\x0b\x6f\x31\x76\xe7\xd3\xee\x46\x9b\x2b\x53\x17\xb9\xce\xae\xfd\x37\x6c\xee\xd1\xf8\x06\xf8\x87\xdd\x49\x94\x23\x3c\x61\x61\x57\x24\x9e\xd6\xd7\x3f\x2a\x5f\x01\x00\x00\xff\xff\xfa\x6d\x1a\xaa\xca\x01\x00\x00")

func extensionsV1beta1ReplicationcontrollersYamlBytes() ([]byte, error) {
	return bindataRead(
		_extensionsV1beta1ReplicationcontrollersYaml,
		"extensions/v1beta1/replicationcontrollers.yaml",
	)
}

func extensionsV1beta1ReplicationcontrollersYaml() (*asset, error) {
	bytes, err := extensionsV1beta1ReplicationcontrollersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "extensions/v1beta1/replicationcontrollers.yaml", size: 458, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbComV1alpha1PostgresesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x93\xcb\xaa\xdb\x40\x0c\x86\xf7\x7e\x0a\xe1\x7d\x1c\xb2\x2b\xb3\xee\xb2\x97\xd0\x86\xee\xe5\xb1\xea\x0c\x99\x8b\x98\x91\x5d\x4a\xe9\xbb\x97\x89\x2f\x99\x24\x6e\xe9\x81\x03\x27\xbb\x48\x1a\xe9\xd3\xaf\xdf\xc8\xe6\x1b\xc5\x64\x82\x57\xe0\x48\xb0\x41\xe6\xa4\x43\x47\x8d\x0e\x6e\x3f\x1e\xd0\xf2\x19\x0f\xd5\xc5\xf8\x4e\xc1\x17\x4a\x61\x88\x9a\xde\x53\xd2\xd1\xb0\x84\x58\xe5\x37\x1d\x0a\xaa\x0a\x40\x47\x42\x31\xc1\x9f\x8c\xa3\x24\xe8\x58\x81\x1f\xac\xad\x00\x2c\xb6\x64\x53\xae\x01\xb8\xbc\x4b\x8d\x09\xfb\x3e\x86\x81\x15\x5c\x86\x96\xba\x36\x0f\x2b\x93\xd3\xb8\x63\x48\xd2\x47\x4a\x65\x26\xce\x08\x0a\x78\xce\xde\xe7\xc7\x65\x99\x15\x1d\xc0\xa3\xa3\x72\xd2\x6e\xc9\xed\x8a\x1e\x89\x49\x67\xc0\x75\xc0\xb5\xeb\x5f\x28\x9f\xf1\xa6\x19\x0f\x4c\x49\x07\x26\x05\x9f\xd0\x51\x62\xd4\xd4\x5d\xa3\x5b\x88\x3a\x78\x4f\x3a\x8b\x37\xab\xb4\x03\xc1\xd8\x93\x4c\xff\x0a\x94\x7c\x9f\x35\x56\xb4\x5a\x63\x37\x85\x92\xa0\xd0\xf7\xc1\x26\x92\xe5\x89\xfc\xcc\x40\x1f\x51\xf4\x39\x53\xcd\x51\xbf\x00\x1e\x51\xce\x0a\xea\xe5\xa8\xcd\x9a\xa8\x8b\xca\x13\x39\xb6\x28\xa4\xa0\xfe\xd5\xdc\x95\xfe\x5e\xca\x2c\x8d\x64\x15\x7c\xfe\xe1\x29\xfe\x7b\x9d\xba\xfe\xdf\x65\x28\x8e\x46\xd3\xc6\x22\x5f\xc9\x92\xce\x5e\x7c\xe9\x32\x69\x7e\x78\x83\x72\xb9\xdf\x87\xc2\xac\xd3\xef\x76\xfe\x2d\x67\x3e\xd5\x4c\x5e\x78\x05\x71\x90\x59\xa3\xa0\x0d\xfd\xdd\x67\xb9\xa5\xd8\xea\xa4\x47\xdd\x90\xb9\x35\xbe\x33\xbe\x7f\x4b\x0f\xfc\x09\x00\x00\xff\xff\x07\x6e\x48\x65\x67\x04\x00\x00")

func kubedbComV1alpha1PostgresesYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubedbComV1alpha1PostgresesYaml,
		"kubedb.com/v1alpha1/postgreses.yaml",
	)
}

func kubedbComV1alpha1PostgresesYaml() (*asset, error) {
	bytes, err := kubedbComV1alpha1PostgresesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb.com/v1alpha1/postgreses.yaml", size: 1127, mode: os.FileMode(420), modTime: time.Unix(1565764398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metaAppscodeComV1alpha1ResourcedescriptorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x6e\x85\x30\x0c\x45\xf7\x7c\x85\x7f\xe0\x81\xd8\xaa\xcc\x9d\x3b\x54\x55\x77\xd7\xb1\xda\x88\x24\xb6\xe2\xc0\xf7\x57\xd0\x82\x90\x1e\xb0\x45\xf1\xb1\xef\x3d\xa8\xf1\x93\xab\x45\x29\x1e\x32\x37\xec\x50\xd5\x48\x02\x77\x24\xb9\x9f\x07\x4c\xfa\x83\x83\x1b\x63\x09\x1e\xde\xd9\x64\xaa\xc4\xaf\x6c\x54\xa3\x36\xa9\x6e\xd9\x09\xd8\xd0\x3b\x00\xaa\x8c\x2d\x4a\xf9\x88\x99\xad\x61\x56\x0f\x65\x4a\xc9\x01\x24\xfc\xe2\x64\x0b\x03\x30\xbe\x58\x17\xa5\xff\xae\x32\xe9\x49\xe6\x91\xb9\x4c\x3d\x30\xf5\x7f\xea\x61\x7b\x85\x9d\xb3\x23\x38\x6f\x9a\xbb\x14\x40\xc1\xcc\x27\x1d\x1e\x1b\xf2\x38\xbb\x69\xca\xb4\xa8\xec\xc9\x6b\xca\xbd\xcf\x9d\xc8\x5f\x89\xab\xf6\x46\xa2\xec\xe1\x0d\x33\x9b\x22\x71\x58\x7f\x9f\x65\x7e\x03\x00\x00\xff\xff\xff\x3c\x96\x8d\xc9\x01\x00\x00")

func metaAppscodeComV1alpha1ResourcedescriptorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_metaAppscodeComV1alpha1ResourcedescriptorsYaml,
		"meta.appscode.com/v1alpha1/resourcedescriptors.yaml",
	)
}

func metaAppscodeComV1alpha1ResourcedescriptorsYaml() (*asset, error) {
	bytes, err := metaAppscodeComV1alpha1ResourcedescriptorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "meta.appscode.com/v1alpha1/resourcedescriptors.yaml", size: 457, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringCoreosComV1PrometheusesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xcd\x4e\xc3\x30\x0c\xbe\xe7\x29\xac\x71\x6e\xa7\xde\x50\xce\x5c\x41\x13\x20\xee\x26\x35\x6b\xb4\x36\x8e\x62\xb7\xd2\xde\x1e\x65\x4b\xb7\x56\x6c\x02\x7a\x6a\xec\xcf\xdf\x8f\x13\x8c\xfe\x83\x92\x78\x0e\x16\x06\x52\xac\x31\x46\x71\xdc\x52\xed\x78\xd8\x4e\x0d\xf6\xb1\xc3\xc6\x1c\x7c\x68\x2d\xbc\x92\xf0\x98\x1c\x3d\x91\xb8\xe4\xa3\x72\x32\x79\xa6\x45\x45\x6b\x00\x7a\xfc\xa4\x5e\xf2\x1f\xc0\xe1\x51\x6a\xcf\xdb\x7d\xe2\x31\x5a\x18\x38\x78\xe5\xe4\xc3\xbe\x76\x9c\x88\x25\xb3\x2f\x71\x67\xfe\x5d\xe2\x81\xb4\xa3\x51\x96\xbd\x54\x54\x2d\xc4\x4b\x9f\x56\x88\x69\x4e\x30\x35\x06\x20\xe0\x40\x77\x24\xab\xa9\xa9\x56\x24\x12\xc9\x65\xc3\x17\x8d\x13\xed\xaf\xae\xd7\x82\xb3\xe4\x4f\x7b\xb7\x52\x89\xe3\x48\x16\x5e\x70\x20\x89\xe8\xa8\x35\x00\x8e\x43\x20\xa7\x9e\x43\x59\xdf\x03\x54\x20\x8a\x4a\x5f\x63\x2f\xa4\xd7\x1a\xa5\xc9\x3b\x3a\x9d\x2b\x50\x4c\x7b\xd2\xf3\xc4\x9f\x7c\xdf\xf2\x9e\xbf\xeb\x8a\x8b\x40\xa1\x90\x82\xd0\x63\xb6\xfc\x8c\xea\xba\x37\xea\xc9\xe5\x9b\x3f\x77\xc2\x1c\x63\x87\xda\x59\xd8\xe4\x85\xd6\xab\xe2\xa6\x20\xa5\x0c\x2e\x81\x73\x2d\x63\x0e\x74\x7c\x3f\xe5\x29\x2b\xa8\x4a\x1c\x73\xcf\xf6\xe2\x5d\x70\x2b\xff\x9d\x29\x41\xc5\x7c\x07\x00\x00\xff\xff\x2a\x63\x0c\x4a\x02\x03\x00\x00")

func monitoringCoreosComV1PrometheusesYamlBytes() ([]byte, error) {
	return bindataRead(
		_monitoringCoreosComV1PrometheusesYaml,
		"monitoring.coreos.com/v1/prometheuses.yaml",
	)
}

func monitoringCoreosComV1PrometheusesYaml() (*asset, error) {
	bytes, err := monitoringCoreosComV1PrometheusesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring.coreos.com/v1/prometheuses.yaml", size: 770, mode: os.FileMode(420), modTime: time.Unix(1565764398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _monitoringCoreosComV1ServicemonitorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x41\x6f\x83\x30\x0c\x85\xef\xfc\x0a\xab\x3b\x43\xc5\x6d\xe2\xbc\x6b\xa7\x69\x9d\x76\xf7\x8c\xd7\x46\x85\x38\x8a\x5d\xa4\xfe\xfb\x29\x10\x5a\xda\xad\xda\xc6\x09\x92\xe7\xf7\x3e\x3f\x81\xc1\xbd\x73\x54\x27\xbe\x81\x9e\x0d\x2b\x0c\x41\x49\x5a\xae\x48\xfa\xf5\x50\x63\x17\xf6\x58\x17\x07\xe7\xdb\x06\x5e\x59\xe5\x18\x89\x9f\x58\x29\xba\x60\x12\x8b\x34\xd3\xa2\x61\x53\x00\x74\xf8\xc1\x9d\xa6\x37\x80\xc3\xa3\x56\x4e\xd6\xbb\x28\xc7\xd0\x40\x2f\xde\x99\x44\xe7\x77\x15\x49\x64\xd1\xe4\xbe\xd4\x4d\xfe\x5b\x8e\x83\x23\xde\x4c\xea\xe5\x7d\xcc\xc9\x0d\xe8\xa4\xc9\x8e\xba\x14\x0d\xf3\x22\x43\x5d\x00\x78\xec\xf9\x4e\x72\x39\xd4\xe5\xad\x8f\x06\xa6\x84\x7e\x4e\x1a\x9d\x7f\xe5\xbf\xce\x9c\x53\x7f\x84\xbc\xb7\xa2\x92\x04\x6e\xe0\x19\x7b\xd6\x80\xc4\x6d\x01\x40\xe2\x3d\x93\x39\xf1\xb9\xcf\x07\x28\x41\x0d\x8d\x3f\x8f\x9d\xb2\x8d\x67\x25\x18\xc6\x1d\xdb\xa4\xb8\xe0\x9e\x3f\x6f\xe1\xd2\xf3\xad\x49\xcd\x57\x76\x4a\x14\x1b\x34\xda\x6f\xb9\x63\x9a\xf1\xa6\x9d\x46\xb2\x17\xb4\x7d\x03\xab\x54\x55\x75\x75\xb8\xca\x4a\xcd\x83\x4b\xe1\x7c\x96\x34\x07\x3e\xbd\x8d\xc8\x79\xab\x72\x2e\x38\xfd\x75\xc5\x3d\xe8\x0b\x72\xe4\xd0\x39\x42\x65\xd3\xab\xf9\x3f\x8c\x06\x69\xff\x3d\x73\x6e\xe8\x2b\x00\x00\xff\xff\x60\x77\x33\x6f\x26\x03\x00\x00")

func monitoringCoreosComV1ServicemonitorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_monitoringCoreosComV1ServicemonitorsYaml,
		"monitoring.coreos.com/v1/servicemonitors.yaml",
	)
}

func monitoringCoreosComV1ServicemonitorsYaml() (*asset, error) {
	bytes, err := monitoringCoreosComV1ServicemonitorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "monitoring.coreos.com/v1/servicemonitors.yaml", size: 806, mode: os.FileMode(420), modTime: time.Unix(1565764398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _networkingK8sIoV1NetworkpoliciesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4e\xc3\x30\x0c\x86\xef\x79\x0a\xbf\xc0\x3a\xf5\x86\x72\xe6\x3c\x21\x84\xb8\x1b\xd7\x1a\x56\x93\xd8\x8a\xd3\x22\xde\x1e\x65\x85\xa9\x43\xb0\x6b\xfe\x2f\xff\xff\x19\x4d\x5e\xb9\xba\x68\x89\x90\xb9\xe1\x80\x66\x4e\x3a\xf1\x40\x9a\x8f\xeb\x88\xc9\xde\x71\x0c\xb3\x94\x29\xc2\x33\xbb\x2e\x95\xf8\x91\x9d\xaa\x58\xd3\x1a\xfa\x9f\x09\x1b\xc6\x00\x40\x95\xb1\x89\x96\x17\xc9\xec\x0d\xb3\x45\x28\x4b\x4a\x01\x20\xe1\x1b\x27\xef\x0c\xc0\xfc\xe0\x83\xe8\xf1\x5c\x75\xe9\x00\xb7\x0f\xad\xb3\x94\xf3\xb0\x05\x7b\x66\x5b\x3d\x6d\xc8\x93\x26\xa1\xcf\x7d\x5c\xbf\x75\xae\x2d\xd6\x11\x61\xdf\x43\xeb\xcf\x75\xeb\x18\x00\x0a\x66\xfe\x63\xf4\xb0\x8e\x87\xdf\x1d\x6e\x4c\xdd\xf8\xba\x72\x69\xbd\xaf\xfd\x8f\xef\xcd\xea\x8d\xa4\x93\x1a\x47\x38\x61\x66\x37\x24\x9e\x2e\xaf\x7b\xe7\xaf\x00\x00\x00\xff\xff\x35\xdc\x49\xef\xa1\x01\x00\x00")

func networkingK8sIoV1NetworkpoliciesYamlBytes() ([]byte, error) {
	return bindataRead(
		_networkingK8sIoV1NetworkpoliciesYaml,
		"networking.k8s.io/v1/networkpolicies.yaml",
	)
}

func networkingK8sIoV1NetworkpoliciesYaml() (*asset, error) {
	bytes, err := networkingK8sIoV1NetworkpoliciesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "networking.k8s.io/v1/networkpolicies.yaml", size: 417, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _networkingK8sIoV1beta1IngressesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7f\x05\x7f\x20\x0e\xbc\x15\x9a\xbb\x74\xe9\x50\x14\xdd\x19\xf9\xe0\x0a\x96\x44\x82\x94\xdd\xdf\x2f\x1c\xa7\x6d\x82\x14\x59\x75\xa7\x7b\x8f\xac\xe9\x03\xe6\x49\x6a\xa0\x82\xc6\x3d\xab\x7a\x94\x11\x7d\x94\x72\x5c\x07\xce\xfa\xc9\x43\x37\xa7\x3a\x06\x7a\x83\xcb\x62\x11\xcf\xf0\x68\x49\x9b\x58\xb7\xfd\x19\xb9\x71\xe8\x88\xa2\x81\x5b\x92\xfa\x9e\x0a\xbc\x71\xd1\x40\x75\xc9\xb9\x23\xca\x7c\x42\xf6\xad\x43\x34\x3f\x79\x9f\xe4\x38\x99\x2c\x5b\x01\xed\x4b\x6c\x4e\x75\xea\xf7\xe0\xba\xb3\x53\x5f\xea\x64\x70\xbf\x0e\xec\x22\x12\x28\xed\x21\x6e\xe2\xf5\xe7\xa2\x75\x38\xa1\xf1\xd0\x11\x55\x2e\xf8\x87\x76\xb8\x34\x0e\x7f\x3b\xae\x88\x9b\xe9\x2f\xe3\xbc\xfc\x58\xf7\xce\x73\xc7\xdd\xca\x79\x14\x45\xa0\x57\x2e\x70\xe5\x88\xf1\xfc\x7a\xe7\xfa\x1d\x00\x00\xff\xff\x05\x59\xb0\xa1\x92\x01\x00\x00")

func networkingK8sIoV1beta1IngressesYamlBytes() ([]byte, error) {
	return bindataRead(
		_networkingK8sIoV1beta1IngressesYaml,
		"networking.k8s.io/v1beta1/ingresses.yaml",
	)
}

func networkingK8sIoV1beta1IngressesYaml() (*asset, error) {
	bytes, err := networkingK8sIoV1beta1IngressesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "networking.k8s.io/v1beta1/ingresses.yaml", size: 402, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nodeK8sIoV1beta1RuntimeclassesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x41\x6e\x03\x21\x0c\x45\xf7\x9c\xc2\x17\xc8\x44\xb3\xab\xd8\xa6\x27\xa8\xaa\xee\x1d\xe6\xab\x45\x01\x8c\x6c\x98\xf3\x57\x64\xa6\x55\xd2\x26\x5b\xfb\xe1\xf7\xe0\x1a\x3f\xa0\x16\xa5\x78\xca\x68\x3c\x71\xad\x16\x64\xc1\x14\x24\x1f\xd7\x99\x53\xfd\xe2\xd9\x5d\x62\x59\x3c\xbd\xc1\xa4\x6b\xc0\x2b\x2c\x68\xac\x4d\xd4\x8d\x37\x0b\x37\xf6\x8e\x28\x28\xb8\x45\x29\xef\x31\xc3\x1a\xe7\xea\xa9\xf4\x94\x1c\x51\xe2\x33\x92\x0d\x86\xe8\xf2\x62\x53\x94\xe3\xa7\x4a\x1f\xc0\x50\x6d\xa3\xdb\xed\xee\xeb\xa5\xc5\x8c\x53\x62\xb3\xdb\xad\xee\x1d\x9e\x74\x23\xc2\x20\x70\xc7\xac\x3f\xbf\x5a\xe7\x33\x1a\xcf\x8e\xa8\x70\xc6\x9d\xf1\xb0\xef\x0e\x7f\xce\x58\x45\x18\xb1\xbf\x9e\xeb\xe1\x67\xc5\x8f\x53\x37\xd9\x83\x3e\x0b\x52\xe1\xe9\x94\xba\x35\xe8\x75\xf4\xaf\xf5\x3b\x00\x00\xff\xff\x2f\xf6\x17\x71\x96\x01\x00\x00")

func nodeK8sIoV1beta1RuntimeclassesYamlBytes() ([]byte, error) {
	return bindataRead(
		_nodeK8sIoV1beta1RuntimeclassesYaml,
		"node.k8s.io/v1beta1/runtimeclasses.yaml",
	)
}

func nodeK8sIoV1beta1RuntimeclassesYaml() (*asset, error) {
	bytes, err := nodeK8sIoV1beta1RuntimeclassesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "node.k8s.io/v1beta1/runtimeclasses.yaml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _policyV1beta1PoddisruptionbudgetsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x41\x6a\x03\x31\x0c\x45\xf7\x3e\x85\x2e\x90\x84\xd9\x15\x2f\x4b\xd6\xa5\x94\xd2\xbd\xc6\x16\xa9\x88\x6d\x09\xcb\x1e\xe8\xed\x8b\xa7\x99\x30\xd0\xb4\xdb\xef\xe7\xff\x9f\x50\xf9\x83\xaa\xb1\x14\x0f\x99\x1a\x1e\x51\xd5\x82\x44\x3a\x06\xc9\xa7\x65\xc2\xa4\x9f\x38\xb9\x2b\x97\xe8\xe1\x8d\x4c\x7a\x0d\x74\x26\x0b\x95\xb5\x49\x75\xe3\x4f\xc4\x86\xde\x01\x84\x4a\xd8\x58\xca\x3b\x67\xb2\x86\x59\x3d\x94\x9e\x92\x03\x48\x38\x53\xb2\xc1\x00\x5c\x9f\xec\xc8\x72\xba\x54\xe9\xea\x41\x25\x71\xf8\xda\x3f\xfc\x4c\xbd\x4a\x3c\xb3\xd5\xae\xa3\xf0\xb9\xc7\x0b\xb5\x3d\x54\x6f\x26\xa3\x20\xc6\x3b\x38\xaf\xa0\xed\xc9\x65\xbb\x6e\x99\x66\x6a\x38\x39\x80\x82\x99\xb6\xe5\xc3\x2d\x3e\x3c\xec\x31\xa5\x30\xac\xef\x73\x6b\xf3\x03\xf5\x7f\x9d\xb7\xbd\x3f\x44\x2d\x88\x92\x87\x17\xcc\x64\x8a\x81\xe2\x9a\xfe\xf2\xfe\x0e\x00\x00\xff\xff\x17\x65\x2e\xa7\xaa\x01\x00\x00")

func policyV1beta1PoddisruptionbudgetsYamlBytes() ([]byte, error) {
	return bindataRead(
		_policyV1beta1PoddisruptionbudgetsYaml,
		"policy/v1beta1/poddisruptionbudgets.yaml",
	)
}

func policyV1beta1PoddisruptionbudgetsYaml() (*asset, error) {
	bytes, err := policyV1beta1PoddisruptionbudgetsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "policy/v1beta1/poddisruptionbudgets.yaml", size: 426, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _policyV1beta1PodsecuritypoliciesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x41\x6a\xc3\x30\x10\x45\xf7\x3a\xc5\x5c\x20\x0e\xde\x15\x6d\xdb\x03\x84\xb6\x74\x3f\x91\x86\x76\x88\xa4\x19\x34\x92\x21\xb7\x2f\x76\xed\x12\xb0\xc9\x76\xf4\xff\x7f\x4f\xa8\xfc\x45\xd5\x58\x8a\x87\x4c\x0d\x07\x54\xb5\x20\x91\x86\x20\xf9\x3c\x8d\x98\xf4\x07\x47\x77\xe3\x12\x3d\xbc\x93\x49\xaf\x81\xde\xc8\x42\x65\x6d\x52\xdd\xdc\x89\xd8\xd0\x3b\x80\x50\x09\x1b\x4b\xf9\xe4\x4c\xd6\x30\xab\x87\xd2\x53\x72\x00\x09\xaf\x94\x6c\xce\x00\xdc\x5e\x6c\x60\x39\x7f\x57\xe9\xea\x41\x25\x71\xb8\x3f\x3e\xfc\xa1\x2e\x12\x3f\x28\xf4\xca\xed\x7e\xd9\x45\xea\xea\x31\xd7\xa3\xad\xb1\x65\x89\xc9\x1e\x83\xd3\xf6\xb5\x69\xbc\x52\xc3\xd1\x01\x14\xcc\xb4\x61\x4f\xeb\xf9\x74\x34\x63\x4a\x61\x36\xfe\x87\x2d\xc3\x07\xda\x4f\x7c\x37\xd8\xb1\xa4\x05\x51\xf2\xf0\x9a\xba\x35\xaa\xcb\x69\x27\xfc\x1b\x00\x00\xff\xff\x21\x7a\x0c\xe3\xa0\x01\x00\x00")

func policyV1beta1PodsecuritypoliciesYamlBytes() ([]byte, error) {
	return bindataRead(
		_policyV1beta1PodsecuritypoliciesYaml,
		"policy/v1beta1/podsecuritypolicies.yaml",
	)
}

func policyV1beta1PodsecuritypoliciesYaml() (*asset, error) {
	bytes, err := policyV1beta1PodsecuritypoliciesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "policy/v1beta1/podsecuritypolicies.yaml", size: 416, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rbacAuthorizationK8sIoV1ClusterrolebindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x6e\xf3\x30\x0c\x85\x77\x9d\x82\x17\x88\x02\x6f\x3f\x34\xfe\xed\x09\x82\xa2\x3b\x2d\x13\x09\x11\x49\x14\x48\xc9\x43\x4f\x5f\xd8\x6a\x03\x0f\x6d\xd0\x95\xf8\x1e\xdf\xfb\xb0\xf2\x3b\xa9\xb1\x94\x00\x99\x1a\x7a\xac\xd5\xa2\x2c\xe4\xa3\xe4\xf3\x3a\x61\xaa\x37\x9c\xdc\x9d\xcb\x12\xe0\x42\x26\x5d\x23\xbd\x92\x45\xe5\xda\x44\xdd\x96\x59\xb0\x61\x70\x00\x51\x09\x1b\x4b\x79\xe3\x4c\xd6\x30\xd7\x00\xa5\xa7\xe4\x00\x12\xce\x94\x6c\x63\x00\xee\xff\xcc\xb3\x9c\xaf\x2a\xbd\x06\xd0\x19\xa3\xc7\xde\x6e\xa2\xfc\xb1\xa7\xfd\x00\x8e\xec\x68\x7f\x49\xdd\x1a\xe9\x45\x12\xfd\xe7\xb2\x70\xb9\x1e\x19\xfd\xda\x16\x20\x0e\x4e\x25\xd1\x3c\x38\x3b\x82\xeb\xb7\xee\x3a\x39\x80\x82\x99\x9e\xac\x38\xad\xd3\xe9\xa7\x7f\x56\x29\x6e\x3a\x8f\xd6\xbd\xe1\x6f\x4e\xcf\x64\xc6\x9c\xdf\x0c\x2c\x4a\xa5\x47\x76\x3f\x1d\x6d\x3e\x03\x00\x00\xff\xff\xf7\xab\x01\xcb\xcc\x01\x00\x00")

func rbacAuthorizationK8sIoV1ClusterrolebindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_rbacAuthorizationK8sIoV1ClusterrolebindingsYaml,
		"rbac.authorization.k8s.io/v1/clusterrolebindings.yaml",
	)
}

func rbacAuthorizationK8sIoV1ClusterrolebindingsYaml() (*asset, error) {
	bytes, err := rbacAuthorizationK8sIoV1ClusterrolebindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rbac.authorization.k8s.io/v1/clusterrolebindings.yaml", size: 460, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rbacAuthorizationK8sIoV1ClusterrolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x41\x6e\xeb\x30\x0c\x44\xf7\x3a\x05\x2f\x10\x05\xde\x7d\x68\xfb\x7b\x82\xa0\xe8\x9e\xa1\x89\x46\x88\x24\x12\xa4\xe4\x45\x4f\x5f\xd8\x6e\x03\x17\x2d\x8a\x6e\xa5\x37\x33\x8f\xa8\xf9\x85\xcd\xb3\xb4\x04\x95\x3b\x46\x54\x75\x92\x99\x23\x49\x3d\x2f\x13\x16\xbd\xe1\x14\xee\xb9\xcd\x09\x2e\xec\x32\x8c\xf8\x89\x9d\x2c\x6b\x17\x0b\x6b\x66\xc6\x8e\x29\x00\x90\x31\xf6\x2c\xed\x39\x57\xf6\x8e\x55\x13\xb4\x51\x4a\x00\x28\x78\xe5\xe2\x2b\x03\x70\xff\xe7\x31\xcb\xf9\xd5\x64\x68\x02\xbb\x22\x45\x1c\xfd\x26\x96\xdf\xb6\x74\xdc\x81\x23\xbb\xaf\xff\x2f\xc3\x3b\xdb\x45\x0a\x1f\x3f\xed\x43\x2a\x01\xed\x80\x49\x61\x3f\x12\xcb\xe7\x81\xcb\x14\x00\x1a\x56\xfe\x65\xf7\xb4\x4c\xa7\x2f\x45\xae\x4c\xab\xf9\x63\x67\xab\xfe\x9b\xfe\x8f\xde\xbb\xc0\x37\x59\x27\x51\x7e\xd0\xdb\xd3\x51\xfc\x3d\x00\x00\xff\xff\x53\x34\x1c\xa4\xa9\x01\x00\x00")

func rbacAuthorizationK8sIoV1ClusterrolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_rbacAuthorizationK8sIoV1ClusterrolesYaml,
		"rbac.authorization.k8s.io/v1/clusterroles.yaml",
	)
}

func rbacAuthorizationK8sIoV1ClusterrolesYaml() (*asset, error) {
	bytes, err := rbacAuthorizationK8sIoV1ClusterrolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rbac.authorization.k8s.io/v1/clusterroles.yaml", size: 425, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rbacAuthorizationK8sIoV1RolebindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x85\x5f\xe0\x72\xea\x86\x32\x22\x66\x06\x84\xd8\xdd\xc4\xba\xb3\x2e\x89\x2d\x3b\xed\xc0\xd3\xa3\xf6\x0a\x2a\x08\x21\xd6\xe4\xfb\xff\xff\x33\x2a\xbf\x91\x39\x4b\x8b\x50\xa9\x63\x40\x55\x4f\x92\x29\x24\xa9\xe7\x65\xc4\xa2\x57\x1c\x87\x1b\xb7\x1c\xe1\x85\x5c\x66\x4b\xf4\x44\x9e\x8c\xb5\x8b\x0d\x6b\x26\x63\xc7\x38\x00\x24\x23\xec\x2c\xed\x95\x2b\x79\xc7\xaa\x11\xda\x5c\xca\x00\x50\x70\xa2\xe2\x2b\x03\x70\x7b\xf0\xc0\x72\xbe\x98\xcc\x1a\xc1\x26\x4c\x01\xe7\x7e\x15\xe3\xf7\x2d\x1d\xee\xc0\x91\xdd\xd7\xa5\xd0\x23\xb7\xcc\xed\x72\xfc\xb4\x5d\x2a\x82\x49\xa1\xe9\x0e\xf8\x91\x58\x3e\x0f\x5c\xc6\x01\xa0\x61\xa5\x3f\x76\x4f\xcb\x78\xfa\x56\xe4\x4a\x69\x35\xff\xda\xd9\xaa\xff\xa7\xff\xab\xf7\x2e\xf0\x53\xd6\x93\x28\x45\x78\xc6\x4a\xae\x98\x28\x6f\xaf\x47\xf7\x8f\x00\x00\x00\xff\xff\x7c\x54\x11\x42\xac\x01\x00\x00")

func rbacAuthorizationK8sIoV1RolebindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_rbacAuthorizationK8sIoV1RolebindingsYaml,
		"rbac.authorization.k8s.io/v1/rolebindings.yaml",
	)
}

func rbacAuthorizationK8sIoV1RolebindingsYaml() (*asset, error) {
	bytes, err := rbacAuthorizationK8sIoV1RolebindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rbac.authorization.k8s.io/v1/rolebindings.yaml", size: 428, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rbacAuthorizationK8sIoV1RolesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x3d\x6e\xc3\x30\x0c\x85\x77\x9d\x82\x17\x88\x02\x6f\x85\xe6\xce\x1d\x8a\xa2\x3b\x43\x13\x8d\x10\x49\x24\x48\xd9\x43\x4f\x5f\xd8\x71\x03\x75\x29\xb2\x3e\xbe\x9f\x8f\xa8\xf9\x93\xcd\xb3\xb4\x04\x95\x3b\x46\x54\x75\x92\x99\x23\x49\x3d\xaf\x13\x16\xbd\xe2\x14\x6e\xb9\xcd\x09\xde\xd9\x65\x31\xe2\x57\x76\xb2\xac\x5d\x2c\x6c\x99\x19\x3b\xa6\x00\x40\xc6\xd8\xb3\xb4\x8f\x5c\xd9\x3b\x56\x4d\xd0\x96\x52\x02\x40\xc1\x0b\x17\xdf\x3c\x00\xb7\x17\x8f\x59\xce\x5f\x26\x8b\x26\xb0\x0b\x52\xc4\xa5\x5f\xc5\xf2\xf7\x9e\x8e\x77\xc3\xe8\x3d\xd6\xa5\xf0\xa8\xda\x41\x93\xc0\xa4\xb0\x8f\xa7\xf5\xf7\xa5\x75\x0a\x00\x0d\x2b\xff\xb3\x74\x5a\xa7\xd3\xbd\xc1\x95\x69\x83\x7c\x34\xef\x9d\xcf\x91\xfe\x45\x3c\x26\x1f\x5c\x4e\xa2\x9c\xe0\x0d\x2b\xbb\x22\xf1\xbc\xab\x23\xe6\x4f\x00\x00\x00\xff\xff\x9e\x21\x5b\xb3\x89\x01\x00\x00")

func rbacAuthorizationK8sIoV1RolesYamlBytes() ([]byte, error) {
	return bindataRead(
		_rbacAuthorizationK8sIoV1RolesYaml,
		"rbac.authorization.k8s.io/v1/roles.yaml",
	)
}

func rbacAuthorizationK8sIoV1RolesYaml() (*asset, error) {
	bytes, err := rbacAuthorizationK8sIoV1RolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rbac.authorization.k8s.io/v1/roles.yaml", size: 393, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulingK8sIoV1PriorityclassesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4e\xc3\x30\x0c\x40\xef\xf9\x0a\xff\xc0\x3a\xf5\x86\x72\x1d\x1f\x80\x10\xe2\x6e\x52\x6b\xb3\x96\xc4\x96\x9d\x54\xe2\xef\x51\xd7\x81\x0a\x2a\xbb\xc6\x2f\x7e\xcf\xa8\xfc\x4e\xe6\x2c\x35\x42\xa1\x86\x03\xaa\x7a\x92\x89\x86\x24\xe5\x38\x8f\x98\xf5\x82\x63\xb8\x72\x9d\x22\xbc\x92\x4b\xb7\x44\xcf\xe4\xc9\x58\x9b\x58\x58\xfe\x4c\xd8\x30\x06\x80\x64\x84\x8d\xa5\xbe\x71\x21\x6f\x58\x34\x42\xed\x39\x07\x80\x8c\x1f\x94\x7d\x61\x00\xae\x4f\x3e\xb0\x1c\xcf\x26\x5d\x23\x78\xba\xd0\xd4\x33\xd7\xf3\xb0\x0e\xb6\xcc\x6a\x7d\x31\x16\xe3\xf6\x79\xca\xe8\xbe\x1d\xdb\x3d\x27\x82\xde\x91\xb4\x20\xf4\x0b\x9a\xbf\xaf\x9b\xc7\x00\x50\xb1\xd0\x8e\xf4\x30\x8f\x87\xbf\x3b\x5c\x29\x2d\xc5\x3f\x96\xdb\xd6\xc7\xd9\xff\xf4\xae\xd6\xbd\x48\x4f\xa2\x14\xe1\x94\xbb\x37\xb2\xdb\xd3\x36\xf8\x2b\x00\x00\xff\xff\xa4\xa9\x26\x74\x9e\x01\x00\x00")

func schedulingK8sIoV1PriorityclassesYamlBytes() ([]byte, error) {
	return bindataRead(
		_schedulingK8sIoV1PriorityclassesYaml,
		"scheduling.k8s.io/v1/priorityclasses.yaml",
	)
}

func schedulingK8sIoV1PriorityclassesYaml() (*asset, error) {
	bytes, err := schedulingK8sIoV1PriorityclassesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduling.k8s.io/v1/priorityclasses.yaml", size: 414, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageK8sIoV1StorageclassesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x41\x4e\x03\x31\x0c\x45\xf7\x39\x85\x2f\xd0\xa9\x66\x87\xb2\x2d\x27\x00\xc4\xde\x78\xac\x12\x35\x89\x2d\x3b\x33\xe7\x47\xe9\x40\x95\x56\xa8\x5b\xfb\xfb\xbf\x67\xd4\xf4\xc9\xe6\x49\x6a\x84\xc2\x0d\x27\x54\x75\x92\x85\x27\x92\x72\xdc\x66\xcc\xfa\x8d\x73\xb8\xa4\xba\x44\x78\x63\x97\xd5\x88\x5f\xd9\xc9\x92\x36\xb1\xd0\x6f\x16\x6c\x18\x03\x00\x19\x63\x4b\x52\x3f\x52\x61\x6f\x58\x34\x42\x5d\x73\x0e\x00\x19\xbf\x38\x7b\xcf\x00\x5c\x5e\x7c\x4a\x72\x3c\x9b\xac\x1a\xc1\x9b\x18\x9e\x79\xda\xa7\x63\x60\x47\xbe\xef\xfb\x53\x46\xf7\x71\x6b\xbf\x2a\xb7\x06\xea\x09\xbe\xcb\x6c\x7f\x8f\x6d\x73\x00\xa8\x58\xf8\x91\x77\xd8\xe6\xc3\xc3\xbd\x2b\x53\x17\xbd\x01\xae\x8d\x4f\x6c\xff\xd7\xbc\xa3\x8d\x6e\x4e\xa2\x1c\xe1\x94\x57\x6f\x6c\xd7\xd1\xe8\xf9\x13\x00\x00\xff\xff\x50\xa4\x91\x4a\x90\x01\x00\x00")

func storageK8sIoV1StorageclassesYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageK8sIoV1StorageclassesYaml,
		"storage.k8s.io/v1/storageclasses.yaml",
	)
}

func storageK8sIoV1StorageclassesYaml() (*asset, error) {
	bytes, err := storageK8sIoV1StorageclassesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "storage.k8s.io/v1/storageclasses.yaml", size: 400, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageK8sIoV1VolumeattachmentsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x4d\x6e\xeb\x30\x0c\x06\xf7\x3a\x05\x2f\x10\x07\xde\x3d\x68\xf7\xd0\x9e\xa0\x28\xb2\x67\x65\x22\x11\x22\x89\x04\x49\xe9\xfc\x85\xed\x36\x30\xfa\xb7\x25\x46\xdf\x8c\x50\xf2\x85\xd4\x32\xb7\x08\x95\x1c\x27\x14\xb1\xc4\x0b\x4d\x89\xeb\x79\xcc\x58\xe4\x86\x73\xb8\xe7\xb6\x44\x78\x21\xe3\xae\x89\x9e\xc9\x92\x66\x71\xd6\xb0\xbe\x59\xd0\x31\x06\x80\xa4\x84\x9e\xb9\xbd\xe6\x4a\xe6\x58\x25\x42\xeb\xa5\x04\x80\x82\x6f\x54\x6c\x65\x00\xee\xff\x6c\xca\x7c\xbe\x2a\x77\x89\x60\xce\x8a\x57\x9a\xf6\xeb\x11\xd8\x95\x17\x2e\xbd\xd2\x7f\x77\x4c\xb7\x4a\xcd\x8f\x84\x7e\xe4\x44\x18\x1b\x85\x0f\xca\x8e\xd8\xf8\xfc\xdf\x98\x03\x40\xc3\x4a\x5f\xb5\xa7\x31\x9f\xbe\x4f\x98\x50\x5a\x93\x1f\x9a\x6d\xf4\x8f\xee\xdf\x83\x77\xe9\xcf\x95\x96\x58\x28\xc2\x53\xe9\xe6\xa4\xdb\xe9\x58\xfc\x1e\x00\x00\xff\xff\xde\x1b\xe3\xbf\xa1\x01\x00\x00")

func storageK8sIoV1VolumeattachmentsYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageK8sIoV1VolumeattachmentsYaml,
		"storage.k8s.io/v1/volumeattachments.yaml",
	)
}

func storageK8sIoV1VolumeattachmentsYaml() (*asset, error) {
	bytes, err := storageK8sIoV1VolumeattachmentsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "storage.k8s.io/v1/volumeattachments.yaml", size: 417, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageK8sIoV1beta1CsidriversYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x17\x88\x03\x6f\x85\xd6\x64\xe9\xda\x16\xdd\x19\x99\x48\x89\x48\x22\x41\xca\x3e\x7f\xe1\xd8\x2d\x84\xb4\xc8\xaa\xff\xf5\xdf\x23\x2a\x7f\x92\x39\x4b\x8d\x50\xa8\xe1\x80\xaa\x9e\x64\xa2\x21\x49\x39\x2e\x23\x66\xfd\xc2\x31\xdc\xb8\x4e\x11\xde\xc8\x65\xb6\x44\x67\xf2\x64\xac\x4d\x2c\xac\x7f\x26\x6c\x18\x03\x40\x32\xc2\xc6\x52\x3f\xb8\x90\x37\x2c\x1a\xa1\xce\x39\x07\x80\x8c\x17\xca\xbe\x76\x00\x6e\x2f\x3e\xb0\x1c\xaf\x26\xb3\x46\xf0\x26\x86\x57\x1a\xb6\xd7\xbe\xb0\x21\x4f\xef\xaf\x67\xe3\x85\xac\x8f\x6c\xf7\x88\x90\x9c\xa7\x7b\xec\x7d\xbe\xfc\x5c\xb4\x8c\x17\x6a\x38\x06\x80\x8a\x85\x1e\x69\x87\x3d\x3e\x74\x2b\xae\x94\x56\xcf\x5f\xc4\x7d\xf7\x89\xec\x3f\x96\x1b\xeb\x41\xcd\x93\x28\x45\x38\xe5\xd9\xdb\xde\xfb\xa3\xf9\x1d\x00\x00\xff\xff\xad\x25\xed\x1d\x8d\x01\x00\x00")

func storageK8sIoV1beta1CsidriversYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageK8sIoV1beta1CsidriversYaml,
		"storage.k8s.io/v1beta1/csidrivers.yaml",
	)
}

func storageK8sIoV1beta1CsidriversYaml() (*asset, error) {
	bytes, err := storageK8sIoV1beta1CsidriversYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "storage.k8s.io/v1beta1/csidrivers.yaml", size: 397, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageK8sIoV1beta1CsinodesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x7f\x20\x0e\xbc\x15\x5a\xd3\xa5\x4b\x87\xb6\xe8\xce\x48\x87\x54\x88\x24\x0a\xa4\xec\xef\x2f\x1c\xa7\x81\x5b\x03\x5d\xef\x8e\x77\x8f\xdc\xd2\x27\xd4\x92\x54\x4f\x05\x9d\x07\x6e\xcd\x82\x44\x0c\x41\xca\x71\x1e\x39\xb7\x2f\x1e\xdd\x35\xd5\xe8\xe9\x0d\x26\x93\x06\x3c\xc3\x82\xa6\xd6\x45\xdd\x72\x13\xb9\xb3\x77\x44\x41\xc1\x3d\x49\xfd\x48\x05\xd6\xb9\x34\x4f\x75\xca\xd9\x11\x65\x3e\x23\xdb\x92\x21\xba\x3e\xd9\x90\xe4\x78\x51\x99\x9a\x27\xeb\xa2\x7c\xc1\xb0\xaa\xdb\xc0\x3a\x79\x7a\x7f\x79\x95\x88\xad\xa1\x77\x0a\x4f\xc1\x52\x95\x08\xdb\xba\xf3\xcf\x37\xf3\x78\x46\xe7\xd1\x11\x55\x2e\xf8\xbb\x74\xb8\xdb\x87\x47\x87\x35\x84\x85\xf0\x51\x7f\x6b\xfd\x07\x73\xc7\xb7\xee\xfc\x82\xb2\x20\x0d\x9e\x4e\x79\xb2\x0e\xbd\x49\x3b\xc0\xef\x00\x00\x00\xff\xff\x41\x3a\x26\x0a\x83\x01\x00\x00")

func storageK8sIoV1beta1CsinodesYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageK8sIoV1beta1CsinodesYaml,
		"storage.k8s.io/v1beta1/csinodes.yaml",
	)
}

func storageK8sIoV1beta1CsinodesYaml() (*asset, error) {
	bytes, err := storageK8sIoV1beta1CsinodesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "storage.k8s.io/v1beta1/csinodes.yaml", size: 387, mode: os.FileMode(420), modTime: time.Unix(1565760734, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations.yaml":   admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml,
	"admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations.yaml": admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml,
	"apiextensions.k8s.io/v1beta1/customresourcedefinitions.yaml":               apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml,
	"apiregistration.k8s.io/v1/apiservices.yaml":                                apiregistrationK8sIoV1ApiservicesYaml,
	"appcatalog.appscode.com/v1alpha1/appbindings.yaml":                         appcatalogAppscodeComV1alpha1AppbindingsYaml,
	"apps/v1/controllerrevisions.yaml":                                          appsV1ControllerrevisionsYaml,
	"apps/v1/daemonsets.yaml":                                                   appsV1DaemonsetsYaml,
	"apps/v1/deployments.yaml":                                                  appsV1DeploymentsYaml,
	"apps/v1/replicasets.yaml":                                                  appsV1ReplicasetsYaml,
	"apps/v1/statefulsets.yaml":                                                 appsV1StatefulsetsYaml,
	"authentication.k8s.io/v1/tokenreviews.yaml":                                authenticationK8sIoV1TokenreviewsYaml,
	"authorization.k8s.io/v1/localsubjectaccessreviews.yaml":                    authorizationK8sIoV1LocalsubjectaccessreviewsYaml,
	"authorization.k8s.io/v1/selfsubjectaccessreviews.yaml":                     authorizationK8sIoV1SelfsubjectaccessreviewsYaml,
	"authorization.k8s.io/v1/selfsubjectrulesreviews.yaml":                      authorizationK8sIoV1SelfsubjectrulesreviewsYaml,
	"authorization.k8s.io/v1/subjectaccessreviews.yaml":                         authorizationK8sIoV1SubjectaccessreviewsYaml,
	"autoscaling/v1/horizontalpodautoscalers.yaml":                              autoscalingV1HorizontalpodautoscalersYaml,
	"batch/v1/jobs.yaml":                                                        batchV1JobsYaml,
	"batch/v1beta1/cronjobs.yaml":                                               batchV1beta1CronjobsYaml,
	"certificates.k8s.io/v1beta1/certificatesigningrequests.yaml":               certificatesK8sIoV1beta1CertificatesigningrequestsYaml,
	"coordination.k8s.io/v1/leases.yaml":                                        coordinationK8sIoV1LeasesYaml,
	"core/v1/bindings.yaml":                                                     coreV1BindingsYaml,
	"core/v1/componentstatuses.yaml":                                            coreV1ComponentstatusesYaml,
	"core/v1/configmaps.yaml":                                                   coreV1ConfigmapsYaml,
	"core/v1/endpoints.yaml":                                                    coreV1EndpointsYaml,
	"core/v1/events.yaml":                                                       coreV1EventsYaml,
	"core/v1/limitranges.yaml":                                                  coreV1LimitrangesYaml,
	"core/v1/namespaces.yaml":                                                   coreV1NamespacesYaml,
	"core/v1/nodes.yaml":                                                        coreV1NodesYaml,
	"core/v1/persistentvolumeclaims.yaml":                                       coreV1PersistentvolumeclaimsYaml,
	"core/v1/persistentvolumes.yaml":                                            coreV1PersistentvolumesYaml,
	"core/v1/pods.yaml":                                                         coreV1PodsYaml,
	"core/v1/podtemplates.yaml":                                                 coreV1PodtemplatesYaml,
	"core/v1/replicationcontrollers.yaml":                                       coreV1ReplicationcontrollersYaml,
	"core/v1/resourcequotas.yaml":                                               coreV1ResourcequotasYaml,
	"core/v1/secrets.yaml":                                                      coreV1SecretsYaml,
	"core/v1/serviceaccounts.yaml":                                              coreV1ServiceaccountsYaml,
	"core/v1/services.yaml":                                                     coreV1ServicesYaml,
	"events.k8s.io/v1beta1/events.yaml":                                         eventsK8sIoV1beta1EventsYaml,
	"extensions/v1beta1/daemonsets.yaml":                                        extensionsV1beta1DaemonsetsYaml,
	"extensions/v1beta1/deployments.yaml":                                       extensionsV1beta1DeploymentsYaml,
	"extensions/v1beta1/ingresses.yaml":                                         extensionsV1beta1IngressesYaml,
	"extensions/v1beta1/networkpolicies.yaml":                                   extensionsV1beta1NetworkpoliciesYaml,
	"extensions/v1beta1/podsecuritypolicies.yaml":                               extensionsV1beta1PodsecuritypoliciesYaml,
	"extensions/v1beta1/replicasets.yaml":                                       extensionsV1beta1ReplicasetsYaml,
	"extensions/v1beta1/replicationcontrollers.yaml":                            extensionsV1beta1ReplicationcontrollersYaml,
	"kubedb.com/v1alpha1/postgreses.yaml":                                       kubedbComV1alpha1PostgresesYaml,
	"meta.appscode.com/v1alpha1/resourcedescriptors.yaml":                       metaAppscodeComV1alpha1ResourcedescriptorsYaml,
	"monitoring.coreos.com/v1/prometheuses.yaml":                                monitoringCoreosComV1PrometheusesYaml,
	"monitoring.coreos.com/v1/servicemonitors.yaml":                             monitoringCoreosComV1ServicemonitorsYaml,
	"networking.k8s.io/v1/networkpolicies.yaml":                                 networkingK8sIoV1NetworkpoliciesYaml,
	"networking.k8s.io/v1beta1/ingresses.yaml":                                  networkingK8sIoV1beta1IngressesYaml,
	"node.k8s.io/v1beta1/runtimeclasses.yaml":                                   nodeK8sIoV1beta1RuntimeclassesYaml,
	"policy/v1beta1/poddisruptionbudgets.yaml":                                  policyV1beta1PoddisruptionbudgetsYaml,
	"policy/v1beta1/podsecuritypolicies.yaml":                                   policyV1beta1PodsecuritypoliciesYaml,
	"rbac.authorization.k8s.io/v1/clusterrolebindings.yaml":                     rbacAuthorizationK8sIoV1ClusterrolebindingsYaml,
	"rbac.authorization.k8s.io/v1/clusterroles.yaml":                            rbacAuthorizationK8sIoV1ClusterrolesYaml,
	"rbac.authorization.k8s.io/v1/rolebindings.yaml":                            rbacAuthorizationK8sIoV1RolebindingsYaml,
	"rbac.authorization.k8s.io/v1/roles.yaml":                                   rbacAuthorizationK8sIoV1RolesYaml,
	"scheduling.k8s.io/v1/priorityclasses.yaml":                                 schedulingK8sIoV1PriorityclassesYaml,
	"storage.k8s.io/v1/storageclasses.yaml":                                     storageK8sIoV1StorageclassesYaml,
	"storage.k8s.io/v1/volumeattachments.yaml":                                  storageK8sIoV1VolumeattachmentsYaml,
	"storage.k8s.io/v1beta1/csidrivers.yaml":                                    storageK8sIoV1beta1CsidriversYaml,
	"storage.k8s.io/v1beta1/csinodes.yaml":                                      storageK8sIoV1beta1CsinodesYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"admissionregistration.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"mutatingwebhookconfigurations.yaml":   &bintree{admissionregistrationK8sIoV1beta1MutatingwebhookconfigurationsYaml, map[string]*bintree{}},
			"validatingwebhookconfigurations.yaml": &bintree{admissionregistrationK8sIoV1beta1ValidatingwebhookconfigurationsYaml, map[string]*bintree{}},
		}},
	}},
	"apiextensions.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"customresourcedefinitions.yaml": &bintree{apiextensionsK8sIoV1beta1CustomresourcedefinitionsYaml, map[string]*bintree{}},
		}},
	}},
	"apiregistration.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"apiservices.yaml": &bintree{apiregistrationK8sIoV1ApiservicesYaml, map[string]*bintree{}},
		}},
	}},
	"appcatalog.appscode.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"appbindings.yaml": &bintree{appcatalogAppscodeComV1alpha1AppbindingsYaml, map[string]*bintree{}},
		}},
	}},
	"apps": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"controllerrevisions.yaml": &bintree{appsV1ControllerrevisionsYaml, map[string]*bintree{}},
			"daemonsets.yaml":          &bintree{appsV1DaemonsetsYaml, map[string]*bintree{}},
			"deployments.yaml":         &bintree{appsV1DeploymentsYaml, map[string]*bintree{}},
			"replicasets.yaml":         &bintree{appsV1ReplicasetsYaml, map[string]*bintree{}},
			"statefulsets.yaml":        &bintree{appsV1StatefulsetsYaml, map[string]*bintree{}},
		}},
	}},
	"authentication.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"tokenreviews.yaml": &bintree{authenticationK8sIoV1TokenreviewsYaml, map[string]*bintree{}},
		}},
	}},
	"authorization.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"localsubjectaccessreviews.yaml": &bintree{authorizationK8sIoV1LocalsubjectaccessreviewsYaml, map[string]*bintree{}},
			"selfsubjectaccessreviews.yaml":  &bintree{authorizationK8sIoV1SelfsubjectaccessreviewsYaml, map[string]*bintree{}},
			"selfsubjectrulesreviews.yaml":   &bintree{authorizationK8sIoV1SelfsubjectrulesreviewsYaml, map[string]*bintree{}},
			"subjectaccessreviews.yaml":      &bintree{authorizationK8sIoV1SubjectaccessreviewsYaml, map[string]*bintree{}},
		}},
	}},
	"autoscaling": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"horizontalpodautoscalers.yaml": &bintree{autoscalingV1HorizontalpodautoscalersYaml, map[string]*bintree{}},
		}},
	}},
	"batch": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"jobs.yaml": &bintree{batchV1JobsYaml, map[string]*bintree{}},
		}},
		"v1beta1": &bintree{nil, map[string]*bintree{
			"cronjobs.yaml": &bintree{batchV1beta1CronjobsYaml, map[string]*bintree{}},
		}},
	}},
	"certificates.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"certificatesigningrequests.yaml": &bintree{certificatesK8sIoV1beta1CertificatesigningrequestsYaml, map[string]*bintree{}},
		}},
	}},
	"coordination.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"leases.yaml": &bintree{coordinationK8sIoV1LeasesYaml, map[string]*bintree{}},
		}},
	}},
	"core": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"bindings.yaml":               &bintree{coreV1BindingsYaml, map[string]*bintree{}},
			"componentstatuses.yaml":      &bintree{coreV1ComponentstatusesYaml, map[string]*bintree{}},
			"configmaps.yaml":             &bintree{coreV1ConfigmapsYaml, map[string]*bintree{}},
			"endpoints.yaml":              &bintree{coreV1EndpointsYaml, map[string]*bintree{}},
			"events.yaml":                 &bintree{coreV1EventsYaml, map[string]*bintree{}},
			"limitranges.yaml":            &bintree{coreV1LimitrangesYaml, map[string]*bintree{}},
			"namespaces.yaml":             &bintree{coreV1NamespacesYaml, map[string]*bintree{}},
			"nodes.yaml":                  &bintree{coreV1NodesYaml, map[string]*bintree{}},
			"persistentvolumeclaims.yaml": &bintree{coreV1PersistentvolumeclaimsYaml, map[string]*bintree{}},
			"persistentvolumes.yaml":      &bintree{coreV1PersistentvolumesYaml, map[string]*bintree{}},
			"pods.yaml":                   &bintree{coreV1PodsYaml, map[string]*bintree{}},
			"podtemplates.yaml":           &bintree{coreV1PodtemplatesYaml, map[string]*bintree{}},
			"replicationcontrollers.yaml": &bintree{coreV1ReplicationcontrollersYaml, map[string]*bintree{}},
			"resourcequotas.yaml":         &bintree{coreV1ResourcequotasYaml, map[string]*bintree{}},
			"secrets.yaml":                &bintree{coreV1SecretsYaml, map[string]*bintree{}},
			"serviceaccounts.yaml":        &bintree{coreV1ServiceaccountsYaml, map[string]*bintree{}},
			"services.yaml":               &bintree{coreV1ServicesYaml, map[string]*bintree{}},
		}},
	}},
	"events.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"events.yaml": &bintree{eventsK8sIoV1beta1EventsYaml, map[string]*bintree{}},
		}},
	}},
	"extensions": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"daemonsets.yaml":             &bintree{extensionsV1beta1DaemonsetsYaml, map[string]*bintree{}},
			"deployments.yaml":            &bintree{extensionsV1beta1DeploymentsYaml, map[string]*bintree{}},
			"ingresses.yaml":              &bintree{extensionsV1beta1IngressesYaml, map[string]*bintree{}},
			"networkpolicies.yaml":        &bintree{extensionsV1beta1NetworkpoliciesYaml, map[string]*bintree{}},
			"podsecuritypolicies.yaml":    &bintree{extensionsV1beta1PodsecuritypoliciesYaml, map[string]*bintree{}},
			"replicasets.yaml":            &bintree{extensionsV1beta1ReplicasetsYaml, map[string]*bintree{}},
			"replicationcontrollers.yaml": &bintree{extensionsV1beta1ReplicationcontrollersYaml, map[string]*bintree{}},
		}},
	}},
	"kubedb.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"postgreses.yaml": &bintree{kubedbComV1alpha1PostgresesYaml, map[string]*bintree{}},
		}},
	}},
	"meta.appscode.com": &bintree{nil, map[string]*bintree{
		"v1alpha1": &bintree{nil, map[string]*bintree{
			"resourcedescriptors.yaml": &bintree{metaAppscodeComV1alpha1ResourcedescriptorsYaml, map[string]*bintree{}},
		}},
	}},
	"monitoring.coreos.com": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"prometheuses.yaml":    &bintree{monitoringCoreosComV1PrometheusesYaml, map[string]*bintree{}},
			"servicemonitors.yaml": &bintree{monitoringCoreosComV1ServicemonitorsYaml, map[string]*bintree{}},
		}},
	}},
	"networking.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"networkpolicies.yaml": &bintree{networkingK8sIoV1NetworkpoliciesYaml, map[string]*bintree{}},
		}},
		"v1beta1": &bintree{nil, map[string]*bintree{
			"ingresses.yaml": &bintree{networkingK8sIoV1beta1IngressesYaml, map[string]*bintree{}},
		}},
	}},
	"node.k8s.io": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"runtimeclasses.yaml": &bintree{nodeK8sIoV1beta1RuntimeclassesYaml, map[string]*bintree{}},
		}},
	}},
	"policy": &bintree{nil, map[string]*bintree{
		"v1beta1": &bintree{nil, map[string]*bintree{
			"poddisruptionbudgets.yaml": &bintree{policyV1beta1PoddisruptionbudgetsYaml, map[string]*bintree{}},
			"podsecuritypolicies.yaml":  &bintree{policyV1beta1PodsecuritypoliciesYaml, map[string]*bintree{}},
		}},
	}},
	"rbac.authorization.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"clusterrolebindings.yaml": &bintree{rbacAuthorizationK8sIoV1ClusterrolebindingsYaml, map[string]*bintree{}},
			"clusterroles.yaml":        &bintree{rbacAuthorizationK8sIoV1ClusterrolesYaml, map[string]*bintree{}},
			"rolebindings.yaml":        &bintree{rbacAuthorizationK8sIoV1RolebindingsYaml, map[string]*bintree{}},
			"roles.yaml":               &bintree{rbacAuthorizationK8sIoV1RolesYaml, map[string]*bintree{}},
		}},
	}},
	"scheduling.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"priorityclasses.yaml": &bintree{schedulingK8sIoV1PriorityclassesYaml, map[string]*bintree{}},
		}},
	}},
	"storage.k8s.io": &bintree{nil, map[string]*bintree{
		"v1": &bintree{nil, map[string]*bintree{
			"storageclasses.yaml":    &bintree{storageK8sIoV1StorageclassesYaml, map[string]*bintree{}},
			"volumeattachments.yaml": &bintree{storageK8sIoV1VolumeattachmentsYaml, map[string]*bintree{}},
		}},
		"v1beta1": &bintree{nil, map[string]*bintree{
			"csidrivers.yaml": &bintree{storageK8sIoV1beta1CsidriversYaml, map[string]*bintree{}},
			"csinodes.yaml":   &bintree{storageK8sIoV1beta1CsinodesYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
